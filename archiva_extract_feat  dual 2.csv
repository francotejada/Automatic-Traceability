summary,type
"create (stack_trace:issue {name:'stack trace'}) create (Task:class {name:'Task', favoritecolor: 'green'}) create (stack_trace)-[:Bug]->(Task)",
create (fails_with_error:issue {name:'fails with error'}) create (fails_with_error)-[:Bug]->(Task),
create (Error_with_artifacts:issue {name:'Error with artifacts'}) create (Error_with_artifacts)-[:Bug]->(Task),
create (download_artifact_with_pom:issue {name:'download artifact with pom'}) create (download_artifact_with_pom)-[:Bug]->(Task),
"create (follow_docs:issue {name:'follow docs'}) create (Cache:class {name:'Cache', favoritecolor: 'green'}) create (follow_docs)-[:Bug]->(Cache)",
create (body_pbError_pResource_in_error:issue {name:'body pbError pResource in error'}) create (body_pbError_pResource_in_error)-[:Bug]->(Cache),
create (exist_in_fresh_install:issue {name:'exist in fresh install'}) create (exist_in_fresh_install)-[:Bug]->(Cache),
create (deploydeploy_file:issue {name:'deploydeploy file'}) create (deploydeploy_file)-[:Bug]->(Cache),
create (follow_docs_at_page:issue {name:'follow docs at page'}) create (follow_docs_at_page)-[:Bug]->(Cache),
"create (failure_in_MavenProjectInfoReportsPluginDependencyGraphTest:issue {name:'failure in MavenProjectInfoReportsPluginDependencyGraphTest'}) create (Graph:class {name:'Graph', favoritecolor: 'green'}) create (failure_in_MavenProjectInfoReportsPluginDependencyGraphTest)-[:Bug]->(Graph)",
"create (Node:class {name:'Node', favoritecolor: 'green'}) create (failure_in_MavenProjectInfoReportsPluginDependencyGraphTest)-[:Bug]->(Node)",
"create (graph:class {name:'graph', favoritecolor: 'green'}) create (failure_in_MavenProjectInfoReportsPluginDependencyGraphTest)-[:Bug]->(graph)",
create (requested_policy:issue {name:'requested policy'}) create (requested_policy)-[:Bug]->(Cache),
create (has_log_typo:issue {name:'has log typo'}) create (has_log_typo)-[:Bug]->(Cache),
create (queue_request:issue {name:'queue request'}) create (queue_request)-[:Bug]->(Task),
create (Scan_Repository:issue {name:'Scan Repository'}) create (Scan_Repository)-[:Bug]->(Task),
create (Executing_task_from_queue:issue {name:'Executing task from queue'}) create (Executing_task_from_queue)-[:Bug]->(Task),
"create (TaskExecutor:class {name:'TaskExecutor', favoritecolor: 'green'}) create (queue_request)-[:Bug]->(TaskExecutor)",
create (Scan_Repository)-[:Bug]->(TaskExecutor),
create (Executing_task_from_queue)-[:Bug]->(TaskExecutor),
create (proxying_merging_of_metadata:issue {name:'proxying merging of metadata'}) create (proxying_merging_of_metadata)-[:Bug]->(Task),
create (archiva_proxy:issue {name:'archiva proxy'}) create (archiva_proxy)-[:Bug]->(Task),
create (proxying_merging:issue {name:'proxying merging'}) create (proxying_merging)-[:Bug]->(Task),
create (require_effective_pom_in_high_load:issue {name:'require effective pom in high load'}) create (require_effective_pom_in_high_load)-[:Bug]->(Cache),
create (build_of_effective_pom_starts:issue {name:'build of effective pom starts'}) create (build_of_effective_pom_starts)-[:Bug]->(Cache),
create (require_effective_pom:issue {name:'require effective pom'}) create (require_effective_pom)-[:Bug]->(Cache),
create (Load_Testing:issue {name:'Load Testing'}) create (Load_Testing)-[:Bug]->(Cache),
create (asking_for_pages:issue {name:'asking for pages'}) create (asking_for_pages)-[:Bug]->(Cache),
create (Saving_proxy_connector:issue {name:'Saving proxy connector'}) create (Saving_proxy_connector)-[:Bug]->(Cache),
create (adding_new_property_results_to_HTTP_error:issue {name:'adding new property results to HTTP error'}) create (adding_new_property_results_to_HTTP_error)-[:Bug]->(Cache),
create (stack_trace)-[:Bug]->(Cache),
"create (Registry:class {name:'Registry', favoritecolor: 'green'}) create (Saving_proxy_connector)-[:Bug]->(Registry)",
create (adding_new_property_results_to_HTTP_error)-[:Bug]->(Registry),
create (stack_trace)-[:Bug]->(Registry),
"create (JobRunShell_Job:issue {name:'JobRunShell Job'}) create (Scheduler:class {name:'Scheduler', favoritecolor: 'green'}) create (JobRunShell_Job)-[:Bug]->(Scheduler)",
create (JobRunShell_Job)-[:Bug]->(Task),
create (join_stack_trace_of_test_error:issue {name:'join stack trace of test error'}) create (join_stack_trace_of_test_error)-[:Bug]->(Scheduler),
create (fail_in_SNAPSHOT_Test:issue {name:'fail in SNAPSHOT Test'}) create (fail_in_SNAPSHOT_Test)-[:Bug]->(Scheduler),
create (scheduler_indexing:issue {name:'scheduler indexing'}) create (scheduler_indexing)-[:Bug]->(Scheduler),
create (launch_Maven_command:issue {name:'launch Maven command'}) create (launch_Maven_command)-[:Bug]->(Scheduler),
create (join_stack_trace_of_test_error)-[:Bug]->(Task),
create (fail_in_SNAPSHOT_Test)-[:Bug]->(Task),
create (scheduler_indexing)-[:Bug]->(Task),
create (launch_Maven_command)-[:Bug]->(Task),
create (join_stack_trace_of_test_error)-[:Bug]->(TaskExecutor),
create (fail_in_SNAPSHOT_Test)-[:Bug]->(TaskExecutor),
create (scheduler_indexing)-[:Bug]->(TaskExecutor),
create (launch_Maven_command)-[:Bug]->(TaskExecutor),
create (takes_implementation:issue {name:'takes implementation'}) create (takes_implementation)-[:Bug]->(Scheduler),
create (method_schedulJob:issue {name:'method schedulJob'}) create (method_schedulJob)-[:Bug]->(Scheduler),
create (takes_implementation_In_interface:issue {name:'takes implementation In interface'}) create (takes_implementation_In_interface)-[:Bug]->(Scheduler),
create (having_logs:issue {name:'having logs'}) create (having_logs)-[:Bug]->(Task),
create (Executing_task:issue {name:'Executing task'}) create (Executing_task)-[:Bug]->(Task),
create (having_logs)-[:Bug]->(TaskExecutor),
create (Executing_task)-[:Bug]->(TaskExecutor),
"create (TaskQueue:class {name:'TaskQueue', favoritecolor: 'green'}) create (having_logs)-[:Bug]->(TaskQueue)",
create (Executing_task)-[:Bug]->(TaskQueue),
"create (TaskQueueExecutor:class {name:'TaskQueueExecutor', favoritecolor: 'green'}) create (having_logs)-[:Bug]->(TaskQueueExecutor)",
create (Executing_task)-[:Bug]->(TaskQueueExecutor),
"create (ThreadedTaskQueueExecutor:class {name:'ThreadedTaskQueueExecutor', favoritecolor: 'green'}) create (having_logs)-[:Bug]->(ThreadedTaskQueueExecutor)",
create (Executing_task)-[:Bug]->(ThreadedTaskQueueExecutor),
create (creating_bean_of_init_method:issue {name:'creating bean of init method'}) create (creating_bean_of_init_method)-[:Bug]->(Registry),
create (Injection_of_autowired_dependencies:issue {name:'Injection of autowired dependencies'}) create (Injection_of_autowired_dependencies)-[:Bug]->(Registry),
create (Invalid_Cron:issue {name:'Invalid Cron'}) create (Invalid_Cron)-[:Bug]->(Registry),
create (leads_jetty:issue {name:'leads jetty'}) create (leads_jetty)-[:Bug]->(Registry),
create (creating_bean_of_init_method)-[:Bug]->(Scheduler),
create (Injection_of_autowired_dependencies)-[:Bug]->(Scheduler),
create (Invalid_Cron)-[:Bug]->(Scheduler),
create (leads_jetty)-[:Bug]->(Scheduler),
create (Cache_control_header_with_public:issue {name:'Cache control header with public'}) create (Cache_control_header_with_public)-[:Bug]->(Cache),
create (need_options_for_other_types:issue {name:'need options for other types'}) create (need_options_for_other_types)-[:Bug]->(Cache),
create (cache_control:issue {name:'cache control'}) create (cache_control)-[:Bug]->(Cache),
create (set_cache_control_headers:issue {name:'set cache control headers'}) create (set_cache_control_headers)-[:Bug]->(Cache),
create (exploring_directory_structure_of_archiva_webapp:issue {name:'exploring directory structure of archiva webapp'}) create (exploring_directory_structure_of_archiva_webapp)-[:Bug]->(Cache),
create (webapp_directory:issue {name:'webapp directory'}) create (webapp_directory)-[:Bug]->(Cache),
create (exploring_directory_hierarchy:issue {name:'exploring directory hierarchy'}) create (exploring_directory_hierarchy)-[:Bug]->(Cache),
create (maven_indexes:issue {name:'maven indexes'}) create (maven_indexes)-[:Bug]->(Task),
create (maven_indexes)-[:Bug]->(TaskExecutor),
create (maven_indexes)-[:Bug]->(TaskQueue),
create (maven_indexes)-[:Bug]->(TaskQueueExecutor),
create (maven_indexes)-[:Bug]->(ThreadedTaskQueueExecutor),
create (NTLM_proxy:issue {name:'NTLM proxy'}) create (NTLM_proxy)-[:Bug]->(Cache),
create (switching_to_wagon_http:issue {name:'switching to wagon http'}) create (switching_to_wagon_http)-[:Bug]->(Cache),
create (upgrading_Archiva:issue {name:'upgrading Archiva'}) create (upgrading_Archiva)-[:Bug]->(Cache),
create (According_to_brett:issue {name:'According to brett'}) create (According_to_brett)-[:Bug]->(Cache),
create (need_improvements:issue {name:'need improvements'}) create (need_improvements)-[:Bug]->(Cache),
create (member_of_ProxyManager:issue {name:'member of ProxyManager'}) create (member_of_ProxyManager)-[:Bug]->(Cache),
create (remove_browsable_ArtifactRepositoryFactory:issue {name:'remove browsable ArtifactRepositoryFactory'}) create (remove_browsable_ArtifactRepositoryFactory)-[:Bug]->(Cache),
create (Running_jettyrun:issue {name:'Running jettyrun'}) create (Running_jettyrun)-[:Bug]->(Scheduler),
create (Archiva_plexus:issue {name:'Archiva plexus'}) create (Archiva_plexus)-[:Bug]->(Scheduler),
create (Running_jettyrun_in_archiva_webapp:issue {name:'Running jettyrun in archiva webapp'}) create (Running_jettyrun_in_archiva_webapp)-[:Bug]->(Scheduler),
create (Fiddling_with_database_configuration:issue {name:'Fiddling with database configuration'}) create (Fiddling_with_database_configuration)-[:Bug]->(Scheduler),
create (Running_jettyrun)-[:Bug]->(Task),
create (Archiva_plexus)-[:Bug]->(Task),
create (Running_jettyrun_in_archiva_webapp)-[:Bug]->(Task),
create (Fiddling_with_database_configuration)-[:Bug]->(Task),
create (trying_first_test:issue {name:'trying first test'}) create (trying_first_test)-[:Bug]->(Cache),
create (clean_plugin:issue {name:'clean plugin'}) create (clean_plugin)-[:Bug]->(Cache),
create (trying_first_test_for_Archiva:issue {name:'trying first test for Archiva'}) create (trying_first_test_for_Archiva)-[:Bug]->(Cache),
create (sorting_of_users:issue {name:'sorting of users'}) create (sorting_of_users)-[:Bug]->(Task),
create (Unable_page:issue {name:'Unable page'}) create (Unable_page)-[:Bug]->(Task),
create (sort_users_by_Tasks:issue {name:'sort users by Tasks'}) create (sort_users_by_Tasks)-[:Bug]->(Task),
create (sort_users:issue {name:'sort users'}) create (sort_users)-[:Bug]->(Task),
create (scanning_repository:issue {name:'scanning repository'}) create (scanning_repository)-[:Bug]->(Task),
create (following_exception:issue {name:'following exception'}) create (following_exception)-[:Bug]->(Task),
create (exists_in_database:issue {name:'exists in database'}) create (exists_in_database)-[:Bug]->(Task),
create (Duplicate_for_key:issue {name:'Duplicate for key'}) create (Duplicate_for_key)-[:Bug]->(Task),
create (scanning_repository)-[:Bug]->(TaskExecutor),
create (following_exception)-[:Bug]->(TaskExecutor),
create (exists_in_database)-[:Bug]->(TaskExecutor),
create (Duplicate_for_key)-[:Bug]->(TaskExecutor),
create (scanning_repository)-[:Bug]->(TaskQueue),
create (following_exception)-[:Bug]->(TaskQueue),
create (exists_in_database)-[:Bug]->(TaskQueue),
create (Duplicate_for_key)-[:Bug]->(TaskQueue),
create (scanning_repository)-[:Bug]->(TaskQueueExecutor),
create (following_exception)-[:Bug]->(TaskQueueExecutor),
create (exists_in_database)-[:Bug]->(TaskQueueExecutor),
create (Duplicate_for_key)-[:Bug]->(TaskQueueExecutor),
create (scanning_repository)-[:Bug]->(ThreadedTaskQueueExecutor),
create (following_exception)-[:Bug]->(ThreadedTaskQueueExecutor),
create (exists_in_database)-[:Bug]->(ThreadedTaskQueueExecutor),
create (Duplicate_for_key)-[:Bug]->(ThreadedTaskQueueExecutor),
create (Create_admin_screen:issue {name:'Create admin screen'}) create (Create_admin_screen)-[:Bug]->(Task),
create (Admin_Add:issue {name:'Admin Add'}) create (Admin_Add)-[:Bug]->(Task),
create (Move_Link:issue {name:'Move Link'}) create (Move_Link)-[:Bug]->(Task),
create (add_status_field_to_repositories:issue {name:'add status field to repositories'}) create (add_status_field_to_repositories)-[:Bug]->(Task),
create (do_about_Repository_link:issue {name:'do about Repository link'}) create (do_about_Repository_link)-[:Bug]->(Task),
create (Index_Repository:issue {name:'Index Repository'}) create (Index_Repository)-[:Bug]->(Task),
create (repository_page:issue {name:'repository page'}) create (repository_page)-[:Bug]->(Node),
create (start_Archiva_for_first_time:issue {name:'start Archiva for first time'}) create (start_Archiva_for_first_time)-[:Bug]->(Node),
create (object_in_CompoundRoot:issue {name:'object in CompoundRoot'}) create (object_in_CompoundRoot)-[:Bug]->(Node),
create (reproduce_bug:issue {name:'reproduce bug'}) create (reproduce_bug)-[:Bug]->(Node),
create (logging_for_first_time:issue {name:'logging for first time'}) create (logging_for_first_time)-[:Bug]->(Node),
"create (SimpleNode:class {name:'SimpleNode', favoritecolor: 'green'}) create (repository_page)-[:Bug]->(SimpleNode)",
create (start_Archiva_for_first_time)-[:Bug]->(SimpleNode),
create (object_in_CompoundRoot)-[:Bug]->(SimpleNode),
create (reproduce_bug)-[:Bug]->(SimpleNode),
create (logging_for_first_time)-[:Bug]->(SimpleNode),
create (scanning_repository)-[:Bug]->(Task),
create (Stack_trace:issue {name:'Stack trace'}) create (Stack_trace)-[:Bug]->(Task),
create (ArithmeticException_by__jvm:issue {name:'ArithmeticException by | jvm'}) create (ArithmeticException_by__jvm)-[:Bug]->(Task),
create (scanning_repository)-[:Bug]->(TaskExecutor),
create (Stack_trace)-[:Bug]->(TaskExecutor),
create (ArithmeticException_by__jvm)-[:Bug]->(TaskExecutor),
create (scanning_repository)-[:Bug]->(TaskQueue),
create (Stack_trace)-[:Bug]->(TaskQueue),
create (ArithmeticException_by__jvm)-[:Bug]->(TaskQueue),
create (scanning_repository)-[:Bug]->(TaskQueueExecutor),
create (Stack_trace)-[:Bug]->(TaskQueueExecutor),
create (ArithmeticException_by__jvm)-[:Bug]->(TaskQueueExecutor),
create (scanning_repository)-[:Bug]->(ThreadedTaskQueueExecutor),
create (Stack_trace)-[:Bug]->(ThreadedTaskQueueExecutor),
create (ArithmeticException_by__jvm)-[:Bug]->(ThreadedTaskQueueExecutor),
create (ve_setup:issue {name:'ve setup'}) create (ve_setup)-[:Bug]->(Cache),
create (pom_from_Central_Repository:issue {name:'pom from Central Repository'}) create (pom_from_Central_Repository)-[:Bug]->(Cache),
create (are_behind_firewall:issue {name:'are behind firewall'}) create (are_behind_firewall)-[:Bug]->(Cache),
create (proxy_connector:issue {name:'proxy connector'}) create (proxy_connector)-[:Bug]->(Cache),
create (grant_access_to_outside_world:issue {name:'grant access to outside world'}) create (grant_access_to_outside_world)-[:Bug]->(Cache),
create (handle_request:issue {name:'handle request'}) create (handle_request)-[:Bug]->(Cache),
create (fails_After_time:issue {name:'fails After time'}) create (fails_After_time)-[:Bug]->(Cache),
create (group_null_from_jdo_store:issue {name:'group null from jdo store'}) create (group_null_from_jdo_store)-[:Bug]->(Cache),
create (redback_issue:issue {name:'redback issue'}) create (redback_issue)-[:Bug]->(Cache),
create (Property_xmlns:issue {name:'Property xmlns'}) create (Property_xmlns)-[:Bug]->(Cache),
create (using_JDK_Below:issue {name:'using JDK Below'}) create (using_JDK_Below)-[:Bug]->(Cache),
create (error_during_startup:issue {name:'error during startup'}) create (error_during_startup)-[:Bug]->(Cache),
create (resolve_reference_to_bean_archivaConfiguration:issue {name:'resolve reference to bean archivaConfiguration'}) create (resolve_reference_to_bean_archivaConfiguration)-[:Bug]->(Cache),
"create (CommonsConfigurationRegistry:class {name:'CommonsConfigurationRegistry', favoritecolor: 'green'}) create (Property_xmlns)-[:Bug]->(CommonsConfigurationRegistry)",
create (using_JDK_Below)-[:Bug]->(CommonsConfigurationRegistry),
create (error_during_startup)-[:Bug]->(CommonsConfigurationRegistry),
create (resolve_reference_to_bean_archivaConfiguration)-[:Bug]->(CommonsConfigurationRegistry),
create (Property_xmlns)-[:Bug]->(Graph),
create (using_JDK_Below)-[:Bug]->(Graph),
create (error_during_startup)-[:Bug]->(Graph),
create (resolve_reference_to_bean_archivaConfiguration)-[:Bug]->(Graph),
create (Property_xmlns)-[:Bug]->(Registry),
create (using_JDK_Below)-[:Bug]->(Registry),
create (error_during_startup)-[:Bug]->(Registry),
create (resolve_reference_to_bean_archivaConfiguration)-[:Bug]->(Registry),
create (Property_xmlns)-[:Bug]->(Scheduler),
create (using_JDK_Below)-[:Bug]->(Scheduler),
create (error_during_startup)-[:Bug]->(Scheduler),
create (resolve_reference_to_bean_archivaConfiguration)-[:Bug]->(Scheduler),
create (Property_xmlns)-[:Bug]->(Task),
create (using_JDK_Below)-[:Bug]->(Task),
create (error_during_startup)-[:Bug]->(Task),
create (resolve_reference_to_bean_archivaConfiguration)-[:Bug]->(Task),
create (Using_Archiva_as_proxy:issue {name:'Using Archiva as proxy'}) create (Using_Archiva_as_proxy)-[:Bug]->(Cache),
create (is_on_local_checkout:issue {name:'is on local checkout'}) create (is_on_local_checkout)-[:Bug]->(Cache),
create (Using_Archiva:issue {name:'Using Archiva'}) create (Using_Archiva)-[:Bug]->(Cache),
create (LDAP_authentication:issue {name:'LDAP authentication'}) create (LDAP_authentication)-[:Bug]->(Cache),
create (updating_consumers:issue {name:'updating consumers'}) create (updating_consumers)-[:Bug]->(Cache),
create (Fields_of_UNINDEXED_Terms_DESCRIPTOR_NexusIndex:issue {name:'Fields of UNINDEXED Terms DESCRIPTOR NexusIndex'}) create (Fields_of_UNINDEXED_Terms_DESCRIPTOR_NexusIndex)-[:Bug]->(Task),
create (has_deletions:issue {name:'has deletions'}) create (has_deletions)-[:Bug]->(Task),
create (Lucene_Index:issue {name:'Lucene Index'}) create (Lucene_Index)-[:Bug]->(Task),
"create (TaskExecutionException:class {name:'TaskExecutionException', favoritecolor: 'green'}) create (Fields_of_UNINDEXED_Terms_DESCRIPTOR_NexusIndex)-[:Bug]->(TaskExecutionException)",
create (has_deletions)-[:Bug]->(TaskExecutionException),
create (Lucene_Index)-[:Bug]->(TaskExecutionException),
create (Fields_of_UNINDEXED_Terms_DESCRIPTOR_NexusIndex)-[:Bug]->(TaskExecutor),
create (has_deletions)-[:Bug]->(TaskExecutor),
create (Lucene_Index)-[:Bug]->(TaskExecutor),
create (Fields_of_UNINDEXED_Terms_DESCRIPTOR_NexusIndex)-[:Bug]->(TaskQueue),
create (has_deletions)-[:Bug]->(TaskQueue),
create (Lucene_Index)-[:Bug]->(TaskQueue),
create (Fields_of_UNINDEXED_Terms_DESCRIPTOR_NexusIndex)-[:Bug]->(TaskQueueExecutor),
create (has_deletions)-[:Bug]->(TaskQueueExecutor),
create (Lucene_Index)-[:Bug]->(TaskQueueExecutor),
create (Fields_of_UNINDEXED_Terms_DESCRIPTOR_NexusIndex)-[:Bug]->(ThreadedTaskQueueExecutor),
create (has_deletions)-[:Bug]->(ThreadedTaskQueueExecutor),
create (Lucene_Index)-[:Bug]->(ThreadedTaskQueueExecutor),
create (addingdeleting_artifact:issue {name:'addingdeleting artifact'}) create (addingdeleting_artifact)-[:Bug]->(Cache),
create (adding_supportnetwork_proxies_with_null_values:issue {name:'adding supportnetwork proxies with null values'}) create (adding_supportnetwork_proxies_with_null_values)-[:Bug]->(Cache),
create (repositorylegacy_supportnetwork:issue {name:'repositorylegacy supportnetwork'}) create (repositorylegacy_supportnetwork)-[:Bug]->(Cache),
create (be_in_webapp:issue {name:'be in webapp'}) create (be_in_webapp)-[:Bug]->(Scheduler),
create (keep_approach:issue {name:'keep approach'}) create (keep_approach)-[:Bug]->(Scheduler),
create (metadata_content:issue {name:'metadata content'}) create (metadata_content)-[:Bug]->(Scheduler),
create (adding_information_on_fly:issue {name:'adding information on fly'}) create (adding_information_on_fly)-[:Bug]->(Scheduler),
create (be_in_webapp)-[:Bug]->(Task),
create (keep_approach)-[:Bug]->(Task),
create (metadata_content)-[:Bug]->(Task),
create (adding_information_on_fly)-[:Bug]->(Task),
create (be_in_webapp)-[:Bug]->(TaskExecutor),
create (keep_approach)-[:Bug]->(TaskExecutor),
create (metadata_content)-[:Bug]->(TaskExecutor),
create (adding_information_on_fly)-[:Bug]->(TaskExecutor),
create (process_model_tinymce_pom:issue {name:'process model tinymce pom'}) create (process_model_tinymce_pom)-[:Bug]->(Task),
create (process_model_tinymce_pom)-[:Bug]->(TaskExecutor),
create (process_model_tinymce_pom)-[:Bug]->(TaskQueue),
create (process_model_tinymce_pom)-[:Bug]->(TaskQueueExecutor),
create (process_model_tinymce_pom)-[:Bug]->(ThreadedTaskQueueExecutor),
create (artifact_information:issue {name:'artifact information'}) create (artifact_information)-[:Bug]->(graph),
create (render_dependency_tree_on_information_pages:issue {name:'render dependency tree on information pages'}) create (render_dependency_tree_on_information_pages)-[:Bug]->(graph),
create (remove_dependency_graph:issue {name:'remove dependency graph'}) create (remove_dependency_graph)-[:Bug]->(graph),
create (other_fields:issue {name:'other fields'}) create (other_fields)-[:Bug]->(Task),
create (use_bit_of_memory:issue {name:'use bit of memory'}) create (use_bit_of_memory)-[:Bug]->(Task),
create (reduce_memory:issue {name:'reduce memory'}) create (reduce_memory)-[:Bug]->(Task),
create (productive_Error:issue {name:'productive Error'}) create (productive_Error)-[:Bug]->(Cache),
create (Using_Version:issue {name:'Using Version'}) create (Using_Version)-[:Bug]->(Cache),
create (updating_consumers)-[:Bug]->(Cache),
create (updating_consumers_of_known_content:issue {name:'updating consumers of known content'}) create (updating_consumers_of_known_content)-[:Bug]->(Cache),
create (following_error:issue {name:'following error'}) create (following_error)-[:Bug]->(Cache),
create (uploading_new_artifact:issue {name:'uploading new artifact'}) create (uploading_new_artifact)-[:Bug]->(Cache),
create (fails_with_exception:issue {name:'fails with exception'}) create (fails_with_exception)-[:Bug]->(Task),
create (start_Archiva:issue {name:'start Archiva'}) create (start_Archiva)-[:Bug]->(Task),
create (add_new_repository_on_brand:issue {name:'add new repository on brand'}) create (add_new_repository_on_brand)-[:Bug]->(Task),
create (new_instance:issue {name:'new instance'}) create (new_instance)-[:Bug]->(Task),
create (resolve_reference_to_bean_repositoryContentFactory:issue {name:'resolve reference to bean repositoryContentFactory'}) create (resolve_reference_to_bean_repositoryContentFactory)-[:Bug]->(CommonsConfigurationRegistry),
create (creating_bean:issue {name:'creating bean'}) create (creating_bean)-[:Bug]->(CommonsConfigurationRegistry),
create (NullPointerException_configuration:issue {name:'NullPointerException configuration'}) create (NullPointerException_configuration)-[:Bug]->(CommonsConfigurationRegistry),
create (processing_of_object:issue {name:'processing of object'}) create (processing_of_object)-[:Bug]->(CommonsConfigurationRegistry),
create (resolve_reference_to_bean_repositoryContentFactory)-[:Bug]->(Registry),
create (creating_bean)-[:Bug]->(Registry),
create (NullPointerException_configuration)-[:Bug]->(Registry),
create (processing_of_object)-[:Bug]->(Registry),
create (resolve_reference_to_bean_repositoryContentFactory)-[:Bug]->(Task),
create (creating_bean)-[:Bug]->(Task),
create (NullPointerException_configuration)-[:Bug]->(Task),
create (processing_of_object)-[:Bug]->(Task),
create (Executing_task)-[:Bug]->(Task),
create (processing_file:issue {name:'processing file'}) create (processing_file)-[:Bug]->(Task),
create (complains_On_repository_scan:issue {name:'complains On repository scan'}) create (complains_On_repository_scan)-[:Bug]->(Task),
create (Executing_task)-[:Bug]->(TaskExecutor),
create (processing_file)-[:Bug]->(TaskExecutor),
create (complains_On_repository_scan)-[:Bug]->(TaskExecutor),
create (Executing_task)-[:Bug]->(TaskQueue),
create (processing_file)-[:Bug]->(TaskQueue),
create (complains_On_repository_scan)-[:Bug]->(TaskQueue),
create (Executing_task)-[:Bug]->(TaskQueueExecutor),
create (processing_file)-[:Bug]->(TaskQueueExecutor),
create (complains_On_repository_scan)-[:Bug]->(TaskQueueExecutor),
create (Executing_task)-[:Bug]->(ThreadedTaskQueueExecutor),
create (processing_file)-[:Bug]->(ThreadedTaskQueueExecutor),
create (complains_On_repository_scan)-[:Bug]->(ThreadedTaskQueueExecutor),
create (login_as_admin:issue {name:'login as admin'}) create (login_as_admin)-[:Bug]->(Cache),
create (reaises_error:issue {name:'reaises error'}) create (reaises_error)-[:Bug]->(Cache),
create (admin_user:issue {name:'admin user'}) create (admin_user)-[:Bug]->(Cache),
create (cope_with_versions:issue {name:'cope with versions'}) create (cope_with_versions)-[:Bug]->(Task),
create (exceptions_in_logs:issue {name:'exceptions in logs'}) create (exceptions_in_logs)-[:Bug]->(Task),
create (pom_snippet:issue {name:'pom snippet'}) create (pom_snippet)-[:Bug]->(Task),
create (cope_with_versions)-[:Bug]->(TaskExecutor),
create (exceptions_in_logs)-[:Bug]->(TaskExecutor),
create (pom_snippet)-[:Bug]->(TaskExecutor),
create (cope_with_versions)-[:Bug]->(TaskQueue),
create (exceptions_in_logs)-[:Bug]->(TaskQueue),
create (pom_snippet)-[:Bug]->(TaskQueue),
create (cope_with_versions)-[:Bug]->(TaskQueueExecutor),
create (exceptions_in_logs)-[:Bug]->(TaskQueueExecutor),
create (pom_snippet)-[:Bug]->(TaskQueueExecutor),
create (cope_with_versions)-[:Bug]->(ThreadedTaskQueueExecutor),
create (exceptions_in_logs)-[:Bug]->(ThreadedTaskQueueExecutor),
create (pom_snippet)-[:Bug]->(ThreadedTaskQueueExecutor),
create (following_exception)-[:Bug]->(Task),
create (create_table:issue {name:'create table'}) create (create_table)-[:Bug]->(Task),
create (fails_with_table_error:issue {name:'fails with table error'}) create (fails_with_table_error)-[:Bug]->(Task),
create (following_exception)-[:Bug]->(TaskExecutor),
create (create_table)-[:Bug]->(TaskExecutor),
create (fails_with_table_error)-[:Bug]->(TaskExecutor),
create (following_exception)-[:Bug]->(TaskQueue),
create (create_table)-[:Bug]->(TaskQueue),
create (fails_with_table_error)-[:Bug]->(TaskQueue),
create (following_exception)-[:Bug]->(TaskQueueExecutor),
create (create_table)-[:Bug]->(TaskQueueExecutor),
create (fails_with_table_error)-[:Bug]->(TaskQueueExecutor),
create (following_exception)-[:Bug]->(ThreadedTaskQueueExecutor),
create (create_table)-[:Bug]->(ThreadedTaskQueueExecutor),
create (fails_with_table_error)-[:Bug]->(ThreadedTaskQueueExecutor),
create (Nexus_indexer:issue {name:'Nexus indexer'}) create (Nexus_indexer)-[:Bug]->(Task),
create (Nexus_indexer)-[:Bug]->(TaskExecutor),
create (Nexus_indexer)-[:Bug]->(TaskQueue),
create (Nexus_indexer)-[:Bug]->(TaskQueueExecutor),
create (Nexus_indexer)-[:Bug]->(ThreadedTaskQueueExecutor),
create (using_archive_web_interface:issue {name:'using archive web interface'}) create (using_archive_web_interface)-[:Bug]->(Cache),
create (Long_exception:issue {name:'Long exception'}) create (Long_exception)-[:Bug]->(Cache),
create (setting_property_infoMessage_on_t:issue {name:'setting property infoMessage on t'}) create (setting_property_infoMessage_on_t)-[:Bug]->(Cache),
create (using_archive_web_interface)-[:Bug]->(Node),
create (Long_exception)-[:Bug]->(Node),
create (setting_property_infoMessage_on_t)-[:Bug]->(Node),
create (using_archive_web_interface)-[:Bug]->(SimpleNode),
create (Long_exception)-[:Bug]->(SimpleNode),
create (setting_property_infoMessage_on_t)-[:Bug]->(SimpleNode),
create (exception_code:issue {name:'exception code'}) create (exception_code)-[:Bug]->(Scheduler),
create (starting_Archiva:issue {name:'starting Archiva'}) create (starting_Archiva)-[:Bug]->(Scheduler),
create (Looking_at_MySQL_DB:issue {name:'Looking at MySQL DB'}) create (Looking_at_MySQL_DB)-[:Bug]->(Scheduler),
create (install_Archiva_as_exploded_webapp:issue {name:'install Archiva as exploded webapp'}) create (install_Archiva_as_exploded_webapp)-[:Bug]->(Scheduler),
create (exception_code)-[:Bug]->(Task),
create (starting_Archiva)-[:Bug]->(Task),
create (Looking_at_MySQL_DB)-[:Bug]->(Task),
create (install_Archiva_as_exploded_webapp)-[:Bug]->(Task),
create (copy_artifact_on_file_system:issue {name:'copy artifact on file system'}) create (copy_artifact_on_file_system)-[:Bug]->(Cache),
create (accept_files_GB_Archiva:issue {name:'accept files GB Archiva'}) create (accept_files_GB_Archiva)-[:Bug]->(Cache),
create (result_in_many_request:issue {name:'result in many request'}) create (result_in_many_request)-[:Bug]->(Cache),
create (Using_maven_eclipse_plugin_with_DownloadSourcestrue:issue {name:'Using maven eclipse plugin with DownloadSourcestrue'}) create (Using_maven_eclipse_plugin_with_DownloadSourcestrue)-[:Bug]->(Cache),
create (Many_artifacts:issue {name:'Many artifacts'}) create (Many_artifacts)-[:Bug]->(Cache),
create (errors_on_proxies:issue {name:'errors on proxies'}) create (errors_on_proxies)-[:Bug]->(Cache),
create (Using_maven_eclipse_plugin:issue {name:'Using maven eclipse plugin'}) create (Using_maven_eclipse_plugin)-[:Bug]->(Cache),
create (Consumer_metadata:issue {name:'Consumer metadata'}) create (Consumer_metadata)-[:Bug]->(Task),
create (throws_Invalid_Path:issue {name:'throws Invalid Path'}) create (throws_Invalid_Path)-[:Bug]->(Task),
create (is_with_clean_database:issue {name:'is with clean database'}) create (is_with_clean_database)-[:Bug]->(Task),
create (Consumer_metadata)-[:Bug]->(TaskExecutor),
create (throws_Invalid_Path)-[:Bug]->(TaskExecutor),
create (is_with_clean_database)-[:Bug]->(TaskExecutor),
create (Consumer_metadata)-[:Bug]->(TaskQueue),
create (throws_Invalid_Path)-[:Bug]->(TaskQueue),
create (is_with_clean_database)-[:Bug]->(TaskQueue),
create (Consumer_metadata)-[:Bug]->(TaskQueueExecutor),
create (throws_Invalid_Path)-[:Bug]->(TaskQueueExecutor),
create (is_with_clean_database)-[:Bug]->(TaskQueueExecutor),
create (Consumer_metadata)-[:Bug]->(ThreadedTaskQueueExecutor),
create (throws_Invalid_Path)-[:Bug]->(ThreadedTaskQueueExecutor),
create (is_with_clean_database)-[:Bug]->(ThreadedTaskQueueExecutor),
create (download_module_artifact_in_Legacy_repository:issue {name:'download module artifact in Legacy repository'}) create (download_module_artifact_in_Legacy_repository)-[:Bug]->(Cache),
create (LayoutException_Invalid_path_to_Artifact_mismatch:issue {name:'LayoutException Invalid path to Artifact mismatch'}) create (LayoutException_Invalid_path_to_Artifact_mismatch)-[:Bug]->(Cache),
create (strut_module:issue {name:'strut module'}) create (strut_module)-[:Bug]->(Cache),
create (download_module_artifact:issue {name:'download module artifact'}) create (download_module_artifact)-[:Bug]->(Cache),
create (switch_to_archiva:issue {name:'switch to archiva'}) create (switch_to_archiva)-[:Bug]->(Cache),
create (TaskExecutordatabase_update_from_queue:issue {name:'TaskExecutordatabase update from queue'}) create (TaskExecutordatabase_update_from_queue)-[:Bug]->(Task),
create (stacktrace_jvm:issue {name:'stacktrace jvm'}) create (stacktrace_jvm)-[:Bug]->(Task),
create (match_version_portion_of_filename:issue {name:'match version portion of filename'}) create (match_version_portion_of_filename)-[:Bug]->(Task),
create (update_database:issue {name:'update database'}) create (update_database)-[:Bug]->(Task),
create (TaskExecutordatabase_update_from_queue)-[:Bug]->(TaskExecutor),
create (stacktrace_jvm)-[:Bug]->(TaskExecutor),
create (match_version_portion_of_filename)-[:Bug]->(TaskExecutor),
create (update_database)-[:Bug]->(TaskExecutor),
create (TaskExecutordatabase_update_from_queue)-[:Bug]->(TaskQueue),
create (stacktrace_jvm)-[:Bug]->(TaskQueue),
create (match_version_portion_of_filename)-[:Bug]->(TaskQueue),
create (update_database)-[:Bug]->(TaskQueue),
create (TaskExecutordatabase_update_from_queue)-[:Bug]->(TaskQueueExecutor),
create (stacktrace_jvm)-[:Bug]->(TaskQueueExecutor),
create (match_version_portion_of_filename)-[:Bug]->(TaskQueueExecutor),
create (update_database)-[:Bug]->(TaskQueueExecutor),
create (TaskExecutordatabase_update_from_queue)-[:Bug]->(ThreadedTaskQueueExecutor),
create (stacktrace_jvm)-[:Bug]->(ThreadedTaskQueueExecutor),
create (match_version_portion_of_filename)-[:Bug]->(ThreadedTaskQueueExecutor),
create (update_database)-[:Bug]->(ThreadedTaskQueueExecutor),
create (causes_high_load_with_large_databases:issue {name:'causes high load with large databases'}) create (causes_high_load_with_large_databases)-[:Bug]->(Graph),
create (causes_high_load:issue {name:'causes high load'}) create (causes_high_load)-[:Bug]->(Graph),
create (large_amount_of_metadata:issue {name:'large amount of metadata'}) create (large_amount_of_metadata)-[:Bug]->(Graph),
create (DependencyTree_fetchGraph:issue {name:'DependencyTree fetchGraph'}) create (DependencyTree_fetchGraph)-[:Bug]->(Graph),
create (following_exception)-[:Bug]->(Cache),
create (occurs_on_IBM_JDK:issue {name:'occurs on IBM JDK'}) create (occurs_on_IBM_JDK)-[:Bug]->(Cache),
create (other_artifacts:issue {name:'other artifacts'}) create (other_artifacts)-[:Bug]->(Task),
create (convert_to_artifact_reference_comelsevierelsloncommoncomponentsecomeCommerce:issue {name:'convert to artifact reference comelsevierelsloncommoncomponentsecomeCommerce'}) create (convert_to_artifact_reference_comelsevierelsloncommoncomponentsecomeCommerce)-[:Bug]->(Task),
create (other_artifacts)-[:Bug]->(TaskExecutor),
create (convert_to_artifact_reference_comelsevierelsloncommoncomponentsecomeCommerce)-[:Bug]->(TaskExecutor),
create (other_artifacts)-[:Bug]->(TaskQueue),
create (convert_to_artifact_reference_comelsevierelsloncommoncomponentsecomeCommerce)-[:Bug]->(TaskQueue),
create (other_artifacts)-[:Bug]->(TaskQueueExecutor),
create (convert_to_artifact_reference_comelsevierelsloncommoncomponentsecomeCommerce)-[:Bug]->(TaskQueueExecutor),
create (other_artifacts)-[:Bug]->(ThreadedTaskQueueExecutor),
create (convert_to_artifact_reference_comelsevierelsloncommoncomponentsecomeCommerce)-[:Bug]->(ThreadedTaskQueueExecutor),
create (see_badging_of_health:issue {name:'see badging of health'}) create (see_badging_of_health)-[:Bug]->(graph),
create (exists_in_artifact_archive:issue {name:'exists in artifact archive'}) create (exists_in_artifact_archive)-[:Bug]->(graph),
create (see_badging:issue {name:'see badging'}) create (see_badging)-[:Bug]->(graph),
create (list_of_checks:issue {name:'list of checks'}) create (list_of_checks)-[:Bug]->(graph),
create (Archiva_version:issue {name:'Archiva version'}) create (Archiva_version)-[:Bug]->(graph),
create (works_for_resource_jdbcarchiva:issue {name:'works for resource jdbcarchiva'}) create (works_for_resource_jdbcarchiva)-[:Bug]->(Cache),
create (executing_CREATE_TABLE:issue {name:'executing CREATE TABLE'}) create (executing_CREATE_TABLE)-[:Bug]->(Cache),
create (User_database:issue {name:'User database'}) create (User_database)-[:Bug]->(Cache),
create (consequence_of_bug:issue {name:'consequence of bug'}) create (consequence_of_bug)-[:Bug]->(graph),
create (Dependencies_tab:issue {name:'Dependencies tab'}) create (Dependencies_tab)-[:Bug]->(graph),
create (break_with_Unable_exception:issue {name:'break with Unable exception'}) create (break_with_Unable_exception)-[:Bug]->(graph),
create (resolve_propertiesvariables:issue {name:'resolve propertiesvariables'}) create (resolve_propertiesvariables)-[:Bug]->(graph),
create (remote_repository:issue {name:'remote repository'}) create (remote_repository)-[:Bug]->(Graph),
create (depend_on_current_repository_contents:issue {name:'depend on current repository contents'}) create (depend_on_current_repository_contents)-[:Bug]->(Graph),
create (saving_proxy_connector:issue {name:'saving proxy connector'}) create (saving_proxy_connector)-[:Bug]->(Cache),
create (proxy_instance_of_Proximity:issue {name:'proxy instance of Proximity'}) create (proxy_instance_of_Proximity)-[:Bug]->(Cache),
create (saving_proxy_connector)-[:Bug]->(Registry),
create (proxy_instance_of_Proximity)-[:Bug]->(Registry),
create (LayoutException_Invalid_path_to_Artifact_filename_format:issue {name:'LayoutException Invalid path to Artifact filename format'}) create (LayoutException_Invalid_path_to_Artifact_filename_format)-[:Bug]->(Cache),
create (downloading_SNAPSHOT_test_sources:issue {name:'downloading SNAPSHOT test sources'}) create (downloading_SNAPSHOT_test_sources)-[:Bug]->(Cache),
create (fail_with_error:issue {name:'fail with error'}) create (fail_with_error)-[:Bug]->(Cache),
create (deploy_SNAPSHOT_to_Archiva:issue {name:'deploy SNAPSHOT to Archiva'}) create (deploy_SNAPSHOT_to_Archiva)-[:Bug]->(Cache),
create (consumer_index:issue {name:'consumer index'}) create (consumer_index)-[:Bug]->(Task),
create (process_artifact_com:issue {name:'process artifact com'}) create (process_artifact_com)-[:Bug]->(Task),
create (traverses_to_submodules:issue {name:'traverses to submodules'}) create (traverses_to_submodules)-[:Bug]->(Task),
create (consumer_index)-[:Bug]->(TaskExecutor),
create (process_artifact_com)-[:Bug]->(TaskExecutor),
create (traverses_to_submodules)-[:Bug]->(TaskExecutor),
create (consumer_index)-[:Bug]->(TaskQueue),
create (process_artifact_com)-[:Bug]->(TaskQueue),
create (traverses_to_submodules)-[:Bug]->(TaskQueue),
create (consumer_index)-[:Bug]->(TaskQueueExecutor),
create (process_artifact_com)-[:Bug]->(TaskQueueExecutor),
create (traverses_to_submodules)-[:Bug]->(TaskQueueExecutor),
create (consumer_index)-[:Bug]->(ThreadedTaskQueueExecutor),
create (process_artifact_com)-[:Bug]->(ThreadedTaskQueueExecutor),
create (traverses_to_submodules)-[:Bug]->(ThreadedTaskQueueExecutor),
create (have_statictics_with_graphs:issue {name:'have statictics with graphs'}) create (have_statictics_with_graphs)-[:Bug]->(graph),
create (repositories_downloadupload:issue {name:'repositories downloadupload'}) create (repositories_downloadupload)-[:Bug]->(graph),
create (Add_statictics_pages:issue {name:'Add statictics pages'}) create (Add_statictics_pages)-[:Bug]->(graph),
create (reseting_password:issue {name:'reseting password'}) create (reseting_password)-[:Bug]->(Cache),
create (Error_Exception:issue {name:'Error Exception'}) create (Error_Exception)-[:Bug]->(Cache),
create (reset_password_for_user:issue {name:'reset password for user'}) create (reset_password_for_user)-[:Bug]->(Cache),
create (having_problems:issue {name:'having problems'}) create (having_problems)-[:Bug]->(graph),
create (remote_artifact:issue {name:'remote artifact'}) create (remote_artifact)-[:Bug]->(graph),
create (affects_stability_of_archiva:issue {name:'affects stability of archiva'}) create (affects_stability_of_archiva)-[:Bug]->(graph),
create (Download_failure_on_orgspringframeworkspring_transferring_file:issue {name:'Download failure on orgspringframeworkspring transferring file'}) create (Download_failure_on_orgspringframeworkspring_transferring_file)-[:Bug]->(graph),
create (upgrading_from_v:issue {name:'upgrading from v'}) create (upgrading_from_v)-[:Bug]->(Registry),
create (upgrading_from_v)-[:Bug]->(Scheduler),
create (upgrading_from_v)-[:Bug]->(Task),
create (Unable_Hello:issue {name:'Unable Hello'}) create (Unable_Hello)-[:Bug]->(Cache),
create (error_from_log:issue {name:'error from log'}) create (error_from_log)-[:Bug]->(Cache),
create (pull_file:issue {name:'pull file'}) create (pull_file)-[:Bug]->(Cache),
create (Adding_text_to_XML_document:issue {name:'Adding text to XML document'}) create (Adding_text_to_XML_document)-[:Bug]->(Cache),
create (Quartz_thread:issue {name:'Quartz thread'}) create (Quartz_thread)-[:Bug]->(Scheduler),
create (Shutdown_of_Tomcat:issue {name:'Shutdown of Tomcat'}) create (Shutdown_of_Tomcat)-[:Bug]->(Scheduler),
create (causes_Exception:issue {name:'causes Exception'}) create (causes_Exception)-[:Bug]->(Scheduler),
create (Archiva_repository:issue {name:'Archiva repository'}) create (Archiva_repository)-[:Bug]->(Cache),
create (looking_at_Dependencies_page:issue {name:'looking at Dependencies page'}) create (looking_at_Dependencies_page)-[:Bug]->(graph),
create (versions_of_dependencies:issue {name:'versions of dependencies'}) create (versions_of_dependencies)-[:Bug]->(graph),
create (Dependency_Tree:issue {name:'Dependency Tree'}) create (Dependency_Tree)-[:Bug]->(graph),
create (specify_versions_of_artifactsdependencies:issue {name:'specify versions of artifactsdependencies'}) create (specify_versions_of_artifactsdependencies)-[:Bug]->(graph),
create (specifying_dependency_version:issue {name:'specifying dependency version'}) create (specifying_dependency_version)-[:Bug]->(graph),
create (running_for_while:issue {name:'running for while'}) create (running_for_while)-[:Bug]->(Cache),
create (Unable_Error:issue {name:'Unable Error'}) create (Unable_Error)-[:Bug]->(Cache),
create (load_class_for_JSP_Twice:issue {name:'load class for JSP Twice'}) create (load_class_for_JSP_Twice)-[:Bug]->(Cache),
create (load_class:issue {name:'load class'}) create (load_class)-[:Bug]->(Cache),
create (new_network:issue {name:'new network'}) create (new_network)-[:Bug]->(Task),
create (go_At_company:issue {name:'go At company'}) create (go_At_company)-[:Bug]->(Task),
create (fails_Hi:issue {name:'fails Hi'}) create (fails_Hi)-[:Bug]->(Task),
create (reinstalled_Archiva:issue {name:'reinstalled Archiva'}) create (reinstalled_Archiva)-[:Bug]->(Cache),
create (root_of_context_hierarchy:issue {name:'root of context hierarchy'}) create (root_of_context_hierarchy)-[:Bug]->(Cache),
create (new_box:issue {name:'new box'}) create (new_box)-[:Bug]->(Cache),
create (works_with_IBM_SDK:issue {name:'works with IBM SDK'}) create (works_with_IBM_SDK)-[:Bug]->(Cache),
create (start_INFO_Server_in_ms_dc:issue {name:'start INFO Server in ms dc'}) create (start_INFO_Server_in_ms_dc)-[:Bug]->(Cache),
create (reinstalled_Archiva)-[:Bug]->(Graph),
create (root_of_context_hierarchy)-[:Bug]->(Graph),
create (new_box)-[:Bug]->(Graph),
create (works_with_IBM_SDK)-[:Bug]->(Graph),
create (start_INFO_Server_in_ms_dc)-[:Bug]->(Graph),
create (reinstalled_Archiva)-[:Bug]->(Scheduler),
create (root_of_context_hierarchy)-[:Bug]->(Scheduler),
create (new_box)-[:Bug]->(Scheduler),
create (works_with_IBM_SDK)-[:Bug]->(Scheduler),
create (start_INFO_Server_in_ms_dc)-[:Bug]->(Scheduler),
create (reinstalled_Archiva)-[:Bug]->(Task),
create (root_of_context_hierarchy)-[:Bug]->(Task),
create (new_box)-[:Bug]->(Task),
create (works_with_IBM_SDK)-[:Bug]->(Task),
create (start_INFO_Server_in_ms_dc)-[:Bug]->(Task),
create (accessing_url_HTTP:issue {name:'accessing url HTTP'}) create (accessing_url_HTTP)-[:Bug]->(Cache),
create (repository_url:issue {name:'repository url'}) create (repository_url)-[:Bug]->(Cache),
create (UI_Archiva:issue {name:'UI Archiva'}) create (UI_Archiva)-[:Bug]->(Task),
create (scanning_repositories:issue {name:'scanning repositories'}) create (scanning_repositories)-[:Bug]->(Task),
create (UI_Archiva)-[:Bug]->(TaskExecutor),
create (scanning_repositories)-[:Bug]->(TaskExecutor),
create (migrating_archiva:issue {name:'migrating archiva'}) create (migrating_archiva)-[:Bug]->(Cache),
create (returns_nothing_for_directory:issue {name:'returns nothing for directory'}) create (returns_nothing_for_directory)-[:Bug]->(Cache),
create (wagon_file:issue {name:'wagon file'}) create (wagon_file)-[:Bug]->(Cache),
create (Archiva_problem:issue {name:'Archiva problem'}) create (Archiva_problem)-[:Bug]->(Cache),
create (works_on_Linux_box:issue {name:'works on Linux box'}) create (works_on_Linux_box)-[:Bug]->(Cache),
create (set_MySQL:issue {name:'set MySQL'}) create (set_MySQL)-[:Bug]->(Cache),
create (grant_access_to_archiva_DB:issue {name:'grant access to archiva DB'}) create (grant_access_to_archiva_DB)-[:Bug]->(Cache),
create (Archiva_problem)-[:Bug]->(Node),
create (works_on_Linux_box)-[:Bug]->(Node),
create (set_MySQL)-[:Bug]->(Node),
create (grant_access_to_archiva_DB)-[:Bug]->(Node),
create (Archiva_problem)-[:Bug]->(SimpleNode),
create (works_on_Linux_box)-[:Bug]->(SimpleNode),
create (set_MySQL)-[:Bug]->(SimpleNode),
create (grant_access_to_archiva_DB)-[:Bug]->(SimpleNode),
create (remove_excludes:issue {name:'remove excludes'}) create (remove_excludes)-[:Bug]->(Cache),
create (NoClassDefFoundError_orgapachexmlserializeOutputFormat:issue {name:'NoClassDefFoundError orgapachexmlserializeOutputFormat'}) create (NoClassDefFoundError_orgapachexmlserializeOutputFormat)-[:Bug]->(Cache),
create (create_ArchivaArtifact:issue {name:'create ArchivaArtifact'}) create (create_ArchivaArtifact)-[:Bug]->(Graph),
create (Unable_Unable_ArchivaException:issue {name:'Unable Unable ArchivaException'}) create (Unable_Unable_ArchivaException)-[:Bug]->(Graph),
create (refers_to_dependencies:issue {name:'refers to dependencies'}) create (refers_to_dependencies)-[:Bug]->(Graph),
create (show_rest_of_graph:issue {name:'show rest of graph'}) create (show_rest_of_graph)-[:Bug]->(Graph),
create (create_ArchivaArtifact)-[:Bug]->(Node),
create (Unable_Unable_ArchivaException)-[:Bug]->(Node),
create (refers_to_dependencies)-[:Bug]->(Node),
create (show_rest_of_graph)-[:Bug]->(Node),
create (create_ArchivaArtifact)-[:Bug]->(Task),
create (Unable_Unable_ArchivaException)-[:Bug]->(Task),
create (refers_to_dependencies)-[:Bug]->(Task),
create (show_rest_of_graph)-[:Bug]->(Task),
create (create_ArchivaArtifact)-[:Bug]->(graph),
create (Unable_Unable_ArchivaException)-[:Bug]->(graph),
create (refers_to_dependencies)-[:Bug]->(graph),
create (show_rest_of_graph)-[:Bug]->(graph),
create (download_from_certain_repositories:issue {name:'download from certain repositories'}) create (download_from_certain_repositories)-[:Bug]->(Cache),
create (find_documentation:issue {name:'find documentation'}) create (find_documentation)-[:Bug]->(Cache),
create (Fill_up_group:issue {name:'Fill up group'}) create (Fill_up_group)-[:Bug]->(Cache),
create (Fill_group_in_company_pom_form:issue {name:'Fill group in company pom form'}) create (Fill_group_in_company_pom_form)-[:Bug]->(Cache),
create (Creating_pom_results:issue {name:'Creating pom results'}) create (Creating_pom_results)-[:Bug]->(Cache),
create (company_pom:issue {name:'company pom'}) create (company_pom)-[:Bug]->(Cache),
create (kind_of_artifact_version:issue {name:'kind of artifact version'}) create (kind_of_artifact_version)-[:Bug]->(Cache),
create (following_resource:issue {name:'following resource'}) create (following_resource)-[:Bug]->(Cache),
create (download_SNAPSHOT_version:issue {name:'download SNAPSHOT version'}) create (download_SNAPSHOT_version)-[:Bug]->(Cache),
create (say_In_fact:issue {name:'say In fact'}) create (say_In_fact)-[:Bug]->(Cache),
create (network_proxy:issue {name:'network proxy'}) create (network_proxy)-[:Bug]->(Cache),
create (upgrading_to_archiva:issue {name:'upgrading to archiva'}) create (upgrading_to_archiva)-[:Bug]->(Cache),
create (use_network_proxy:issue {name:'use network proxy'}) create (use_network_proxy)-[:Bug]->(Cache),
create (uploading_artifact:issue {name:'uploading artifact'}) create (uploading_artifact)-[:Bug]->(Cache),
create (HTTP_Error:issue {name:'HTTP Error'}) create (HTTP_Error)-[:Bug]->(Cache),
create (uploading_artifact_with_junit_junit_Version:issue {name:'uploading artifact with junit junit Version'}) create (uploading_artifact_with_junit_junit_Version)-[:Bug]->(Cache),
create (contact_administrator:issue {name:'contact administrator'}) create (contact_administrator)-[:Bug]->(Task),
create (browsing_artifact:issue {name:'browsing artifact'}) create (browsing_artifact)-[:Bug]->(Task),
create (failing_with_following_error:issue {name:'failing with following error'}) create (failing_with_following_error)-[:Bug]->(Task),
create (check_artifact_in_questions:issue {name:'check artifact in questions'}) create (check_artifact_in_questions)-[:Bug]->(Task),
create (error_Apr:issue {name:'error Apr'}) create (error_Apr)-[:Bug]->(Task),
create (creating_maven_repositories:issue {name:'creating maven repositories'}) create (creating_maven_repositories)-[:Bug]->(Cache),
create (namespaces_prio_os_prio_tidxfbadcd_nidxeb_in_xfbacb_INFO:issue {name:'namespaces prio os_prio tidxfbadcd nidxeb in xfbacb INFO'}) create (namespaces_prio_os_prio_tidxfbadcd_nidxeb_in_xfbacb_INFO)-[:Bug]->(Cache),
create (wait_for_xeaafd:issue {name:'wait for xeaafd'}) create (wait_for_xeaafd)-[:Bug]->(Cache),
create (Repository_creation:issue {name:'Repository creation'}) create (Repository_creation)-[:Bug]->(Cache),
create (Creation_of_maven_repositories:issue {name:'Creation of maven repositories'}) create (Creation_of_maven_repositories)-[:Bug]->(Cache),
create (creating_maven_repositories)-[:Bug]->(CommonsConfigurationRegistry),
create (namespaces_prio_os_prio_tidxfbadcd_nidxeb_in_xfbacb_INFO)-[:Bug]->(CommonsConfigurationRegistry),
create (wait_for_xeaafd)-[:Bug]->(CommonsConfigurationRegistry),
create (Repository_creation)-[:Bug]->(CommonsConfigurationRegistry),
create (Creation_of_maven_repositories)-[:Bug]->(CommonsConfigurationRegistry),
"create (ConfigurationListenerDelegate:class {name:'ConfigurationListenerDelegate', favoritecolor: 'green'}) create (creating_maven_repositories)-[:Bug]->(ConfigurationListenerDelegate)",
create (namespaces_prio_os_prio_tidxfbadcd_nidxeb_in_xfbacb_INFO)-[:Bug]->(ConfigurationListenerDelegate),
create (wait_for_xeaafd)-[:Bug]->(ConfigurationListenerDelegate),
create (Repository_creation)-[:Bug]->(ConfigurationListenerDelegate),
create (Creation_of_maven_repositories)-[:Bug]->(ConfigurationListenerDelegate),
"create (DefaultTaskQueue:class {name:'DefaultTaskQueue', favoritecolor: 'green'}) create (creating_maven_repositories)-[:Bug]->(DefaultTaskQueue)",
create (namespaces_prio_os_prio_tidxfbadcd_nidxeb_in_xfbacb_INFO)-[:Bug]->(DefaultTaskQueue),
create (wait_for_xeaafd)-[:Bug]->(DefaultTaskQueue),
create (Repository_creation)-[:Bug]->(DefaultTaskQueue),
create (Creation_of_maven_repositories)-[:Bug]->(DefaultTaskQueue),
create (creating_maven_repositories)-[:Bug]->(Registry),
create (namespaces_prio_os_prio_tidxfbadcd_nidxeb_in_xfbacb_INFO)-[:Bug]->(Registry),
create (wait_for_xeaafd)-[:Bug]->(Registry),
create (Repository_creation)-[:Bug]->(Registry),
create (Creation_of_maven_repositories)-[:Bug]->(Registry),
create (creating_maven_repositories)-[:Bug]->(Scheduler),
create (namespaces_prio_os_prio_tidxfbadcd_nidxeb_in_xfbacb_INFO)-[:Bug]->(Scheduler),
create (wait_for_xeaafd)-[:Bug]->(Scheduler),
create (Repository_creation)-[:Bug]->(Scheduler),
create (Creation_of_maven_repositories)-[:Bug]->(Scheduler),
create (creating_maven_repositories)-[:Bug]->(Task),
create (namespaces_prio_os_prio_tidxfbadcd_nidxeb_in_xfbacb_INFO)-[:Bug]->(Task),
create (wait_for_xeaafd)-[:Bug]->(Task),
create (Repository_creation)-[:Bug]->(Task),
create (Creation_of_maven_repositories)-[:Bug]->(Task),
create (creating_maven_repositories)-[:Bug]->(TaskQueue),
create (namespaces_prio_os_prio_tidxfbadcd_nidxeb_in_xfbacb_INFO)-[:Bug]->(TaskQueue),
create (wait_for_xeaafd)-[:Bug]->(TaskQueue),
create (Repository_creation)-[:Bug]->(TaskQueue),
create (Creation_of_maven_repositories)-[:Bug]->(TaskQueue),
create (creating_maven_repositories)-[:Bug]->(TaskQueueExecutor),
create (namespaces_prio_os_prio_tidxfbadcd_nidxeb_in_xfbacb_INFO)-[:Bug]->(TaskQueueExecutor),
create (wait_for_xeaafd)-[:Bug]->(TaskQueueExecutor),
create (Repository_creation)-[:Bug]->(TaskQueueExecutor),
create (Creation_of_maven_repositories)-[:Bug]->(TaskQueueExecutor),
create (creating_maven_repositories)-[:Bug]->(ThreadedTaskQueueExecutor),
create (namespaces_prio_os_prio_tidxfbadcd_nidxeb_in_xfbacb_INFO)-[:Bug]->(ThreadedTaskQueueExecutor),
create (wait_for_xeaafd)-[:Bug]->(ThreadedTaskQueueExecutor),
create (Repository_creation)-[:Bug]->(ThreadedTaskQueueExecutor),
create (Creation_of_maven_repositories)-[:Bug]->(ThreadedTaskQueueExecutor),
create (Metadata_generation:issue {name:'Metadata generation'}) create (Metadata_generation)-[:Bug]->(Node),
create (have_version_ranges:issue {name:'have version ranges'}) create (have_version_ranges)-[:Bug]->(Node),
create (noformat_within_specified_range:issue {name:'noformat within specified range'}) create (noformat_within_specified_range)-[:Bug]->(Node),
create (have_many_published_artifacts_with_dependencies:issue {name:'have many published artifacts with dependencies'}) create (have_many_published_artifacts_with_dependencies)-[:Bug]->(Node),
create (create_graphical_representations_of_dependencies:issue {name:'create graphical representations of dependencies'}) create (create_graphical_representations_of_dependencies)-[:Bug]->(graph),
create (dependency_report:issue {name:'dependency report'}) create (dependency_report)-[:Bug]->(graph),
create (is_in_repository:issue {name:'is in repository'}) create (is_in_repository)-[:Bug]->(graph),
create (repository_transitive_report_repository_tool:issue {name:'repository transitive report repository tool'}) create (repository_transitive_report_repository_tool)-[:Bug]->(graph),
create (dependency_relationships_among_artifacts:issue {name:'dependency relationships among artifacts'}) create (dependency_relationships_among_artifacts)-[:Bug]->(graph),
create (connecting_to_internal_repository:issue {name:'connecting to internal repository'}) create (connecting_to_internal_repository)-[:Bug]->(Cache),
create (proxy_setting:issue {name:'proxy setting'}) create (proxy_setting)-[:Bug]->(Cache),
create (has_trouble:issue {name:'has trouble'}) create (has_trouble)-[:Bug]->(Cache),
create (has_maximum_length:issue {name:'has maximum length'}) create (has_maximum_length)-[:Bug]->(Cache),
create (jamba_importer:issue {name:'jamba importer'}) create (jamba_importer)-[:Bug]->(Cache),
create (DESCRIPTION_in_column:issue {name:'DESCRIPTION in column'}) create (DESCRIPTION_in_column)-[:Bug]->(Cache),
create (Ant_Task:issue {name:'Ant Task'}) create (Ant_Task)-[:Bug]->(Task),
create (m_As_consequence:issue {name:'m As consequence'}) create (m_As_consequence)-[:Bug]->(Task),
create (incompatibilities_with_jackrabbit_implementation:issue {name:'incompatibilities with jackrabbit implementation'}) create (incompatibilities_with_jackrabbit_implementation)-[:Bug]->(Task),
create (mount_WebDAV_drive_in_Windows:issue {name:'mount WebDAV drive in Windows'}) create (mount_WebDAV_drive_in_Windows)-[:Bug]->(Task),
create (access_repository:issue {name:'access repository'}) create (access_repository)-[:Bug]->(Task),
create (consumer_index)-[:Bug]->(Task),
create (starting_Archiva)-[:Bug]->(Task),
create (adding_artifact_to_index_Error:issue {name:'adding artifact to index Error'}) create (adding_artifact_to_index_Error)-[:Bug]->(Task),
create (starting_up_archiva:issue {name:'starting up archiva'}) create (starting_up_archiva)-[:Bug]->(Task),
create (consumer_index)-[:Bug]->(TaskExecutor),
create (starting_Archiva)-[:Bug]->(TaskExecutor),
create (adding_artifact_to_index_Error)-[:Bug]->(TaskExecutor),
create (starting_up_archiva)-[:Bug]->(TaskExecutor),
create (consumer_index)-[:Bug]->(TaskQueue),
create (starting_Archiva)-[:Bug]->(TaskQueue),
create (adding_artifact_to_index_Error)-[:Bug]->(TaskQueue),
create (starting_up_archiva)-[:Bug]->(TaskQueue),
create (consumer_index)-[:Bug]->(TaskQueueExecutor),
create (starting_Archiva)-[:Bug]->(TaskQueueExecutor),
create (adding_artifact_to_index_Error)-[:Bug]->(TaskQueueExecutor),
create (starting_up_archiva)-[:Bug]->(TaskQueueExecutor),
create (consumer_index)-[:Bug]->(ThreadedTaskQueueExecutor),
create (starting_Archiva)-[:Bug]->(ThreadedTaskQueueExecutor),
create (adding_artifact_to_index_Error)-[:Bug]->(ThreadedTaskQueueExecutor),
create (starting_up_archiva)-[:Bug]->(ThreadedTaskQueueExecutor),
create (Performance_problem:issue {name:'Performance problem'}) create (Performance_problem)-[:Bug]->(Task),
create (contains_snapshot_components_of_internal_component:issue {name:'contains snapshot components of internal component'}) create (contains_snapshot_components_of_internal_component)-[:Bug]->(Task),
create (contains_components:issue {name:'contains components'}) create (contains_components)-[:Bug]->(Task),
create (minutes_on_repo:issue {name:'minutes on repo'}) create (minutes_on_repo)-[:Bug]->(Task),
create (supports_artifact:issue {name:'supports artifact'}) create (supports_artifact)-[:Bug]->(Cache),
create (using_SNAPSHOT_version_of_axiom_library:issue {name:'using SNAPSHOT version of axiom library'}) create (using_SNAPSHOT_version_of_axiom_library)-[:Bug]->(Cache),
create (axiom_developers:issue {name:'axiom developers'}) create (axiom_developers)-[:Bug]->(Cache),
create (supports_artifact)-[:Bug]->(Task),
create (using_SNAPSHOT_version_of_axiom_library)-[:Bug]->(Task),
create (axiom_developers)-[:Bug]->(Task),
create (supports_artifact)-[:Bug]->(TaskExecutor),
create (using_SNAPSHOT_version_of_axiom_library)-[:Bug]->(TaskExecutor),
create (axiom_developers)-[:Bug]->(TaskExecutor),
create (supports_artifact)-[:Bug]->(TaskQueue),
create (using_SNAPSHOT_version_of_axiom_library)-[:Bug]->(TaskQueue),
create (axiom_developers)-[:Bug]->(TaskQueue),
create (supports_artifact)-[:Bug]->(TaskQueueExecutor),
create (using_SNAPSHOT_version_of_axiom_library)-[:Bug]->(TaskQueueExecutor),
create (axiom_developers)-[:Bug]->(TaskQueueExecutor),
create (supports_artifact)-[:Bug]->(ThreadedTaskQueueExecutor),
create (using_SNAPSHOT_version_of_axiom_library)-[:Bug]->(ThreadedTaskQueueExecutor),
create (axiom_developers)-[:Bug]->(ThreadedTaskQueueExecutor),
create (have_own_consumer_list:issue {name:'have own consumer list'}) create (have_own_consumer_list)-[:Bug]->(graph),
create (purge_feature:issue {name:'purge feature'}) create (purge_feature)-[:Bug]->(graph),
create (talking_about_scanning_menu_option:issue {name:'talking about scanning menu option'}) create (talking_about_scanning_menu_option)-[:Bug]->(graph),
create (have_own_set_of_configuration:issue {name:'have own set of configuration'}) create (have_own_set_of_configuration)-[:Bug]->(graph),
create (artifacts_like_cryptography_builds:issue {name:'artifacts like cryptography builds'}) create (artifacts_like_cryptography_builds)-[:Bug]->(graph),
create (enable_features:issue {name:'enable features'}) create (enable_features)-[:Bug]->(graph),
create (repository_search:issue {name:'repository search'}) create (repository_search)-[:Bug]->(graph),
create (have_manner_of_apps:issue {name:'have manner of apps'}) create (have_manner_of_apps)-[:Bug]->(Scheduler),
create (LDAP_configuration:issue {name:'LDAP configuration'}) create (LDAP_configuration)-[:Bug]->(Scheduler),
create (have_password_attribute:issue {name:'have password attribute'}) create (have_password_attribute)-[:Bug]->(Scheduler),
create (use_in_env:issue {name:'use in env'}) create (use_in_env)-[:Bug]->(Scheduler),
create (startup_At_Archiva:issue {name:'startup At Archiva'}) create (startup_At_Archiva)-[:Bug]->(Scheduler),
create (Strange_bug_with_axis_dependency:issue {name:'Strange bug with axis dependency'}) create (Strange_bug_with_axis_dependency)-[:Bug]->(Cache),
create (Strange_bug:issue {name:'Strange bug'}) create (Strange_bug)-[:Bug]->(Cache),
create (have_problem:issue {name:'have problem'}) create (have_problem)-[:Bug]->(Cache),
create (have_problem_with_path_layout:issue {name:'have problem with path layout'}) create (have_problem_with_path_layout)-[:Bug]->(Cache),
create (accessing_to_internal_maven_repository:issue {name:'accessing to internal maven repository'}) create (accessing_to_internal_maven_repository)-[:Bug]->(Cache),
create (clean_archiva:issue {name:'clean archiva'}) create (clean_archiva)-[:Bug]->(Cache),
create (repository_download_of_maven_plugins:issue {name:'repository download of maven plugins'}) create (repository_download_of_maven_plugins)-[:Bug]->(Cache),
create (Starting_with_archiva_internal_repository:issue {name:'Starting with archiva internal repository'}) create (Starting_with_archiva_internal_repository)-[:Bug]->(Cache),
create (repository_download:issue {name:'repository download'}) create (repository_download)-[:Bug]->(Cache),
create (part_of_defined_whitelist_skipping_transfer:issue {name:'part of defined whitelist skipping transfer'}) create (part_of_defined_whitelist_skipping_transfer)-[:Bug]->(Cache),
create (Dependency_Tree)-[:Bug]->(Graph),
create (full_stack_trace_of_root_cause:issue {name:'full stack trace of root cause'}) create (full_stack_trace_of_root_cause)-[:Bug]->(Graph),
create (Using_Tree_link:issue {name:'Using Tree link'}) create (Using_Tree_link)-[:Bug]->(Graph),
create (am_behind_proxy:issue {name:'am behind proxy'}) create (am_behind_proxy)-[:Bug]->(Cache),
create (http_Server:issue {name:'http Server'}) create (http_Server)-[:Bug]->(Cache),
create (releases_policy_with__:issue {name:'releases policy with | |'}) create (releases_policy_with__)-[:Bug]->(Cache),
create (download_snapshots:issue {name:'download snapshots'}) create (download_snapshots)-[:Bug]->(Cache),
create (download_artifacts_from_several_remote_repositories:issue {name:'download artifacts from several remote repositories'}) create (download_artifacts_from_several_remote_repositories)-[:Bug]->(Cache),
create (deleting_proxy_connector:issue {name:'deleting proxy connector'}) create (deleting_proxy_connector)-[:Bug]->(Cache),
create (Web_code:issue {name:'Web code'}) create (Web_code)-[:Bug]->(Cache),
create (stacktrace_code:issue {name:'stacktrace code'}) create (stacktrace_code)-[:Bug]->(Scheduler),
create (index_local_m_repository:issue {name:'index local m repository'}) create (index_local_m_repository)-[:Bug]->(Scheduler),
create (have_plugin_for_maven_jar:issue {name:'have plugin for maven jar'}) create (have_plugin_for_maven_jar)-[:Bug]->(Scheduler),
create (stacktrace_code)-[:Bug]->(Task),
create (index_local_m_repository)-[:Bug]->(Task),
create (have_plugin_for_maven_jar)-[:Bug]->(Task),
create (Javadoc_error:issue {name:'Javadoc error'}) create (Javadoc_error)-[:Bug]->(Scheduler),
create (Javadoc_error)-[:Bug]->(Task),
create (scping_to_repository:issue {name:'scping to repository'}) create (scping_to_repository)-[:Bug]->(Cache),
create (webdav_via_Archiva:issue {name:'webdav via Archiva'}) create (webdav_via_Archiva)-[:Bug]->(Cache),
create (Webdav_upload:issue {name:'Webdav upload'}) create (Webdav_upload)-[:Bug]->(Cache),
create (working_webdav_support:issue {name:'working webdav support'}) create (working_webdav_support)-[:Bug]->(Cache),
create (TaskQueueExecutorindexer_Error:issue {name:'TaskQueueExecutorindexer Error'}) create (TaskQueueExecutorindexer_Error)-[:Bug]->(Cache),
create (get_NPE:issue {name:'get NPE'}) create (get_NPE)-[:Bug]->(Cache),
create (clicking_on_Browse:issue {name:'clicking on Browse'}) create (clicking_on_Browse)-[:Bug]->(Cache),
create (TaskQueueExecutorindexer_Error)-[:Bug]->(Task),
create (get_NPE)-[:Bug]->(Task),
create (clicking_on_Browse)-[:Bug]->(Task),
create (TaskQueueExecutorindexer_Error)-[:Bug]->(TaskExecutor),
create (get_NPE)-[:Bug]->(TaskExecutor),
create (clicking_on_Browse)-[:Bug]->(TaskExecutor),
create (TaskQueueExecutorindexer_Error)-[:Bug]->(TaskQueue),
create (get_NPE)-[:Bug]->(TaskQueue),
create (clicking_on_Browse)-[:Bug]->(TaskQueue),
create (TaskQueueExecutorindexer_Error)-[:Bug]->(TaskQueueExecutor),
create (get_NPE)-[:Bug]->(TaskQueueExecutor),
create (clicking_on_Browse)-[:Bug]->(TaskQueueExecutor),
create (TaskQueueExecutorindexer_Error)-[:Bug]->(ThreadedTaskQueueExecutor),
create (get_NPE)-[:Bug]->(ThreadedTaskQueueExecutor),
create (clicking_on_Browse)-[:Bug]->(ThreadedTaskQueueExecutor),
create (test_sources:issue {name:'test sources'}) create (test_sources)-[:Bug]->(Task),
create (throws_exception:issue {name:'throws exception'}) create (throws_exception)-[:Bug]->(Task),
create (throws_exception_on_sources_jar:issue {name:'throws exception on sources jar'}) create (throws_exception_on_sources_jar)-[:Bug]->(Task),
create (test_sources)-[:Bug]->(TaskQueue),
create (throws_exception)-[:Bug]->(TaskQueue),
create (throws_exception_on_sources_jar)-[:Bug]->(TaskQueue),
create (test_sources)-[:Bug]->(TaskQueueExecutor),
create (throws_exception)-[:Bug]->(TaskQueueExecutor),
create (throws_exception_on_sources_jar)-[:Bug]->(TaskQueueExecutor),
create (test_sources)-[:Bug]->(ThreadedTaskQueueExecutor),
create (throws_exception)-[:Bug]->(ThreadedTaskQueueExecutor),
create (throws_exception_on_sources_jar)-[:Bug]->(ThreadedTaskQueueExecutor),
create (Failed_startup:issue {name:'Failed startup'}) create (Failed_startup)-[:Bug]->(CommonsConfigurationRegistry),
create (be_on_NPE:issue {name:'be on NPE'}) create (be_on_NPE)-[:Bug]->(CommonsConfigurationRegistry),
create (Failed_startup)-[:Bug]->(Registry),
create (be_on_NPE)-[:Bug]->(Registry),
create (Failed_startup)-[:Bug]->(Scheduler),
create (be_on_NPE)-[:Bug]->(Scheduler),
create (Failed_startup)-[:Bug]->(Task),
create (be_on_NPE)-[:Bug]->(Task),
create (DaysOld_Repository:issue {name:'DaysOld Repository'}) create (DaysOld_Repository)-[:Bug]->(Task),
create (throws_Invalid_Path)-[:Bug]->(Task),
create (is_with_clean_database)-[:Bug]->(Task),
create (DaysOld_Repository)-[:Bug]->(TaskExecutor),
create (throws_Invalid_Path)-[:Bug]->(TaskExecutor),
create (is_with_clean_database)-[:Bug]->(TaskExecutor),
create (DaysOld_Repository)-[:Bug]->(TaskQueue),
create (throws_Invalid_Path)-[:Bug]->(TaskQueue),
create (is_with_clean_database)-[:Bug]->(TaskQueue),
create (DaysOld_Repository)-[:Bug]->(TaskQueueExecutor),
create (throws_Invalid_Path)-[:Bug]->(TaskQueueExecutor),
create (is_with_clean_database)-[:Bug]->(TaskQueueExecutor),
create (DaysOld_Repository)-[:Bug]->(ThreadedTaskQueueExecutor),
create (throws_Invalid_Path)-[:Bug]->(ThreadedTaskQueueExecutor),
create (is_with_clean_database)-[:Bug]->(ThreadedTaskQueueExecutor),
create (ArchivaTaskSchedulerdefault_Cron:issue {name:'ArchivaTaskSchedulerdefault Cron'}) create (ArchivaTaskSchedulerdefault_Cron)-[:Bug]->(Scheduler),
create (click_Update_cron_on_Databases_page:issue {name:'click Update cron on Databases page'}) create (click_Update_cron_on_Databases_page)-[:Bug]->(Scheduler),
create (Cron_expression_for_database_update:issue {name:'Cron expression for database update'}) create (Cron_expression_for_database_update)-[:Bug]->(Scheduler),
create (adding_managed_repository:issue {name:'adding managed repository'}) create (adding_managed_repository)-[:Bug]->(Scheduler),
create (ArchivaTaskSchedulerdefault_Cron)-[:Bug]->(Task),
create (click_Update_cron_on_Databases_page)-[:Bug]->(Task),
create (Cron_expression_for_database_update)-[:Bug]->(Task),
create (adding_managed_repository)-[:Bug]->(Task),
create (Continuing_with_rest:issue {name:'Continuing with rest'}) create (Continuing_with_rest)-[:Bug]->(Cache),
create (ending_component_lifecycle:issue {name:'ending component lifecycle'}) create (ending_component_lifecycle)-[:Bug]->(Cache),
"create (DefaultScheduler:class {name:'DefaultScheduler', favoritecolor: 'green'}) create (Continuing_with_rest)-[:Bug]->(DefaultScheduler)",
create (ending_component_lifecycle)-[:Bug]->(DefaultScheduler),
create (Continuing_with_rest)-[:Bug]->(Scheduler),
create (ending_component_lifecycle)-[:Bug]->(Scheduler),
create (Continuing_with_rest)-[:Bug]->(Task),
create (ending_component_lifecycle)-[:Bug]->(Task),
create (using_ldap:issue {name:'using ldap'}) create (using_ldap)-[:Bug]->(Registry),
create (running_version:issue {name:'running version'}) create (running_version)-[:Bug]->(Task),
create (running_version_from_branch:issue {name:'running version from branch'}) create (running_version_from_branch)-[:Bug]->(Task),
create (running_version)-[:Bug]->(TaskExecutor),
create (running_version_from_branch)-[:Bug]->(TaskExecutor),
create (running_version)-[:Bug]->(TaskQueue),
create (running_version_from_branch)-[:Bug]->(TaskQueue),
create (running_version)-[:Bug]->(TaskQueueExecutor),
create (running_version_from_branch)-[:Bug]->(TaskQueueExecutor),
create (running_version)-[:Bug]->(ThreadedTaskQueueExecutor),
create (running_version_from_branch)-[:Bug]->(ThreadedTaskQueueExecutor),
create (get_following_exception_in_log_file:issue {name:'get following exception in log file'}) create (get_following_exception_in_log_file)-[:Bug]->(Cache),
create (restart_Archiva:issue {name:'restart Archiva'}) create (restart_Archiva)-[:Bug]->(Cache),
create (Main_Thread:issue {name:'Main Thread'}) create (Main_Thread)-[:Bug]->(Cache),
create (adding_artifacts_to_Lucene:issue {name:'adding artifacts to Lucene'}) create (adding_artifacts_to_Lucene)-[:Bug]->(Task),
create (happens_for_scanned_artifact:issue {name:'happens for scanned artifact'}) create (happens_for_scanned_artifact)-[:Bug]->(Task),
create (adding_artifacts:issue {name:'adding artifacts'}) create (adding_artifacts)-[:Bug]->(Task),
create (adding_artifacts_to_Lucene)-[:Bug]->(TaskExecutor),
create (happens_for_scanned_artifact)-[:Bug]->(TaskExecutor),
create (adding_artifacts)-[:Bug]->(TaskExecutor),
create (adding_artifacts_to_Lucene)-[:Bug]->(TaskQueue),
create (happens_for_scanned_artifact)-[:Bug]->(TaskQueue),
create (adding_artifacts)-[:Bug]->(TaskQueue),
create (adding_artifacts_to_Lucene)-[:Bug]->(TaskQueueExecutor),
create (happens_for_scanned_artifact)-[:Bug]->(TaskQueueExecutor),
create (adding_artifacts)-[:Bug]->(TaskQueueExecutor),
create (adding_artifacts_to_Lucene)-[:Bug]->(ThreadedTaskQueueExecutor),
create (happens_for_scanned_artifact)-[:Bug]->(ThreadedTaskQueueExecutor),
create (adding_artifacts)-[:Bug]->(ThreadedTaskQueueExecutor),
create (display_in_browser_firefox:issue {name:'display in browser firefox'}) create (display_in_browser_firefox)-[:Bug]->(Cache),
create (blocking_bug_for_users:issue {name:'blocking bug for users'}) create (blocking_bug_for_users)-[:Bug]->(Cache),
create (have_expected_type:issue {name:'have expected type'}) create (have_expected_type)-[:Bug]->(Cache),
create (legacy_paths:issue {name:'legacy paths'}) create (legacy_paths)-[:Bug]->(Cache),
create (use_search_fonctionnality_of_meclipse:issue {name:'use search fonctionnality of meclipse'}) create (use_search_fonctionnality_of_meclipse)-[:Bug]->(Cache),
create (upgrading_from_previous_version:issue {name:'upgrading from previous version'}) create (upgrading_from_previous_version)-[:Bug]->(Task),
create (first_time:issue {name:'first time'}) create (first_time)-[:Bug]->(Task),
create (profile_of_type:issue {name:'profile of type'}) create (profile_of_type)-[:Bug]->(Task),
create (scanning_database:issue {name:'scanning database'}) create (scanning_database)-[:Bug]->(Task),
create (upgrading_from_previous_version)-[:Bug]->(TaskExecutor),
create (first_time)-[:Bug]->(TaskExecutor),
create (profile_of_type)-[:Bug]->(TaskExecutor),
create (scanning_database)-[:Bug]->(TaskExecutor),
create (upgrading_from_previous_version)-[:Bug]->(TaskQueue),
create (first_time)-[:Bug]->(TaskQueue),
create (profile_of_type)-[:Bug]->(TaskQueue),
create (scanning_database)-[:Bug]->(TaskQueue),
create (upgrading_from_previous_version)-[:Bug]->(TaskQueueExecutor),
create (first_time)-[:Bug]->(TaskQueueExecutor),
create (profile_of_type)-[:Bug]->(TaskQueueExecutor),
create (scanning_database)-[:Bug]->(TaskQueueExecutor),
create (upgrading_from_previous_version)-[:Bug]->(ThreadedTaskQueueExecutor),
create (first_time)-[:Bug]->(ThreadedTaskQueueExecutor),
create (profile_of_type)-[:Bug]->(ThreadedTaskQueueExecutor),
create (scanning_database)-[:Bug]->(ThreadedTaskQueueExecutor),
create (integration_server:issue {name:'integration server'}) create (integration_server)-[:Bug]->(Cache),
create (upload_artifacts_on_archiva:issue {name:'upload artifacts on archiva'}) create (upload_artifacts_on_archiva)-[:Bug]->(Cache),
create (deploying_artifact:issue {name:'deploying artifact'}) create (deploying_artifact)-[:Bug]->(Cache),
create (JdoUser_object_in_jdo_database:issue {name:'JdoUser object in jdo database'}) create (JdoUser_object_in_jdo_database)-[:Bug]->(Cache),
create (occurs_on_production:issue {name:'occurs on production'}) create (occurs_on_production)-[:Bug]->(Cache),
create (maps_to_extension_distribution:issue {name:'maps to extension distribution'}) create (maps_to_extension_distribution)-[:Bug]->(Cache),
create (LayoutException_Invalid_path_to_Artifact_mismatch)-[:Bug]->(Cache),
create (following_resource)-[:Bug]->(Cache),
create (retrieve_Maven_artifact_of_type_zip:issue {name:'retrieve Maven artifact of type zip'}) create (retrieve_Maven_artifact_of_type_zip)-[:Bug]->(Cache),
create (retrieve_Maven_artifact:issue {name:'retrieve Maven artifact'}) create (retrieve_Maven_artifact)-[:Bug]->(Cache),
create (find_Graph_visualization:issue {name:'find Graph visualization'}) create (find_Graph_visualization)-[:Bug]->(Graph),
create (find_Graph_visualization_for_dependencies:issue {name:'find Graph visualization for dependencies'}) create (find_Graph_visualization_for_dependencies)-[:Bug]->(Graph),
create (Antoine_Rouaze:issue {name:'Antoine Rouaze'}) create (Antoine_Rouaze)-[:Bug]->(Graph),
create (find_Graph_visualization)-[:Bug]->(graph),
create (find_Graph_visualization_for_dependencies)-[:Bug]->(graph),
create (Antoine_Rouaze)-[:Bug]->(graph),
create (nature_of_LDAP:issue {name:'nature of LDAP'}) create (nature_of_LDAP)-[:Bug]->(graph),
create (allowing_for_structured_organization:issue {name:'allowing for structured organization'}) create (allowing_for_structured_organization)-[:Bug]->(graph),
create (Allow_subtree_searches_for_LDAP_authentication:issue {name:'Allow subtree searches for LDAP authentication'}) create (Allow_subtree_searches_for_LDAP_authentication)-[:Bug]->(graph),
create (object_hierarchy:issue {name:'object hierarchy'}) create (object_hierarchy)-[:Bug]->(graph),
create (Allow_subtree_searches:issue {name:'Allow subtree searches'}) create (Allow_subtree_searches)-[:Bug]->(graph),
create (download_large_archive_file:issue {name:'download large archive file'}) create (download_large_archive_file)-[:Bug]->(Cache),
create (GB_file:issue {name:'GB file'}) create (GB_file)-[:Bug]->(Cache),
create (Detail_of_archiva:issue {name:'Detail of archiva'}) create (Detail_of_archiva)-[:Bug]->(Cache),
create (is_to_Integer_value:issue {name:'is to Integer value'}) create (is_to_Integer_value)-[:Bug]->(Cache),
create (retrieve_item_state_of_item:issue {name:'retrieve item state of item'}) create (retrieve_item_state_of_item)-[:Bug]->(Cache),
create (retrieve_item_state:issue {name:'retrieve item state'}) create (retrieve_item_state)-[:Bug]->(Cache),
create (archiva_repository:issue {name:'archiva repository'}) create (archiva_repository)-[:Bug]->(Cache),
create (retrieve_item_state_of_item)-[:Bug]->(Node),
create (retrieve_item_state)-[:Bug]->(Node),
create (archiva_repository)-[:Bug]->(Node),
create (retrieve_item_state_of_item)-[:Bug]->(Task),
create (retrieve_item_state)-[:Bug]->(Task),
create (archiva_repository)-[:Bug]->(Task),
create (retrieve_item_state_of_item)-[:Bug]->(TaskExecutor),
create (retrieve_item_state)-[:Bug]->(TaskExecutor),
create (archiva_repository)-[:Bug]->(TaskExecutor),
create (retrieve_item_state_of_item)-[:Bug]->(TaskQueue),
create (retrieve_item_state)-[:Bug]->(TaskQueue),
create (archiva_repository)-[:Bug]->(TaskQueue),
create (retrieve_item_state_of_item)-[:Bug]->(TaskQueueExecutor),
create (retrieve_item_state)-[:Bug]->(TaskQueueExecutor),
create (archiva_repository)-[:Bug]->(TaskQueueExecutor),
create (retrieve_item_state_of_item)-[:Bug]->(ThreadedTaskQueueExecutor),
create (retrieve_item_state)-[:Bug]->(ThreadedTaskQueueExecutor),
create (archiva_repository)-[:Bug]->(ThreadedTaskQueueExecutor),
"create (spring-taskqueue:class {name:'spring-taskqueue', favoritecolor: 'green'}) create (retrieve_item_state_of_item)-[:Bug]->(spring-taskqueue)",
create (retrieve_item_state)-[:Bug]->(spring-taskqueue),
create (archiva_repository)-[:Bug]->(spring-taskqueue),
create (Change_Password_via_Details_button:issue {name:'Change Password via Details button'}) create (Change_Password_via_Details_button)-[:Bug]->(Cache),
create (Change_Password:issue {name:'Change Password'}) create (Change_Password)-[:Bug]->(Cache),
create (logging_into_Archiva_instance:issue {name:'logging into Archiva instance'}) create (logging_into_Archiva_instance)-[:Bug]->(Cache),
create (Edit_Details:issue {name:'Edit Details'}) create (Edit_Details)-[:Bug]->(Cache),
create (build_action_in_Jenkins:issue {name:'build action in Jenkins'}) create (build_action_in_Jenkins)-[:Bug]->(Task),
create (use_Jenkins:issue {name:'use Jenkins'}) create (use_Jenkins)-[:Bug]->(Task),
create (Archiva_Issue:issue {name:'Archiva Issue'}) create (Archiva_Issue)-[:Bug]->(Task),
create (stacktrace_of_exception:issue {name:'stacktrace of exception'}) create (stacktrace_of_exception)-[:Bug]->(Task),
create (remote_url_Archiva:issue {name:'remote url Archiva'}) create (remote_url_Archiva)-[:Bug]->(DefaultTaskQueue),
create (appends_two_slashes_at_end:issue {name:'appends two slashes at end'}) create (appends_two_slashes_at_end)-[:Bug]->(DefaultTaskQueue),
create (repo_url:issue {name:'repo url'}) create (repo_url)-[:Bug]->(DefaultTaskQueue),
create (remote_url_Archiva)-[:Bug]->(Task),
create (appends_two_slashes_at_end)-[:Bug]->(Task),
create (repo_url)-[:Bug]->(Task),
create (remote_url_Archiva)-[:Bug]->(TaskQueue),
create (appends_two_slashes_at_end)-[:Bug]->(TaskQueue),
create (repo_url)-[:Bug]->(TaskQueue),
create (failing_test:issue {name:'failing test'}) create (failing_test)-[:Bug]->(Task),
create (failing_test)-[:Bug]->(TaskExecutor),
create (using_URL_setting_from_GUI:issue {name:'using URL setting from GUI'}) create (using_URL_setting_from_GUI)-[:Bug]->(Cache),
create (requests_towards_timestamped_snapshot_artifacts:issue {name:'requests towards timestamped snapshot artifacts'}) create (requests_towards_timestamped_snapshot_artifacts)-[:Bug]->(Cache),
create (using_Archiva:issue {name:'using Archiva'}) create (using_Archiva)-[:Bug]->(Cache),
create (plugin_fail:issue {name:'plugin fail'}) create (plugin_fail)-[:Bug]->(Cache),
create (using_URL_setting_from_GUI)-[:Bug]->(Task),
create (requests_towards_timestamped_snapshot_artifacts)-[:Bug]->(Task),
create (using_Archiva)-[:Bug]->(Task),
create (plugin_fail)-[:Bug]->(Task),
create (starts_without_LDAP:issue {name:'starts without LDAP'}) create (starts_without_LDAP)-[:Bug]->(Registry),
create (use_database_for_user_management:issue {name:'use database for user management'}) create (use_database_for_user_management)-[:Bug]->(Registry),
create (upgrade_Archiva:issue {name:'upgrade Archiva'}) create (upgrade_Archiva)-[:Bug]->(Registry),
create (Open_Redback:issue {name:'Open Redback'}) create (Open_Redback)-[:Bug]->(Registry),
create (starts_without_LDAP)-[:Bug]->(Task),
create (use_database_for_user_management)-[:Bug]->(Task),
create (upgrade_Archiva)-[:Bug]->(Task),
create (Open_Redback)-[:Bug]->(Task),
create (Class_for_property_role:issue {name:'Class for property role'}) create (Class_for_property_role)-[:Bug]->(Cache),
create (following_exceptions:issue {name:'following exceptions'}) create (following_exceptions)-[:Bug]->(Cache),
create (default_charset:issue {name:'default charset'}) create (default_charset)-[:Bug]->(Cache),
create (resolve_reference_to_bean:issue {name:'resolve reference to bean'}) create (resolve_reference_to_bean)-[:Bug]->(Cache),
create (Class_for_property_role)-[:Bug]->(Registry),
create (following_exceptions)-[:Bug]->(Registry),
create (default_charset)-[:Bug]->(Registry),
create (resolve_reference_to_bean)-[:Bug]->(Registry),
create (having_logs)-[:Bug]->(Task),
create (Executing_task)-[:Bug]->(Task),
create (having_logs)-[:Bug]->(TaskExecutor),
create (Executing_task)-[:Bug]->(TaskExecutor),
create (having_logs)-[:Bug]->(TaskQueue),
create (Executing_task)-[:Bug]->(TaskQueue),
create (having_logs)-[:Bug]->(TaskQueueExecutor),
create (Executing_task)-[:Bug]->(TaskQueueExecutor),
create (having_logs)-[:Bug]->(ThreadedTaskQueueExecutor),
create (Executing_task)-[:Bug]->(ThreadedTaskQueueExecutor),
create (__at_INFO:issue {name:'| | at INFO'}) create (__at_INFO)-[:Bug]->(Cache),
create (jvm_:issue {name:'jvm |'}) create (jvm_)-[:Bug]->(Cache),
create (deleting_artifact_INFO:issue {name:'deleting artifact INFO'}) create (deleting_artifact_INFO)-[:Bug]->(Cache),
create (INFO_:issue {name:'INFO |'}) create (INFO_)-[:Bug]->(Cache),
create (running_Archiva:issue {name:'running Archiva'}) create (running_Archiva)-[:Bug]->(Cache),
create (fail_on_Windows:issue {name:'fail on Windows'}) create (fail_on_Windows)-[:Bug]->(CommonsConfigurationRegistry),
create (environment_in_Windows:issue {name:'environment in Windows'}) create (environment_in_Windows)-[:Bug]->(CommonsConfigurationRegistry),
create (sec_FAILURE:issue {name:'sec FAILURE'}) create (sec_FAILURE)-[:Bug]->(CommonsConfigurationRegistry),
create (breaks_assumptions:issue {name:'breaks assumptions'}) create (breaks_assumptions)-[:Bug]->(CommonsConfigurationRegistry),
create (fail_on_Windows)-[:Bug]->(Node),
create (environment_in_Windows)-[:Bug]->(Node),
create (sec_FAILURE)-[:Bug]->(Node),
create (breaks_assumptions)-[:Bug]->(Node),
create (fail_on_Windows)-[:Bug]->(Registry),
create (environment_in_Windows)-[:Bug]->(Registry),
create (sec_FAILURE)-[:Bug]->(Registry),
create (breaks_assumptions)-[:Bug]->(Registry),
create (Behaviour_of_multiple_proxy_connectors:issue {name:'Behaviour of multiple proxy connectors'}) create (Behaviour_of_multiple_proxy_connectors)-[:Bug]->(Cache),
create (handles_queue_case_policies_in_configuration_parser:issue {name:'handles queue case policies in configuration parser'}) create (handles_queue_case_policies_in_configuration_parser)-[:Bug]->(Cache),
create (Central_Repository:issue {name:'Central Repository'}) create (Central_Repository)-[:Bug]->(Cache),
create (failures_Releases:issue {name:'failures Releases'}) create (failures_Releases)-[:Bug]->(Cache),
create (persistet_in_XML_configuration_file:issue {name:'persistet in XML configuration file'}) create (persistet_in_XML_configuration_file)-[:Bug]->(Cache),
