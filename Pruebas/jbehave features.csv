"summary","type"
"""And"" step fails when used in composite steps Hey guys,

Im using JBehave with Java v3.7.5

I have noticed that if we use ""And"" in a composite step then it tries to match it with an @And annotation

For example, consider the following scenario

{code:java}

   @Given(""I execute step one"")
   public void execute_step_one() {
      ...
   }

   @Given(""I execute step two"")
   public void execute step two() {
      ...
   }

   @Given(""I execute step one and two"")
   @Composite(steps = {
      ""Given I execute step one"",
      ""And I execute step two""
   })
   public void execute_step_one_and_two() {
      
   }
{code}


Would fail because it tries to match the composite ""And I execute step two"" with an @And annotation

If I change the composite to ""Given I execute step two"" - it works

Could someone confirm that this is an issue in the latest version? I will try to fix it if it is

As I understand, an ""And"" should match with the previous step i.e. if an ""And"" follows a ""Given"", then it should match with a ""Given"". If it follows a ""When"", then it should match a ""When""

Thanks!
Ben","non-feature containing"
"'And' Step (AndStep) ignores CandidateStep step type On http://jbehave.org/reference/latest/concepts.html it states: 

""A step starting with And assumes the same meaning of the previous step"" 

but this clearly isn't the case in practise, nor does it even require any preceeding step type to be defined. For example with: 

public class Steps extends org.jbehave.scenario.steps.Steps { 
@When(""the wind blows"") 
public void theWindBlows() { System.err.println(""when it blows then boom""); } 
@Given(""the wind blows"") 
public void theWindBlows2() { System.err.println(""given it blows then boom""); } 
} 

Scenario: Test 
And the wind blows 
Given the wind blows 
And the wind blows 
When the wind blows 
And the wind blows 

Outputs: 

when it blows then boom 
given it blows then boom 
when it blows then boom 
when it blows then boom 
when it blows then boom 


Obviously you wouldn't intend to start your scenario with an AndStep, but it's easy enough to get there (or produce one of the other problems) if you are copying/editing scenarios. I think it would be better if AndSteps assume the meaning of the previous step, as intended(?) according to the web documentation.","non-feature containing"
"'Story Navigator' does not show stories with no meta information on story level I have stories with no meta information on story level. In other words - some of my stories begins with just: 
{color:blue}{{Meta:}}{color} 
{color:blue}{{Narrative:}}{color} 

Unfortunately I don't see those stories in 'Story Navigator', even if 'Meta' filter is set to 'All'. I think that they should be visible there.","non-feature containing"
"0.0 gets parsed as a Long When defining a step that takes a List<Double>, inputs such as 1.0, 1.5, etc. work fine. But 0.0 throws a ClassCastException due to jbehave parsing it as a Long. It should be parsed as a double.","non-feature containing"
"@(Before|After)Scenario should by default apply to both scenarios parametrized by example table and not JBEHAVE-1008 introduced ScenarioType.ANY. 

As per title, I think it should not matter whether we are running through an example table or not. 

ANY should be the default value for uponType of BeforeScenario and AfterScenario. 

{code} 
public @interface BeforeScenario { 
ScenarioType uponType() default ScenarioType.ANY; 
{code} 

In fact, from a domain point of view, there is no difference between a scenario with example table and one without. Is there? They're both *scenarios*. 
A scenario with example table is just a scenario template that at run-time will result in many scenarios actually being run, isn't it? 

{quote} 
But in this case, the name of the enum starts to feel bad 
{quote} 
As Daniel pointed out, the name is currently misleading. 
I found myself wondering what was wrong once I set up a JBehave project with an @BeforeScenario (didn't explicitly specify uponType), and sometimes it worked, sometimes it didn't (depending on which story I was running, with or without example table). 

If you agree on this, I will then submit a PR. 
Thanks","non-feature containing"
"@AfterScenario should execute in reverse order to @BeforeScenario Consider WebDriver situations, where the order below is nearly always going to be the case: 

new PerStoriesWebDriverSteps(..), 
new PerStoriesContextView(..), 
new WebDriverScreenshotOnFailure(..) 

If we change from PerStoriesWebDriverSteps to PerScenarioWebDriverSteps, then we have a problem. PerScenarioWebDriverSteps could conceivable drop the reference to WebDriver after closing it, and cause WebDriverScreenshotOnFailure to fail when it's needing to leap into action. 

The reproduction involved making steps fail, and making the PerStoriesWebDriverSteps to PerScenarioWebDriverSteps change.","non-feature containing"
"@AfterStories is run before all stories have finished. To reproduce, Go to tutorial/etsy-spring 

# For either 'stable' profile or the main one, change core to 3.5-beta-3 
# Run that, note the existence of ""WebDriver has not been found for this thread"" exception in the log, and shortened run. 
# For either 'stable' profile or the main one, change core to 3.5-beta-2 (the release before) 
# Run that, note the exception in (2) is not seen. 

Thus the bug/regression was introduced between the the 3.5-beta-2 and 3.5-beta-3 releases of core. 

Note you will have to comment out some of LifecycleSteps.java to do this experiment.","non-feature containing"
"@AfterStory method is not invoked is step parametrisation fails I've attached a stripped-down example to demonstrate the problem. Notice that in the failure case the parameter in the table is lower-cased causing it to mis-match the parameter in the scenario which is camel-cased. 

My original email for context: 
One of the testers accidentally checked-in a partial change list, causing JBehave to throw RunningStoriesFailedException and StoryResourceNotFound exceptions. In and of itself, this isn't a big deal. However, we are calling webDriver.close() in @AfterStory (this closes the browser window). In the case of a RuntimeException, I doesn't look like @AfterStory is called, which leaves the browser running. Since our tests need to share a profile (and only one instance of the profile may be run at a time), this causes future tests to hang until the browser is closed manually. In a Continuous Integration environment, this is non-trivial. 

My Question: 
In the case that JBehave throws a RuntimeException, is there a way to trap it so that we can close down the browser? 

Mauro's Response: 
OTOH all exceptions (in fact throwables) should be caught. Could you 
create a sample project reproducing problem and attached it a jira issue? 

Please try against latest 3.0-beta-12 which has just been cut.","non-feature containing"
"@And annotation The requirement and business analysts at my company are writing user stories using the 'And' parameter.  It would be very very useful if you could implement this annotation.","feature containing"
"@AsParameters tables are not formatted Custom type parameter List is not formatted as html table, only as plain string (e.g.: |cell1|cell2|). 

For example: 
@AsParameters 
class SampleParameterClass { 
.. 
} 

@Given 
public void sampleGiven(List<SampleParameterClass> params) { 
.. 
} 

Would result a non formatted table. 

I think the problem is in the StepCreator#isTable method, because the input Type is a List, but List.class.isAssignatleFrom(ExamplesTable.class) is not true, but it is a table! 

Workaround is to replace List<SampleParameterClass> to ExamplesTable parameter in your method and call the getRowAs(SampleParameterClass.class) on the ExamplesTable.","non-feature containing"
"@Before/AfterStories executions that have failed should be highlighted in red in the reports.hml entries These are executions that are not bound to scenarios. The ""failed"" status in the reports.html should be triggered by either failed scenarios or failed steps.","feature containing"
"@BeforeScenario and @AfterScenario As a developer, I want to be able to reset my state after each scenario in a multi-scenario story so that I can make my scenarios independent.","feature containing"
"@BeforeScenario executed after lifecycle ""Before"" step in 4.1 We've noticed a change in the order things are executed. In 3.9.5 {{@BeforeScenario}} was executed before lifecycle steps defined in the ""Before"" section of the {{*.story}} file. In 4.1 {{@BeforeScenario}} is performed _after_ the lifecycle step .

This is output from a demo using jBehave 4.1:
{quote}
###> Performing @BeforeStories DemoASteps
###> Performing @BeforeStory DemoASteps
###> lifecycle step that is executed before scenario in DemoA
###> Performing @BeforeScenario DemoASteps
###> given step that is executed inside demoA scenario 1
###> a step that is executed inside demoA scenario 1
###> an outcome checked inside demoA scenario 1
###> lifecycle step that is executed after each scenario regardless of outcome in demoA
###> lifecycle step that is executed after each successful scenario in demoA
###> Performing @AfterScenario DemoASteps
###> Performing @AfterStory DemoASteps
###> Performing @AfterStories DemoASteps
{quote}

We believe this to be in error. The symmetry of ""annotation surrounding lifecycle"" is lost. You end up doing extra ""Before"" steps, since you can't rely on your class being reset in {{@BeforeScenario}}.

If the change is intentional, please elaborate on the reason for the change.

Attached are the files used (no complete project, sorry). You can easily reproduce the behaviour by adding printouts in the methods of your own favourite project,","non-feature containing"
"@BeforeScenario failures prevent the story reporting to complete Failures in @BeforeScenario methods should be treated as normal step failures and allow the scenario to run (while not performing the steps) and to complete the story reporting. 

This also allows the stats to be collected and reported.","non-feature containing"
"@BeforeScenario not called one per 'Examples' permutation. Could @BeforeScenario be enhanced: 

@BeforeScenario(BEFORE_EXAMPLES_PERMUTATIONS_TOO) 

or could we have a new annotation: 

@BeforeExamples 

There is some feeling that this used to work in JB 3.0. Refer bug.zip attached 

- Paul on behalf of Bill","non-feature containing"
"@BeforeScenario runs for every steps file that are instanciated When i run my scenario that are using multiple steps files, the method that are annotated with @BeforeScenario runs for each steps file. 

Im excpecting it to only run per scenario not per steps file","non-feature containing"
"@BeforeStory steps not performed before GivenStories There seems to be a bug in 4.0-beta-8 concerning the usage of GivenStories. 

If I have a story which uses ""GivenStories"" then I get this exception: 

{noformat} 
org.jbehave.web.selenium.DelegatingWebDriverProvider$DelegateWebDriverNotFound: WebDriver has not been found for this thread. 
Please verify you are using the correct WebDriverProvider, with the appropriate credentials if using remote access, e.g. to SauceLabs: -DSAUCE_USERNAME=xxxxxx -DSAUCE_ACCESS_KEY=xxx-xxxx-xxxx-xxxx-xxx 
at org.jbehave.web.selenium.DelegatingWebDriverProvider.get(DelegatingWebDriverProvider.java:24) 
at example.pages.PageObject.getDriver(PageObject.java:30) 
at example.pages.LoginPage.isLoggedIn(LoginPage.java:15) 
at example.steps.LoginSteps.userLoggedIn(LoginSteps.java:15) 
{noformat} 

If I use JBehave 3.9.3 then it works as expected. 

You can reproduce it with this example: https://github.com/OttoDiesel/jbehave-selenium-example.git 

In class ""example/SeleniumStories.java"" change story filter to: 
String includes = System.getProperty(""story.filter"", ""**/Stammdaten-Mutation.story""); 

It would be nice if you could fix it this week since this is the example for the second part of the paper on JBehave. :)","non-feature containing"
"@Composite step is executing ""successfully"" when one of its sub-steps is Pending. We believe that these should behave in the same manner as other pending steps; the pending step should be marked in the output and subsequent steps should not be performed.","non-feature containing"
"@Given, @When and @Then could make the pattern optional ... in that case the Java method that it pertains to could provide the matching expression: 

{code} 

@Given 
public void aUserWithALargeBankBalance { .. } 

{code} 

would be equiv to 

{code} 
@Given(""a user with a large bank balance"") 
public void aUserWithALargeBankBalance { .. } 
{code} 

or maybe we could endorse Ruby naming conventions for extra capitalization clarity: 

{code} 
@Given 
public void a_user_with_a_large_bank_balance { .. } 
{code} 

Obviously this is no good for cases where there are parameters. Though that could be solved too later, with yet more work. 

Guilherme Silveira's idea :)","feature containing"
"@Ignore annotation ignored The JBehave runner ignores the @Ignore annotation. 

i.e. It actually runs TestCase(s) marked with @Ignore.","non-feature containing"
"@Named annotation doesn't work in scenario when Examples table and MetaInfo is used Please take a look at below scenario. 
Meta: 
@supported_type A,B,C 
Given message with supported type 
When received with <field> field 
Then message is stored 
Examples: 
|field | 
|action| 

@Named annotation doesn't work when I want to inject @supported_type and also 'field' example value for this scenario. 
I guess problem is in StoryRunner class (lines 254-260). Memthod addMetaParameters is not called when scenario is parametrized. 
Can we invoke this method also for parametrized scenarios?","non-feature containing"
"@Named not respecting parameter order @Named doesn't seem to do its job, and parameter ordering in the method declaration seems to confuse the assignment code. For instance: 

""Given a $var1 with $var2 and $var3"" 

void testVars(@Named(""var3"") String var3, @Named(""var1"") String var1, @Named(""var2"") String var2) 

When executing testVars, it assigns var3=$var3, var1=$var1, but var2=$var3 

Clearly, the correct assignment is var2=$var2","non-feature containing"
"@Retry Annotation InternetExplorer-WebDriver is a pretty flaky target for jbehave-web. 

If we had a @Retry(upto-n-times) annotation, then we might be able to flakiness. It seems to use the the step is the canonical place to express a retry. 

If the retry works, the previous failures are consumed, and not reported. Instead, its reflected in the stats for the job/story/scenario.","feature containing"
"A tree-based story runner that separates creation of performable steps from execution In 3.x the StoryRunner creates and executes the steps for each story and scenario while keeping state. 

We want to separate the creation of performable steps from their execution and build a tree of performable objects. The state should not be held any more as a member variable but in a shared run context. 

The result of execution of the performable tree should be serialisable and consumable by any reporting/UI layer independent of the StoryReporters.","feature containing"
"A unique syntax for steps parameters, suitable for scenarios both with and without example table From http://jbehave.org/reference/stable/parametrised-scenarios.html: 
{quote} 
It is also important to note that the same (@Named-annotated) methods can match steps that are executed both as standalone or via examples table, provided that both regex patterns are configured, one as the main pattern and one as an alias: 

@Given(""a stock of symbol $symbol and a threshold of $threshold"") // standalone 
@Alias(""a stock of <symbol> and a <threshold>"") // examples table 
public void aStock(@Named(""symbol"") String symbol, @Named(""threshold"") double threshold) { 
{quote} 

From a user perspective, it is a non-sense to me. 

1. Those aliases do not provide any business value. 

2. They make for duplication for free. 

3. Bad user experience. That is forcing the user to write an alias just for JBehave to be able to handle both an example table and a standalone parametrized step. A user should not need to bother about the differences. The system should bother for him/her instead, by hiding the differences. 

What I'm suggesting here is to have a *unique syntax* for parameters, based on '$' (as definitely the most suitable for variables), to work with steps both with and without an example table. 

Therefore, with the following step method 
{code} 
@Given(""a stock of symbol $symbol and a threshold of $threshold"") 
public void aStock(@Named(""symbol"") String symbol, @Named(""threshold"") double threshold) { 
{code} 

..users would be able to write the following two scenarios: 
{code} 
Scenario: with examples 
Given a stock of symbol $symbol and a threshold of $threshold 
.... 
Examples: 
|symbol|threshold| 
|GOOG|590| 
|YHOO|50| 

Scenario: without examples 
Given a stock of symbol GOOG and a threshold of 3 
... 
{code} 

Now, I'm not sure about the implementation, though, whether it could be a simple change or require intensive re-write. 
I've tried to have a look at the code (StoryRunner) but I found it quite hard to follow. 
What do you think? 

Thank you","feature containing"
"ANSI-coded console output As contributed by Adriano Bonat: 

https://github.com/tanob/jbehave-core/commit/1de6908065a085621c4b9576b589d7e005aee606","feature containing"
"Ability to enqueue ad-hoc stories asynchronously. Add method to Embedder to allow to enqueue stories asynchronously, allowing the exposure of the multi-threading outside of the embedder methods such as runStoriesAsPaths().","feature containing"
"Ability to have comments in scenarios Ability to have comments in scenarios, not before. Between sceneario steps.","feature containing"
"Abstract scenarios should not be executed Automatically exclude scenario classes that are abstract.","feature containing"
"Add ""Flaky"" status to test results Problem is described here https://groups.google.com/forum/#!topic/jbehave-user/gs0ro9txURM","feature containing"
"Add @BeforeStories/@AfterStories annotations It is sometimes useful to invoke setup/teardown methods only once before and after a collection of stories, e.g. to setup and teardown an external service. 

The annotations @Before/AfterStories would complement annotations @Before/AfterStory, run before and after each story, and @Before/AfterScenario, run before and after each scenario.","feature containing"
"Add @BeforeStory and @AfterStory annotations in candidate steps As requested on user list, there are usecases when setup/tear down steps are required at story level (i.e. for multiple scenarios) and not at single scenario level (dealt by @BeforeScenario/@AfterScenario annotations).

Equivalent story-level annotations @BeforeStory/@AfterStory would address these usecases.","feature containing"
"Add AncestorDelegatingResolver A StoryNameResolver that iterates through a configurable number of path ancestors and applies for each the specified delegate resolver (defaulting to UnderscoredToCapitalized).


  ","feature containing"
"Add Ant task integration Add Ant integration layer to run scenarios via Ant tasks.","feature containing"
"Add CGLIB support to JMock extension Create a new class called UsingJMockWithCGLIB that extends UsingJMock, but overrides the Mock inner class to construct CGLIB-based mocks.","feature containing"
"Add CrossReference report As contributed by the Dallas ""GeekNight"" folks, a xref JSON and XML data report that can be consumed by different views.","feature containing"
"Add Enum converters to default ParameterConverters EnumConverter and EnumListConverter should be added to the default converters provided by ParameterConverters","feature containing"
"Add FluentEnumConverter, able to convert lower-cased, space-separated values to Enums Copying&pasting from the javadoc: 

An EnumConverter allowing stories prose to be more natural. Before performing the actual conversion, it transforms values to upper-case, with any non-alphanumeric character replaced by an underscore ('_'). 

Example: assuming we have defined the step ""Given I am on the $page"" which is mapped to the method iAmOnPage(PageEnum page), we can then write in a scenario: 

Given I am on the login page 

instead of: 

Given I am on the LOGIN_PAGE 

Warning. This requires enum constants to follow the standard conventions for constant names, i.e. all uppercase letters, with words separated by underscores.","feature containing"
"Add Groovy support Starting from Adriano Bonat's contribution via GitHub (http://github.com/tanob/jbehave-core), add a jbehave-groovy module with extensions of core for Groovy-specific support, similarly to IOC framework extensions (Guice, Pico, Spring). 

Initially, it will contain a GroovyStepsFactory to create steps instances from Groovy scripts. 

It should also provide support for @UsingGroovy annotation, to specify the GroovyClassLoader and the GroovyResourceFinder.","feature containing"
"Add JBehave Spring Namespace support for easier configuration I have implemented an initial version, it is a clone of master branch of jbehave project. My implementation is on git@github.com:maggandalf/jbehave-core.git 

Configuring Embedder for working with Spring shall be: 

<jbehave:embedder id=""embedder""> 

<jbehave:classpathLoader>target/classes</jbehave:classpathLoader> 

<jbehave:output>TXT</jbehave:output> 

<jbehave:output>HTML</jbehave:output> 

<jbehave:output>CONSOLE</jbehave:output> 

</jbehave:embedder>","feature containing"
"Add Jenkins support As Jenkins and Hudson have started to diverge, it's useful to have separate plugins that can track different versions of the tools.","feature containing"
"Add JiraMetaMatcher A MetaMatcher that looks up a JIRA issue via REST and allows the meta if the issue is open.","feature containing"
"Add Json output format Json format is quite popular today. It would be nice to have default Json output format","feature containing"
"Add Lifecycle Scope Currently, lifecycle steps are implicitly meant to be executed before and after each scenario. 

Adding a new lifecycle scope would allow to support the execution of before/after steps both at scenario and story level.  

Syntax: 

Lifecycle:
Scope:  STORY|SCENARIO
Before: 
...
After:
...
","feature containing"
"Add Maven web archetypes Add archetypes using jbehave-web-selenium.","feature containing"
"Add Mocking support I think Damien has started on this, but I thought I'd formalise a request for mocking support. As far as something like JMock goes, all we really need to do is provide a Mock base class. We could take this a step further and provide mock injection (which Stacy does using PicoUnit), for example if you create a method like this:

public void shouldDoSomething(Employee employee)

Then employee could be a mock. If we assume the Mock is a JMock mock, you'd have to cast it back to Mock to define expectations. And what about other mock tools? Anyway, the base class would be enough for now.","feature containing"
"Add Narrative elements to Story parsing The current domain model captures everything before the first Scenario as unstructured text (hence the name Blurb in the domain module). Hence not an issue in a plain text report (newlines are maintained) but becomes less readable in, say, HTML.

We should add an optional Narrative element with appropriate keywords, so as to be able to distinguish between the various elements of the narrative (""In order to"", ""As a"", ""I want to"").","feature containing"
"Add ParameterConverter for ExamplesTable To facilitate parsing of table parameters with tabular structure, it's useful to have a parameter converter that takes multi-line input and converts it to a ExamplesTable. This then allows users to match step such as:

Given the traders: 
|name|rank|
|Larry|Stooge 3|
|Moe|Stooge 1|
|Curly|Stooge 2|

using a method with ExamplesTable parameter:

@Given(""the traders: %tradersTable"")
public void theTraders(ExamplesTable tradersTable) {
// use traders table to extract required data
}","feature containing"
"Add SauceLabs ContextView Should use the WebDriver JavascriptExecutor nature to send current scenario context.","feature containing"
"Add Scala support Add support to allow steps to be written in Scala","feature containing"
"Add ScenarioType.ANY to allow @Before/AfterScenario to run before/after any scenario Before/AfterScenario has parameter uponType that determines when it will run. NORMAL type is run once for all the scenario cases; EXAMPLE type is run for each scenario case. 

I am using the term ""scenario case"" for each row of the examples table (in case of parametrised scenarios) or the scenario itself (in case of ""normal"" scenarios). 

When you want to define e.g. Before Scenario step, that will run before every scenario case, regardless whether it is parametrised or not, you must do something like this: 

{code:java} 
// before scenario will be called 2x for the first scenario case 
private boolean initialized; 

@BeforeScenario 
public void beforeScenario() { 
if (!initialized) { 
// do some stuff 
initialized = true; 
} 
} 

@BeforeScenario(uponType = ScenarioType.EXAMPLE) 
public void beforeExample() { 
beforeScenario(); 
} 
{code} 

This is annoying and should be fixed. There are some ways how to fix it I can think of: 
* simple: Add another value to ScenarioType enum (e.g. ANY). But in this case, the name of the enum starts to feel bad. 
* more work: Add annotation, e.g. @BeforeScenarioCase 

What do you think is better? Am I missing something? Propose a solution and I can submit a patch.","feature containing"
"Add Selenium StepsConfiguration and StepMonitor Add a Selenium extension of StepsConfiguration that uses a SeleniumStepsMonitor, allowing to decorate a given StepsMonitor to provide link to current scenario in Selenium context on performing step:

public void performing(String step){
String context = seleniumContext.getCurrentScenario() + ""<br>"" + step;
selenium.setContext(context);
delegate.performing(step);
}","feature containing"
"Add Selenium/WebDriverSteps to capture/save screenshot upon failing scenario Add instances of Selenium/WebDriverSteps to capture/save screenshot upon scenario failure. 

The different names reflects the difference in the Selenium and WebDriver APIs.","feature containing"
"Add Spanish language to eclipse plugin Spanish language was included in a 3.9 core beta release, but is there a way to include this language to eclipse plugin?","feature containing"
"Add StepFinder In order to avoid duplication of steps 
As a story writer 
I want to find all candidate steps (i.e. methods) that match a particular textual step and 
report them as Stepdocs.","feature containing"
"Add Story Mapping with Swimlane view In order to get visibility of themes/epics 
As a release planner 
I want to be able to map stories by meta filters 

Using story maps allows us to group stories of cross-cutting concerns, using filters on meta info (JBEHAVE-220). 

A swimlane view (with one lane per filter) would allow a clear and concise view.","feature containing"
"Add UnoverridableEmbedder An extension of Embedder that does not allow the override of the Embedder methods, specifically configuration() and candidateSteps(), and forces the use of the modifier methods useConfiguration() and useCandidateSteps().","feature containing"
"Add XML templateable output Provide an XML template (similar to ftl/jbehave-html-output.ftl) which can be easily customised.","feature containing"
"Add a StoryReporter method before starting each individual example I would like to write a StoryReporter that graphs the run time of each scenario in rrd, e.g. run a use case after login and show how the reponse time varies over time. This should work well with the beforeScenario/afterScenario methods, if the scenarios are executed one (i.e. do not use an examples table). 
If a scenario however uses an example table, the individual before/after events are not reported, so the only way to do this is to count the success/failure calls, which looks kind of error-prone to me. 

Can we add a beforeExampleScenario method to the StoryReporter ?","feature containing"
"Add a beforeStep() method in the StoryReporter There should be a beforeStep() method in the StoryReporter to allow users to implement there own code before each step starts. The existing successful(), failed() etc behave like an afterStep() method already.","feature containing"
"Add an optional StoryFinder class element to @UsingPaths annotation Currently @UsingPaths is using one fixed instance of StoryFinder class. 
In order to use a custom StoryFinder class with the annotation, I would like to include an optional storyFinder element in the @UsingPaths annotation.","feature containing"
"Add automatic generation of OSGi manifest for jbehave-web In order to be able to load jbehave-web into an OSGi container.","feature containing"
"Add configurable sorting strategies for stories in reports Allow stories to be sorted by different configurable strategies: 

- alphabetical 
- by success/failure criteria 
- by number of scenarios or steps","feature containing"
"Add context view mechanism with JFrame window to show current execution There is a SeleniumStepMonitor in jbehave-web which shows live the steps which are performed in a small Swing window which can be positioned anywhere on the screen while stories are executed. It displays the current scenario and the step name. 

I tried to have such a step monitor in another use case: testing a rich client with JBehave and IBM Rational Functional Tester. It would be nice if I could use that monitoring window for this use case too. But SeleniumStepMonitor is only meant for Selenium. 

But I think it could be moved to core so that it can be used when automating any GUI, with or without Selenium. I mean a general purpose ""GuiStepMonitor"" or something like this. So it could be used even if I don't use Selenium.","feature containing"
"Add dependencies to core POM Declare dependencies in core POM. These will all be declared as provided as none are mandatory.","feature containing"
"Add failed step as UUIDExceptionWrapper message To facilitate debugging, it may be useful to have in the exception message the step that failed.","feature containing"
"Add formatting table transformer A TableTransformer that formats the table according to the max width of each column.","feature containing"
"Add generate-story-code goal Add mojo to run generate-story-code goal from a given story using a configurable CodeGenerator implementaion.","feature containing"
"Add getter/setter for FilePathResolver in SpringStoryReporterBuilder As noted by Pete Suggitt, the getter/setter for FilePathResolver is missing from SpringStoryReporterBuilder.","feature containing"
"Add i18n keywords for story cancellation and duration Since JBEHAVE-563, story cancellations are reported. Introduce new keywords to describe story cancellation and duration.","feature containing"
"Add i18n to gherkin support The i18n example uses the RegexStoryParser(Keywords keywords) constructor but for GherkinStoryParser i18n doesn't seem to be supported. 

Could you add a GherkinStoryParser (Keywords keywords) constructor + example + documentation for Gherkin stories not written in English? 

Natural language is a core feature of BDD and we'd like to use the emerging Gherkin standad for story styntax.","feature containing"
"Add inherit* property for array-valued annotation property to control inheritance behaviour As explained in JBEHAVE-327, it's useful to control inheritance behaviour. 

By default inheritance behaviour is true, meaning AnnotationFinder goes up the inheritance tree and collects array values for a given annotation property. 

This inheritance behaviour can be inhibited by setting the property 

inherit<propertyName>=false","feature containing"
"Add meta tag support to Gherkin story parser Currently GherkinStoryParser does not support meta info. 
Gherkin provides support for tags which should be interpreted as no-value meta properties and can be used to filter, e.g. @skip tag.","feature containing"
"Add method and steps instance information to matching events in StepsMonitor In order to help identify in which steps class a matched method is contained 
As a developer 
I want to have method and steps instance information available","feature containing"
"Add monitoring to ArchivingFileManager A pluggable FileMonitor interface with PrintStream-based and silent impls to allow monitoring of runtime events.","feature containing"
"Add name resolving strategy for REST resources Some REST providers are not case-insensitive, thus requiring a name resolving strategy to handle the resource name. 

Provide a mechanism to resolve the name, defaulting to a strategy to convert to lower case.","feature containing"
"Add replacing table transformer A table transformer that will replace all values according to a regex","feature containing"
"Add root package to story details Add root package to story details, which can be parsed and used to generate code from story text file.","feature containing"
"Add scenario-specific filters as anchors of GivenStories paths As a story writer, I find that rather often one scenario depends on another in its Given clause. 

So I would like to use something like this 

{code} 
GivenStories: path/to/story#{id:scenarioId} 
{code} 

where ""id"" is the meta tag of the scenario 

{code} 
Scenario: 

Meta: @id scenarioId 
{code}","feature containing"
"Add spanish language support Hi, 
I downloaded the plugin which integrates jbehave and eclipse, and I noted the language (spanish) we use for scenarios is not included in the plugin. So It doesn't recognize jbehave keywords. Is There any way to include this language to the supported ones?","feature containing"
"Add specInstance param to listener.criteriaVerificationStarting We should provide a way for JMock and other extensions to call methods on a specInstance before setup. This will allow extensions to use dependency injection. In JMocks instance, a Spec could define a dependency on a JMock by doing something like:

class SomeSpec {
Mocker mocker;

public void iWantToUseMocks(Mocker mocker) {
this.mocker = mocker;
}

...
}

The spec can then use mocker to create mocks, set expectations and do auto verification.","feature containing"
"Add standalone cross-reference navigator Importing Paul's Story Navigator as a standalone HTML/JS application that allows the navigation of the cross-reference report output.","feature containing"
"Add start and end time to each step in cross reference In cross reference file, one cannot see the start and end times of stories, scenarios or steps. This can be quite handy when one wants to cross reference the tests execution with another system.","feature containing"
"Add story timing info to CrossReference Add timing fields 'started' and 'duration' (milliseconds)","feature containing"
"Add support for BigDecimal and BigInteger parameters Posted by Gerard Meszaros on wiki: 

We had trouble using numbers with decimal points in our specs because we were dealing with money. We tried declaring parameters as BigDecimal but could not get this to work. It should be possible to do this out of the box with no extra effort as it is a pretty common need.

BigInteger should also be supported.","feature containing"
"Add support for PhantomJS to PropertyWebDriverProvider As contributed in https://github.com/jbehave/jbehave-web/pull/9","feature containing"
"Add support for Russian locale Add support for Russian locale.
Add i18n/keywords_ru.properties with Russian keywords map","feature containing"
"Add support for Simplified Chinese locale Add support for Simplified Chinese locale.
Add i18n/keywords_zh_CN.properties with zh_CN keywords map","feature containing"
"Add support for TeamCity build script interaction Provide support for TeamCity via the build script interaction: 

https://confluence.jetbrains.com/display/TCD9/Build+Script+Interaction+with+TeamCity

TeamCity will interpret JBehave scenarios as tests, providing the pass/fail status and the timing for each test.
","feature containing"
"Add support for WebDriver API Add support for the WebDriver API, new feature of Selenium 2.0. 
The support for the WebDriver API will complement the support for the Selenium API, featured in both Selenium 1.0 and 2.0.","feature containing"
"Add support for XWiki as REST provider Support XWiki as REST provider","feature containing"
"Add support for annotated steps before and after example scenarios It would be nice to have annotations (or any other way) to run some methods before and after each example.","feature containing"
"Add support for meta filtering in story running Upgrade to 3.1 as default Core dependency. 

Support specification of meta filters in the Run Story page. 

If meta filters not set, it should use the 3.0.x compatible StoryRunner method, so users are not forced to upgrade to 3.1, until they need to. 

That meta filtering is a 3.1 only features should also be notified on the Run Story page.","feature containing"
"Add support for scenario before/after lifecycle in story syntax Add lifecycle story syntax to allow before/after scenario steps to be executed. 

{code} 
Lifecycle: 
Before: 
Given a setup step 
After: 
Then a teardown step 
{code}","feature containing"
"Add table formatting Add table formatting command Ctlr-F (or Cmd-F) for selected text. 

Formatting should also convert tabs (as exported e.g. from a spreadsheet) to table separators.","feature containing"
"Add time duration to story statistics and reports view Add story time duration in ms","feature containing"
"Add timings to serialisable data of PerformableStory See attached test case to reproduce","feature containing"
"Add to StoryFinder method to find paths by URL code location and single include/exclude patterns A very common use case is to look up paths using a URL code location. 

Moreover the single include/exclude pattern is also by far the most used.","feature containing"
"Add unpack-view-resources goal to Maven Plugin A goal to unpack the resources to the view directory. The main advantage over the maven dependency plugin is the ability to derived the view directory location from the configured StoryReporterBuilder accessible via the Embedder. 

The resources are configured as normal project artifacts and can be filtered based on the resource dependency type and artifactIds, via properties resourceType and resourceArtifacIds 
(which default to ""zip"" and {""jbehave-core"", ""jbehave-site-resources""}). 

Resource content can optionally be filtered based on the resourceIncludes/Excludes properties.","feature containing"
"Add/rename examples events in ScenarioReporter As highlighted by the HTML reporting, the examples events reported by the ScenarioReporter should become:

- examplesTable(ExamplesTable) -> beforeExamples(ExamplesTable)
- examplesTableRow(Map<String,String>) -> example(Map<String,String>)
- afterExamples() -> new event

Renamed events have been deprecated and functionally delegate to new events.","feature containing"
"Adding new Parameter Converter for Json support Adding new feature for Json conversion (called JsonConverter) to be able to use Json strings/files as a test data which will be automatically converted to Java objects (DTOs) when pass this data from story file.

(Like ExamplesTableParametersConverter which automatically converts example tables/files with example tables to Java objects (DTOs) via @AsParameters annotation when pass it from story file)

JsonConverter usage example:
New annotation was aaded (like @AsParameters) called @AsJson.

JBehave story:

{noformat}
Then actual data should be as dataFolder/dataFile.json data
or
Then actual data should be as {""variable1"": ""value1"", ""variable2"": ""value2""} data
...
{noformat}
 
Java definition:
 
{noformat}
@Then(""actual data should be as $expectedJson data"")

public void checkJsonData(final JsonDTO expectedJson) {

    //assert expectedJson equals to actual json of JsonDTO.class type...

}
...
{noformat}
 
Java DTO:
 {noformat}
@AsJson

public class JsonDTO {

    private String variable1;

    private String variable2;

}
...
{noformat}","feature containing"
"Additonal Saucelabs logging: ""failed here"" and ""after scenario"" When a scenario has finished, and JBehave is busy with @AfterScenario stuff, then a stamp should be put in the Saucelabs log. Similarly for the moment of Scenario failure. 

This will aid debugging of scripts.","feature containing"
"Adopt builder syntax for Story/StepsConfiguration As proposed by Paul, a builder-style syntax for configuration objects make for much easier reading.","feature containing"
"After updating jbehave to 3.6.x failing test is shown as passing How to reproduce. 

1.Please open below maven project 
2.Run clean install --> everything passes 
3.Change jbehave spring version to 3.5.4 
5.Run clean install --> test fails 

In point 2, new version of jbehave is showing that failing test is passing. Even when there is explicit fail: 
Then c D and <D> (FAILED) 
(java.lang.AssertionError: 
Expected: is ""C"" 
got: ""D"" 
) 


Another thing is issue with whitespaces. When you remove MyStepMatcherThatIgnoresWhitespaces from configuration then story will fail as well. 

First issue is critical for us if we want to be up to date with jbehave. Second is also important to remove amount of our code. 

Thx","non-feature containing"
"AfterStories.xml and BeforeStories.xml being corrupt or zero length will break the Hudson plugin AfterStories.xml can be zero bytes on occasion. 
BeforeStories.xml can have invalid XML on occasion.","non-feature containing"
"Aliases for steps We would like to be able to introduce aliases for steps, eg:

@Given(""a $width x $height grid"")
@Aliases(""a grid of $width by $height"", ""a $width by $height grid"")
...","feature containing"
"Allow @Before/After steps in GivenStories scenarios to not be executed As a developer I would like support for parameterised Before/AfterScenarios to indicate their usage with GivenStories. So that when I am using GivenStories I can prevent Before/AfterScenarios executing twice.","feature containing"
"Allow Before and After Scenario steps to be skipped if running a GivenStory Behaviour now controlled by StoryControls().doSkipBeforeAndAfterScenarioStepsIfGivenStory(boolean)","feature containing"
"Allow CandidateSteps methods to be defined in POJOs The composition model (""has-a"") is often preferable to the inheritance model (""is-a"").

CandidateSteps methods should be definable in POJOs that do not necessarily extend Steps. Rather, Steps should be able to wrap a steps instance POJO and retrieve the annotated steps methods from it. 

Both composition and inheritance models should be supported.","feature containing"
"Allow Custom implementations of MetaMatcher  I would like to be able to setup custom MetaMatcher implementations so that I can override DefaultMetaMatcher or GroovyMetaMatcher.","feature containing"
"Allow ExamplesTable to be loaded from external resources At times it may be convenient to load the content of an examples table from an external resource, be it from classpath or URL. The default resource loader will be the URL-based one as it does not require any additional configuration, unlike the classpath-based one that requires the class from which to derive the classloader. 

The ExamplesTableConverter should be able to handle both cases (textual table input or resource path input) via the use of an ExamplesTableFactory. 

The RegexStoryParser should also allow the use of the ExamplesTableFactory.","feature containing"
"Allow FlashDriver javascript-enabled delegate to be injected The delegate used by the FlashDriver should be injectable via the FlashWebDriverProvider.","feature containing"
"Allow Freemarker TemplateProcessor to specifiy class for template loading In order to load a custom template from a different module, we need to be able to specify in the Freemarker configuration a different class for template loading.","feature containing"
"Allow FreemarkerViewGenerator to specify the class for template loading Required to load custom FTL templates.","feature containing"
"Allow GivenStories to be parametrised by examples in a scenario context h3. Introduction 

JBehave supports parameterizing scenarios to allow repeating tests. _e.g. As shown in the documentation:-_ 

{noformat} 
Given a stock of <symbol> and a <threshold> 
When the stock is traded at <price> 
Then the alert status should be <status> 

Examples: 
|symbol|threshold|price|status| 
|STK1|10.0|5.0|OFF| 
|STK1|10.0|11.0|ON 
{noformat} 

It would be desirable if this convention could be extended to be used in combination with a *Given Story*. 
To demonstrate by means of an extension to the documentation example:- 
Suppose there is a requirement to select a specific ""Stock Exchange"" before executing each of the tests above. 
Rather than building this into the story, we might opt, for reuse purposes, to use a *Given Story* to first select the ""Stock Exchange"". 

Now the first example would be _'Nasdaq'_ and the second _'FTSE'._ 

The hypothetical configuration might then be:- 

{noformat} 
GivenStories: acme/givenstories/SelectAStockExchange.story 
Given a stock of <symbol> and a <threshold> 
When the stock is traded at <price> 
Then the alert status should be <status> 

Examples: 
|stockExchange|symbol|threshold|price|status| 
|NASDAQ|STK1|10.0|5.0|OFF| 
|FTSE|STK1|10.0|11.0|ON 
{noformat} 

h3. Current Behaviour 
Unfortunately the example above will not work as desired 
The 'GivenStory', _SelectAStockExchange.story_, does +not+ inherit the parameterized variables as night be expected. 
Nor does the obvious supporting feature, anchor tags, help because only a specific row number can be specified in the anchor tag. 
e.g. 
{noformat} 
GivenStories: acme/givenstories/SelectAStockExchange.story{0} 
{noformat} 

h3. Suggested Behaviour 
The Given Story should be considered part of the be parametrised scenario context and inherit the parameters of the row currently being executed. 

Referencing previous response from Mauro on the dev mail thread 

_""As I understand it, you'd like the GivenStories to be considered as part of the parametrised scenario context and be passed the row of parameters that is being processed as part of a parametrised scenario. I guess, we could make that the default behaviour, and any parameters passed to the given stories could be overridden by the execution of the given story""_","feature containing"
"Allow GivenStories to be specified at story level GivenStories at story level should be executed regardless of the content of any particular scenario, but require at least one scenario to be present, identified by its keyword.","feature containing"
"Allow Hyphen character in Meta filters When using JBehave with Gherkin syntax, it is very useful to be able to use Meta Filters that contains a Hyphen (-) character.

For instance the following JBehave to Gherkin converter changes JBehave's '@author somebody' Meta into '@author-somebody':

https://github.com/adaptive-logic/jbehave-to-gherkin

JBEHAVE-851 Feature Request is very similar, however it is not working now, although was implemented in 3.7.4 version.
","feature containing"
"Allow MetaMatcher to be injectable To support custom implementations and extensibility of the meta matching, the MetaMatcher should be injectable and default to the implementations provided in core if not injected.","feature containing"
"Allow ScenarioClassLoader to instantiate scenarios using default constructor Currently, all scenario classes need a constructor with a ClassLoader parameter, required by CLI runner with Maven and Ant. 

While using core only, it is typically not required. So ScenarioClassLoader.newScenario() should support a varargs of parameter types, which also allow for no parameter types to instantiate using the default constructor. It is then up to the caller to use the appropriate parameter types.","feature containing"
"Allow Step-level dependencies Currently JBehave does not support Step-Level Dependencies. It may be useful to enable this feature so that steps can be created referencing directly other steps. 

The functionality was suggested in the following thread on the user list. 
http://www.mail-archive.com/user@jbehave.codehaus.org/msg00494.html","feature containing"
"Allow Steps dependencies to be composable via Guice Add Guice support module, equivalent to Pico's (see JBEHAVE-133).","feature containing"
"Allow Steps dependencies to be composable via PicoContainer In acceptance/integration tests is often common to have a lightweight container (Pico, Spring, Guice, etc ...) to configure the tests with. 

A container-supported Steps instance should be composable (either via constructor or setter dependency injection) with components configured in the container. 

Each container support will be contained in a separate optional module.

We start with Pico support, with other containers to follow.","feature containing"
"Allow Steps dependencies to be composable via Spring Add Spring support module, equivalent to Pico's (see JBEHAVE-133).","feature containing"
"Allow StoryManager to calculate story durations The story durations as calculated in the PostStoryStatisticsCollector are not reliable in multi-threading executions. 

The StoryManager should be responsible for their calculation. 

The duration (and hence the timeout) should be calculated from the start of the callable task and not the submission.","feature containing"
"Allow StoryManager to submit a single textual story not retrievable by path When running in some embedded contexts, e.g. web contexts, stories may be specified via textareas and not retrievable via path. 

Allow the StoryManager to run a single story as text, identified by a story ID, which will play the same role as the path.","feature containing"
"Allow Wrapping of Selenium2 CommandExecutor for Instrumentation purposes implement the following 

HttpCommandExecutor wrapCommandExecutor(HttpCommandExecutor httpCommandExecutor); 

in the saucelabs provider","feature containing"
"Allow a step to be reused between scenarios with and without example tables I would like to reuse Step classes and its methods in both scenarios that don't use example tables and also in scenarios that I want to use it.

For example:
{code}
This scenario we don't use example table, and its very flexible and reusable:

Given that user is editing Suppliers
When user input 12 for rankNumber
And input 3300,00 for maxValue
Then system sends a email to the managers with title 'Supplier rank was changed'. 
{code}

For this work today I just need to create a step method like this:
{code}
@When(""user inputs $value for $field"")
@Alias(""inputs $value for $field"")
public void whenUserInputsValue(@Named(""field"") String pField,
@Named(""value"") String pValue)
{
}
{code}

That step method is very reusable indeed a lot of scenarios could use it.

But if I want to use the benefit of an Example table in this scenario (maybe I found out others businesse rules that could be treat here too), I don't have this flexibility anymore, because Example table needs the steps sentence be fixed and table column matching @Named parameters. 
So I will need to construct other method for the same purpose.




Today example tables need that the column tables match the parameter names","feature containing"
"Allow all OutcomesTable value formats to be configurable Currently, only date formats are configurable. 

Allow configurable formats for all value types:

- dates
- numbers 
- booleans

","feature containing"
"Allow annotation-based configuration Annotations-based configuration can be preferable to some users. 

Investigate and implement annotation-based alternatives to programmatic configuration, which should always be possible.","feature containing"
"Allow both relative and full path views for file contents Useful when the relative path view may fail for some reason.","feature containing"
"Allow browsing content of uploaded archive At the moment, only the presence of the uploaded archive file is displayed in the data files view. 

It would be useful to browse the content of an uploaded archive. This would also allow user to verify if the unzipping/unarchiving has been successful.","feature containing"
"Allow class loader injection to be optional in scenario classes when running in command line Allow the injection of ClassLoader parameter to be optional when run via Ant or Maven. 

By default it is expected to be injected, as required by scenarios to load i18n keywords from resource bundles. But in many cases, the injected class loader may be not required.","feature containing"
"Allow comments between scenarios in JBehave story files. Hi, 

Our story file contains aprox. 30 scenarios, they are logically divided into groups. We would like to have possibility to split those groups in story files using comments. 
So after every 3-4 scenarios we would like to add comments indicating that new section has begun. I've played little bit with Jbehave RegexStoryParser and all that need to be done is 
change of ""public Story parseStory(String storyAsText, String storyPath)"" method.Please see attached code snippet from overridedn RegexStoryParser","feature containing"
"Allow comments in tables We'd like to be able to include comments in tables to make scenarios clearer, but JBehave refuses to read in the lines after the comment in this example, leading to zero rows being created in the resulting ExamplesTable. 

Given the documents: 
|a|b|c| 
|-- I'd like to have a comment here --| 
|1|2|3| 
|4|5|6| 
|1|2|3| 


I've tried a small test with 2.5.9 and 3.0 of JBehave but they don't fix the problem.","feature containing"
"Allow configuration of Freemarker TemplateLoader based on ClassLoader rather than Class The Freemarker TemplateLoader is based on the Class which does not always play well with all runtime envs, in particular Maven. 

It would be better to have the TemplateLoader based on the ClassLoader, which can default to the Class one.","feature containing"
"Allow configuration of report view encoding The JBehave HTML reports are created using encoding ""ISO-8859-1"". 

Normally there should be no problems with umlauts when using this encoding. But nevertheless my umlauts in the story name are not shown correctly when opening the JBehave reports.html file in a browser. This is why the link to the details of the result for that story is broken. 

If I change the browser encoding to ""UTF-8"", the umlaut is displayed correctly 

Why does this occur? Because my Eclipse project is set to UTF-8 to be used as default encoding and JBehave uses in its HTML generation template hardcoded ""ISO-8859-1"". 

JBehave produces this line in the HTML and the browser displays it initially in this encoding: 

<meta http-equiv=""Content-Type"" content=""text/html; charset=ISO-8859-1"" /> 

Some ideas to improve this: 

Instead of ""charset=ISO-8859-1"" it could be used ""charset=UTF-8"". 
Or it could be made configurable via the MostUsefulConfiguration.","feature containing"
"Allow configuration of storyTimeoutInSecs via @UsingEmbedder annotation Currently, story timeout is configurable via EmbedderControls. As per other EmbedderControls properties, the storyTimeoutInSecs should be configurable via @UsingEmbedder annotation.","feature containing"
"Allow configuration of view directory in Maven goal unpack-view-resources Currently, the view directory in which resources are unpacked is built from the Embedder's story reporter builder. 

In some cases, it may be useful to explicitly set the view directory in the Maven configuration. If not set, it will default to the Embedder's specification.","feature containing"
"Allow configuration to be overridden Currently to configure a scenario you need to implement an interface and it ties configuration to the scenario author. From what I can see the only way to externally override configuration would be to use AOP. This isn't a very standard way of doing configuration. It should use public getter and setter methods so the configuration can be overridden or extended to, for instance, add in a scenario reporter.

Ideally I should be able to write a Sonar plug-in for JBehave that can run existing scenarios and capture their output for presentation within Sonar. To make this work for everyone out of the box, I shouldn't need to resort to using AOP or to requiring special per-scenario configuration by people who want to get nice reporting in Sonar.","feature containing"
"Allow different StoryNameResolvers to be used in report generation The current StoryNameResolver trims everything before the last full stop, this isn't always required, as sometimes you have full stops in the file name. 

Allow a custom StoryNameResolver to be used instead of the built-in UnderscoredToCapitalized to fix this.","feature containing"
"Allow directives to support multiple step pattern variant To get more natural German story texts, it would be very helpful if the Steps.listCandidates() method could be amended. 
This would allow for automatically generating slight variations of the texts without having to specify them all as aliases. Currently I am doing this: 

@Then(""soll foo bar with $xyz"") 
@Aliases(values = { 
""foo bar with $xyz"", 
""soll foo bar: $xyz"", 
""foo bar: $xyz"" }) 

The word ""soll"" is made optional this way. The reasoning behind this is that when using ""And"" it is more natural to write 

Then soll something else 
And foo bar with $xyz 

instead of 

Then soll something else 
And soll foo bar with $xyz 


It would be very nice to not have define aliases for all these variants, because it makes the code harder to maintain. Instead, I though I'd add this dynamically, the same way annotated Aliases are, but it seems this functionality would require providing a new subclass of org.jbehave.core.steps.Steps which I cannot see how to do. 

I suggest a change like this: 

1) In org.jbehave.core.steps.Steps add another call in listCandidates() after each of the addCandidatesFromAliases(...) like addCustomDerivedCandidates(...) with the same signature and a protected empty default implementation. 
2) Allow configuration to specify a custom subclass of org.jbehave.core.steps.Steps. In there custom additions to the candidates list could be made, like the one I described.","feature containing"
"Allow embedder to generate stories view after running them Moving stories view generation concern to the embedder would allow the view to be generated after the stories are run (each with their single story report generation). We can then avoid the two-phase process currently in 2.x and have it all performed in a single execution via Maven or Ant. The embedder is also aware of the configuration used to generate the reports, so we can reduce need/risk of configuration mismatch. 

The view generation should be on by default, but with ability to disable via a runtime flag.","feature containing"
"Allow entire story to be restarted For selenium tests that keep the same browser / context throughout the story, there are countless things that can go wrong such as network latency, slow application, etc. Since a false positive can cause people to quickly lose trust in the tests, others advised that the story should restart ""x"" amount of times before failing the test. 

There is a way to restart a single scenario, but it is possible it could cause additional errors such as expecting to be on a specific page when the scenario starts, context variables have been changed, being in an unknown state with data.","feature containing"
"Allow export via REST of filesystem resources found in source path The resources to export via REST should be found via a filesystem scan, providing an includes pattern.","feature containing"
"Allow filtering of stories and scenarios based on meta-info Once we have meta-info available in our stories and scenarios (JBEHAVE-220) we can use this info to filter what is being run.","feature containing"
"Allow filtering on meta by row in parametrised example scenarios  Currently it is not possible to filter on single parametrised example scenarios, but only on the entire example scenario.   Moreover, when using Gherkin grammar, if Meta is used at scenario level, as specified by http://jbehave.org/reference/stable/meta-filtering.html , then whole scenario would be executed, since Gherkin Meta does not have a value.

Project https://github.com/rjimgal/jbehave-example-meta has been created with more details.

","feature containing"
"Allow filtering on story and scenario elements Now that we have story and scenario elements exposed as meta (JBEHAVE-648) we can filter on them. E.g. using filter: 

{code} 
groovy: path ==~ /.*a_long.story/ 
{code}","feature containing"
"Allow for comments and newlines in story text files Se below for a working example of sablecc grammar that allows comments starting with '#'. Please make a more robust grammar if you implement this improvement.

...
Helpers
letter = [['a'..'z'] + ['A'..'Z']];
digit = ['0'..'9'];
space = ' ';
tab = 9;
cr = 13;
lf = 10;
endl = cr | lf | cr lf;
commentchar = '#';
specialchar = '/' | '?' | '-' | '.' | '*' | '(' | ')';
norwegianchar = '_'|'_'|'_'|'_'|'_'|'_';
commentchars = space | tab | letter | digit | specialchar | norwegianchar;

Tokens
title_keyword = 'Title:';
scenario_keyword = 'Scenario:';
as_a = 'As a';
i_want = 'I want';
so_that = 'So that';
given = 'Given';
when = 'When';
then = 'Then';
space = space;
word = letter+;
endl = endl;
commentline = commentchar commentchars* endl;

Ignored Tokens
commentline;

Productions

story =
title
role?
feature?
benefit?
scenario*;
...","feature containing"
"Allow for multiple aliases for a given step I've got a machine which outputs messages. I've found three different ways of expressing that in steps:

Then the machine should tell me that $message
Then the machine should tell me to $message
Then the machine should say ""$message""

I'd like to be able to put more than one alias on a step.

(@Aliases ?)","feature containing"
"Allow goals to be run at test scope By default goals are run at compile scope - ie assuming they are executed in a separate module as integration tests.

Some users may find it useful to run them at test scope, so the scope should be configurable and according to it the appropriate classpath set.","feature containing"
"Allow grouping of stories and scenarios Introduce the concept of group of stories or scenarios, which can be dynamically maintained based on some criteria. 

A group should be identified by a new keyword but could reference stories and scenarios anywhere in the run context, i.e. not necessarily in the same textual input. 

A group should use story and scenario meta data, using pre-defined tags or user-defined ones, to determine its content. 

A group should be used as an execution context to allow repetition of stories or scenarios with some overall directives and fail/success criteria.","feature containing"
"Allow having stories in classpath with encoding different than UTF-8 Projects may have different encodings (sources and resources), and change them to UTF-8 may not be an option. This change allows clients of 
{code:java}
LoadFromClasspath 
{code}
to define their stories encoding (without having to subclass), while maintaining UTF-8 as default.","feature containing"
"Allow import to filesystem from Confluence We keep our story descriptions in Confluence and it would be nice to be able to import them to filesystem similarly to what is done for Redmine and XWiki. 

There's currently a basic REST interface for newer Confluence versions which can be used to access content. Also the rich text editor adds quite some noise to the page content, which we have to deal with. We propose following conventions for an import: 

- Import starts at a given root page and looks into all the child pages traversable from there. The root page is entered as the browser navigates to it (/display/space/pagename) 
- JBehave Story relevant parts are kept in containers. For a start we can use panel and info. 
- A table in the page is considered as example table. 

Attached are some samples how this looks in Confluence. 

Pull request will follow.","feature containing"
"Allow lazy parameter convertion Right now the converters are called before running the scenario, which prevents using stateful converters. 

The parametrised step with the parameter conversion should be created lazily upon invocation of the Step#perform() method.","feature containing"
"Allow leading and trailing spaces to be preserved in example table cells In JBehave Core 3.0.3 all leading and trailing spaces are removed from example table cells. 

For example, when accessed through the ExamplesTable API (the following table 

{code} 
| |A | B | C| 
| |X | Y | Z| 
{code} 

becomes 

{code} 
||A|B|C| 
||X|Y|Z| 
{code} 

Leading/trailing spaces were not removed for JBehave Core versions older than 3.0.3. So, it might be a regression cause when this http://jira.codehaus.org/browse/JBEHAVE-353 was fixed. 

At least for me it would be nice to be able to use example tables containing cells with leading/trailing spaces.","feature containing"
"Allow localised keywords to default to English locale if not found Currently, a LocalizedKeywordNotFound exception is thrown when a keyword is not found in the i18n bundle for the chosen locale. 

We should allow the lookup to default to the English locale if not found.   This would facilitate the updates of the bundles in non-English locales.","feature containing"
"Allow mapping of ExamplesTable rows to annotated custom types The idea is to map the ExamplesTable rows to match a business object. 

So, instead of having a method like this: 

@Given(""some $table"") 
public void givenAnExamplesTable(ExamplesTable table){ ... } 

We'd have something like this: 

@Given(""some $table"") 
public void givenACustomBusinessObject(MyCustomObject myObject){ ... } 

Or a List of business objects: 
@Given(""some $table"") 
public void givenACustomBusinessObject(List<MyCustomObject> myObjectList){ ... } 

This can be done in two ways: 

* Annotation-based mapping: 

@AsParameters 
public class MyCustomObject{ 
@Parameter(name=""column1"") 
private String col1; 

@Parameter(name=""column2"") 
private Boolean col2; 
} 

* Named-based mapping, using the name of the field as the parameter name.","feature containing"
"Allow matching of lifecycle after steps by meta filter Add new lifecycle element to specify the meta filter to match the after steps by outcome.

The matching should be made against the meta specified at scenario level.

","feature containing"
"Allow meta filtering on example scenarios As suggested by Pascal Rapicault on user list, allow filtering of examples scenarios by adding a column for the meta info: 

{code} 
Meta: @run 

Given I do use <Parameter> 

Examples: 
|Meta:|Parameter| 
|@run yes|value| 
|@run not|value| 
{code} 

For each example scenario, i.e. for each row of the Examples table, the meta specified will be matched against the meta filter provided and if allowed the scenario will be run. 

NOTE: the meta filter provider is unique for the run, so the meta info must be able to match both the scenario or story. In the example above, the Meta @run is specified to allow it be matched by any value of the meta filter that specifies a @run value. 

If specifying meta filter '+run yes' only the first example will be run, while specifying '+run not' only the second will be run.","feature containing"
"Allow meta filters to ignore stories listed in GivenStories Running tests with meta filtering exclude scenarios from GivenStories if they do not matches meta filters. 

It forces to put in dependent stories/scenarios the same meta words as in top level scenario. That causes double executions of those scenarios - first time because they are in GivenStories and second time because they march meta filter. 

Should be: 
GivenStories override meta filters 

Actual: 
Meta filters override GivenStories. 

How to reproduce: 
1. Create story file with some scenario without any meta words. 
2. Create another story file with some scenario. In GivenStories add dependency to story file from 1). Add some meta filter. 
3. Run test with meta filtering. 

Expected: 
Executed scenario from story file 1 and 2 
Actual: 
Executed scenario from story file 2 and skipped scenario from story file 2. 

In attachment I have putted example story files. Put them In jbehahve example eatsy-selenium/java-spring and run test with maven command: 
mvn3 clean install -Dmeta.filter=""+givenstories""","feature containing"
"Allow multiple behaviours to be run via JUnitAdapter Currently only a single behaviour can be run via adapter. 

A more realistic use-case is the running of a Behaviours instance, comprising of multiple behaviour classes.

JUnitAdapter should support:
- injection of Behaviours instance 
- loading of Behaviours classes in injectable ClassLoader:
- via behavioursClass property
- via behaviourClass property for a single behaviour
- properties should be configurable via system properties or via a jbehave.properties file in classloader.","feature containing"
"Allow multiple stories to be run Currently, only one story path can be specified.

Allow multiple story paths to be specified as relative to a story base dir - with includes/excludes patterns.","feature containing"
"Allow mutability of ExamplesTable When using ExamplesTable to collect tabular parameter data, it may be useful to allow additions of columns to the table for a given row, e.g. to express a result value for given row. The non-affected rows would then be given default blank values for the new column. 

Likewise, we could start from the content data (list of maps) and want to create a new table with modified content. 

In other words, ExamplesTable could be used for both the string->content and the content->string transformations when implementing a step with tabular parameters.","feature containing"
"Allow named parameters to be replaced in table row parameters values Named parameters, e.g. coming from the examples table in parametrised scenarios, should be optionally replaced in the row parameters values 

Given a parametrised table: 
|name|value| 
|name1|<scheme>| 

Examples: 
|<scheme>| 
|scheme1| 
|scheme2| 

Values can be retrieved from the parameters row, using the option to replace named parameters: 

{code} 
boolean replaceNamedParameters = true; 
String value = table.getRowAsParameters(0, replaceNamedParameters).valueAs(""value"", String.class); 
{code}","feature containing"
"Allow next Steps to be Ignored / Skipped Under certain circumstances, it is very useful to avoid of the execution of the steps following a given step, without failing the tests.

This is very similar to TestNG's SkipException concept.

Following the same approach than RestartingScenarioFailure and RestartingStoryFailure, when IgnoringStepsFailure is thrown, the step where it was thrown, and following ones, will be considered as Ignorable.","feature containing"
"Allow non-HTML file reports to be rendered undecorated with syntax highlighter When rendering non-HTML reports, allow option to leave content undecorated by syntax highlighter.","feature containing"
"Allow non-programmatic configuration of ExecutorService Currently the ExecutorService can be specified programmatically via the Embedder. 

To allow a non-programmatic configuration, we can introduce an interface 

{code} 
public interface ExecutorServiceFactory { 

ExecutorService create(EmbedderControls controls); 

} 
{code} 

and provide multiple implementations, e.g. FixedThreadExecutors and SameThreadExecutors. 

The implementation class must support a default constructor so it can be instantiated from its class name, configured via Maven or Ant. 

Each implementation may require different parameters from the EmbedderControls.","feature containing"
"Allow output patterns to be overridden and localised in PrintStreamScenarioReporter Cristiano Gavi_o requested on list:

It would be useful to have PrintStreamScenarioReporter to allow overriding of the event output patterns.

Also useful is the ability to allow full I18N of reporter messages (e.g. pending, not performed, failed).","feature containing"
"Allow parameter conversion in example table to support generic Type  Methods of the ParameterConverter interface can accept Type object not just Class, so I think the ExamplesTable doesn't need to restrict ability of the converters, it would be better if it is supported.

https://github.com/jbehave/jbehave-core/pull/103/","feature containing"
"Allow parameters to be specified as meta properties As suggested by Paul, parameters may be specified as Meta properties: 

{noformat} 
Meta: 

@theme parameters 

Scenario: 

Meta: 

@variant named 

Given I have specified the <theme> 
And a <variant> 
Then the theme is parameters with variant named 
{noformat} 

The named meta parameters would be matched by usual @Named mechanism, also used in story or scenario parametrisation. 

{code} 
@Given(""I have specified the <theme>"") 
public void givenIHaveSpecifiedTheTheme(@Named(""theme"") String theme){ 
this.theme = theme; 
} 
{code}","feature containing"
"Allow parametrisation of scenarios by delimited names I'm working on a simplification of the current parameterized scenario solution. With this I want to: 

* avoid the need of defining two different patterns for steps, one for normal scenarios, and another for parameterized scenarios. 
* be able to use column names in Examples tables that differ from the parameter names that were specified in the step annotation 
* avoid having to annotate fields with @Named in parameterized step methods 

Take the following steps and scenario, for example: 

{code:title=ParameterizedStory.java} 
public class ParameterizedStory extends JUnitStory { 

public static class ParamsSteps { 

private String user; 
private Set<String> products; // null means no cart... 

@BeforeScenario 
public void init() { 
user = null; 
products = null; 
} 

@Given(""$user is logged in"") 
public void loggedIn(String user) { 
this.user = user; 
} 

@Given(""$customer has a cart"") 
public void aCustomerHasACart(String customer) { 
assertThat(user, notNullValue()); 
assertThat(customer, equalTo(user)); 
if (products == null) products = new TreeSet<String>(); 
} 

@When(""a $product is added to the cart"") 
public void aProductIsAddedToCart(String product) { 
assertThat(products, notNullValue()); 
products.add(product); 
} 

@Then(""cart contains $product"") 
public void cartContains(String product) { 
assertThat(products, notNullValue()); 
assertTrue(products.contains(product)); 
} 
} 

public ParameterizedStory() { 
// Making sure this doesn't output to the build while it's running 
useConfiguration(new MostUsefulConfiguration() 
.useStoryReporterBuilder(new StoryReporterBuilder() 
.withFormats(Format.CONSOLE) 
.withFailureTrace(true) 
.withFailureTraceCompression(false)) 
.usePendingStepStrategy(new FailingUponPendingStep()) 
.useFailureStrategy(new RethrowingFailure())); 
} 

@Override 
public List<CandidateSteps> candidateSteps() { 
return new InstanceStepsFactory(configuration(), new ParamsSteps()).createCandidateSteps(); 
} 
} 
{code} 

{code:title=parameterized_story.story} 
Scenario: Use flexible parameters with examples table 

Given <client> is logged in 
And <client> has a cart 
When a <item> is added to the cart 
Then cart contains <item> 

Examples: 
|client|item| 
|Rui|chocolate| 
|Figueira|car| 
{code} 

The ""Given $user is logged in"" step pattern will match ""Given <client> is logged in"", and user parameter will be set to client column values. 
The main idea is that <client>, instead of represent a named parameter, represents a placeholder, and that placeholder should be replaced with whether value exists for it in the examples table. Then, after replacing the placeholder with the corresponding value, it will then match with the given step pattern, and $user will be set to the correct value. 

I have a working version available at https://github.com/ruifigueira/jbehave-core/commit/a4107a3ac899c4b952746781f785cba9a97c659c, that can be used to test the scenario above.","feature containing"
"Allow per-story and per-scenario meta-information From a development management perspective, BDD could be extremely useful in helping to track and understand who is creating specifications and when they are being injected. 

Since requirements like this will vary between users, it would be a good idea to implement as generically as possible and then provide an example or reference. 

My thoughts on what would be useful in my own situation: 

- A way to indicate the Author(s) of a scenario 
- A way to indicate the Owner of a story 
- A way to indicate the Creation Date of a scenario 
- A way to indicate the Last Update Date of a scenario 
- The injection phase of the scenario (eg. grooming, planning, development...) 

I don't think these should be included in the grammar as individual, specific elements, but perhaps the grammar could have a syntax for optional meta-information. The grammar would allow a word (eg. Meta:) followed by a category, perhaps emphasized with a symbol (eg. @Author) and then followed by any arbitrary text. 

This would allow interesting things... 

Meta: 
@Author John 
@Role Product Owner 
@Created 2009-11-08 
@Injection Backlog Grooming 

-OR- 

Meta: 
@Author Fred 
@Role Quality Engineer 
@Created 2009-12-02 
@Injection Sprint Planning 

-OR- 

Meta: 
@Author Colin 
@Role Developer 
@Created 2009-12-10 
@Injection Development 


Being able to say that, for instance, only 20% of scenarios are created in backlog grooming, while another 20% are created in sprint planning and 60% are created during development would be very useful in identifying and resolving process impediments and training product owners and teams to define requirements earlier so they don't run into velocity impacts when they are discovered late in a sprint. 

Allowing meta-data would enable scenario management tool development.","feature containing"
"Allow pluggable Embedder failure handling strategies The Embedder currently throws a RunningStoriesFailed exception when stories fail. 

As requested by Steve Cresswell, It'd be useful to introduce an EmbedderFailureStrategy interface with default implementation which throws a RunningStoriesFailed exception, but which can be overridden by users to provide alternative pluggable behaviour of failure handling.","feature containing"
"Allow pluggable strategy to resolve file paths from story location FilePrintStreamFactory should allow a pluggable strategy to resolve file paths for directory and name of files for each story location.","feature containing"
"Allow processing of system properties before stories are run Some systems used to implement steps may use system properties to control or override their behaviour. E.g. WebDriver system properties to override the default location of the browsers. 

While system properties may be set at command-line via -D parameters, it is useful to be able to set them via the Embedder and set them before the stories are run. 

The system properties should also be configurable via Ant or Maven.","feature containing"
"Allow puncuation characters in default meta filters When running tests using the following command -Djbehave.meta.filter=""+tag release:0_3"" 

All tests with this tag are skipped by the filter. 

But when we remove the colon all tests are found and run successfully. 

It is not only colons I have also tried $ and & with the same results.","feature containing"
"Allow reports to be generated in fail-fast mode Even when in fail-fast, i.e. not ignoring failures in stories, reports should be generated for the stories executed up to that point.","feature containing"
"Allow retrieval of stories via REST API Add jbehave-rest module to allow retrieval of stories resources via REST APIs.","feature containing"
"Allow running of multiple textual stories using a single Java entry point In order to avoid the need to define a Java class for each textual story 
As a story runner 
I want to be able to run multiple textual stories from the same Java entry point, provided all stories use the same StoryConfiguration and the same CandidateSteps.","feature containing"
"Allow scenarios following a failed scenarios to be skipped in a single story Allow option to skip scenarios following a failed scenario in a single story.","feature containing"
"Allow scenarios to run in batch mode Currently, scenario fail in fail-fast mode (unless the ignoreFailure flag is enabled). 

A batch mode can often be useful to enable long scenario builds to run through and to be have a summary batch failure at the end of the execution. 

Batch mode becomes more useful (if coupled with ignoreFailure) when the user want to generate a full report of scenarios run, including any failures.","feature containing"
"Allow specification of Configuration implementation class via @Configure annotation Currently starts from MostUsefulConfiguration as implementation on which other annotated properties are applied. 

In some cases, e.g. SeleniumConfiguration, user needs to specify a different starting implementation e.g. SeleniumConfiguration. 

Also, the specification of the implementation would allow users to use a custom implementation.","feature containing"
"Allow specification of the locale in the textual story The locale of a given story could be specified directly in the text, allowing for dynamically localised story parsing.","feature containing"
"Allow stack traces of failures to be printed in verbose mode BatchFailures collects the throwables encountered in the story execution and is wrapped by the downstream RunningStoriesFailed exception. 

Add a verbose flag to allow the stack traces to be printed. Flag is off by default, but is controllable via the EmbedderControls and the @UsingEmbedder annotation.","feature containing"
"Allow step pattern parameter names to use a configurable character class Upgrading from 3.8 to 3.9 you may have found that the parameter names could not contain digits. 

This was due to a change JBEHAVE-957 which added support for unicode characters. 

Support for digits has now been restored and in addition the character class used to find parameter names has been made configurable, defaulting to {code:java}[\p{L}\p{N}]{code}. 

To restrict parameter names to letters only, use {code:java}[\p{L}]{code}.","feature containing"
"Allow stories that don't match filters not to be reported Currently, stories that are not matched by filters are reported but not run. 

Allow option to silently ignore them.","feature containing"
"Allow stories to fail when they time out Story execution should be allowed to be shown as failure when it times out. 

Add a configurable flag in the EmbedderControls, next to the timeoutInSecs.","feature containing"
"Allow story controls to be configurable via annotations The StoryControls configuration element should be configurable via annotations, @Configure or @UsingGuice|Pico|Spring.","feature containing"
"Allow system properties to be specified for AnnotatedEmbedderRunner The AnnotatedEmbedderRunner is missing the specification of system properties via the @UsingEmbedder.","feature containing"
"Allow system property to ignore failures in Maven Please add the ability to specify a system property for the Mojo to ignore failures. 

In our environment we have a QA department who require the final artifact (installer) even though jbehave and junit tests fail. If our continuous build environment doesn't complete the build because of a test failure, then these people cannot test the product. 

Why not just change the pom.xml? Because our development department depends on it failing. 
Why not just create a profile? We have many projects and the administration in getting profiles created is much more effort than just using a system property. 

Normally I would just send a patch, but corporate life eats my time like the cookie monster.","feature containing"
"Allow textual stories to be transformed before parsing Textual story transformation may be useful to support different syntaxes or clean-up of textual input.","feature containing"
"Allow timeout to be disabled by a zero value There are circumstances when stories should run without timeout. 

A zero value for timeout should be interpreted as a story never timing out.","feature containing"
"Allow to indicate which is the weight of each StepsCandidate class used by a Scenario class to resolve duplicated methods. With the addition of the GivenScenarios feature, almost often will be necessary to inform more than one StepsCandidate class for one Scenario class.

The problem is that those StepsCandidates could have same methods, or could be extending the same parent class and sharing same method. 

Jbehave will get the first occurrence of method that match textual sentence, which not necessarily will be the desired one.

So I would like that jbehave had some way to stablish a weight, or an order, or maybe indicate a default steps class (or anything like that) where I could indicate which is the best path it should be taken.","feature containing"
"Allow to report stepdocs as embeddables Currently, we can report stepdocs by specifying the complete Embedder instance, fully configured and with CandidateSteps. 

Another, even more common use case, is to want to report the stepdocs for the candidate steps that are defined for given Embeddable instances, such as JUnitStory or JUnitStories.","feature containing"
"Allow transformation of example tables By using ExampleTable, I would use this format 

| Header1 | value1 | 
| Header2 | value2 | 
| Header3 | value3 | 

Currently we can only use this way: 

| Header1 | Header2 | Header3 | 
| value1 | value2 | value3 | 


thks","feature containing"
"Allow viewing of unarchived file contents Currently, the archive content can be listed as file paths. In some case, it may be useful to view the actual contents of the unarchived files.","feature containing"
"Alternate behavior for failing assertions I've been thinking about how JBehave handles assertion failures. 

As it works today, JBehave behaves something like this when it encounters a failing assertion: 

{color:green}Given I have searched for a round-trip flight{color} 
{color:green}When I view my trip summary{color} 
{color:green}Then I should see the origin and destination of each flight segment{color} 
{color:red} And I should see the fare cost (FAILED){color} 
{color:gray} And I should see the taxes and fees (NOT RUN){color} 
{color:gray} And I should see the on-time rating of each flight segment (NOT RUN){color} 
Test Failed! 

I'd like to have the results look like this: 

{color:green}Given I have searched for a round-trip flight{color} 
{color:green}When I view my trip summary{color} 
{color:green}Then I should see the origin and destination of each flight segment{color} 
{color:red} And I should see the fare cost (FAILED){color} 
{color:green} And I should see the taxes and fees{color} 
{color:red} And I should see the on-time rating of each flight segment (FAILED){color} 
Test Failed! 

I'm finding that most assertions in a functional test need not halt test execution and it would be nice to have the test run ""until it can't."" If the fare cost doesn't get fixed for weeks, that won't hide the broken on-time ratings. 

For JBehave, I believe that the change would entail recording and swallowing assertion exceptions while failing on other sorts of exceptions. If selenium can't find the continue button, it will throw a NoSuchElementException and halt the test. 

If this does get implemented, I think that it would be useful to have some sort of before/after step hooks, so that we can take screenshots for each failing assertion. 

It would be nice to have something like: @AfterStep(FAILING)","feature containing"
"An example table creates a javaw task and doesn't purge it I am using an Example table in my Jbehave story, and I notice that after each run, a new Java process is created and has not been purged. In my Windows task manager, I can see a ""javaw"" task, with a memory of 1.4Mo. Because these tasks are not purged, the OS becomes rapidly very slow. I have to kill these tasks by hand.

The problem doesn't happear if I don't use example tables in my story.

I've created a very short story to reproduce this problem easily :

{{Scenario: Prerequisites
Given an empty <schema> database schema.

Examples:     
|schema  |
|CORE    |
}}

I am using the version 4.0-beta-11 of the jbehave core.","non-feature containing"
"An extension to allow JUnit to run JBehave tests Thanks to Joe Walnes, I now have some code that lets you Ctrl-F10 to run the current JBhevae specification using a single static method. I'm going to tweak this to (re)introduce a JUnitAdapter class - by extending this you'll be able to run your JBehave specs inside JUnit, hopefully letting us use the existing JUnit plugins.

Note that stuff like the Ctrl-F10 to run the current method in IDEA will require a proper plugin, but reusuing the JUnitAdapter code could still be made to use the existing JUnit plugin - our plugin would itercept the keystroke, grab the method, pass it to our JUnitAdapter and then run JUnit as normal.","feature containing"
"Annotated Embedder Runner class should be read from annotation when running in CLI As noted by Cristiano Gavi_o, the Ant and Maven configuration of the AnnotatedEmbedderRunner class is redundant as it can be read from the annotated value.","feature containing"
"AnnotatedPathRunner in Eclipse does not end execution under some conditions When running TraderAnnotatedPathRunner in Eclipse the execution seems not to finish (see attached image). You must click on the red square button to finishing it. 
If I set generateViewAfterStories to false, then the execution finish properly.","non-feature containing"
"Annotation for ParameterConverter Simplifying adding ParameterConverter to Steps. Here's an example :

{code}
public class DateTimeConverter implements ParameterConverter {
@Override
public boolean accept(Type type) {
return type.equals( DateTime.class );
}

@Override
public Object convertValue(String value, Type type) { 
return new DateTime( value );
}
}
{code}


{code}
@ParameterConverters(DateTimeConverter.class)
public class PersonSteps {
private Person person;
private DateTime currentDate;
// ... steps
}
{code}

The ParameterConverters annotation takes an array of TypeConverter :
{code}
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
public @interface ParameterConverters {
Class<? extends ParameterConverter>[] value();
}
{code}

Here is a steps factory :
{code}
public class ParameterConverterStepsFactory {

public CandidateSteps[] createCandidateSteps(Object... stepsInstances) throws InstantiationException, IllegalAccessException {
CandidateSteps[] candidateSteps = new CandidateSteps[stepsInstances.length];
for (int i = 0; i < stepsInstances.length; i++) {
Object stepsInstance = stepsInstances[i];
StepsConfiguration configuration;

ParameterConverters parameterConverters = 
stepsInstance.getClass().getAnnotation( ParameterConverters.class );

if( parameterConverters != null ) {
configuration = createConfiguration( parameterConverters );
} else { 
configuration = new StepsConfiguration();
}

candidateSteps[i] = new Steps(configuration, stepsInstance);
}
return candidateSteps;
}

private StepsConfiguration createConfiguration(
ParameterConverters annotation) throws InstantiationException, IllegalAccessException {
ParameterConverter[] converters = new ParameterConverter[ annotation.value().length ];
for( int i = 0; i < converters.length; i ++ ) {
converters[ i ] = annotation.value()[ i ].newInstance();
}
org.jbehave.scenario.steps.ParameterConverters converterAggregate = 
new org.jbehave.scenario.steps.ParameterConverters( converters );
return new StepsConfiguration( converterAggregate );
}
}
{code}","feature containing"
"Annotations should be @Documented It'd be nice to build a catalogue of available steps for people (testers, really), who write scenarios. The first approach was to just generate JavaDocs, but the annotatios like [@Given|https://github.com/jbehave/jbehave-core/blob/master/jbehave-core/src/main/java/org/jbehave/core/annotations/Given.java] are not [@Documented|http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/annotation/Documented.html]. I assume this was just an omission.","feature containing"
"Ant copy-dependencies (binary distribution) doesn't find all required artifacts when the local maven cache is empty Starting with a local .m2 repository the doesn't have the files cached, ant copy-dependencies doesn't find all necessary artifacts. 

(log shortened) 
BUILD FAILED 
/home/lehmann/jbehave/jbehave-3.5.4/lib/build.xml:7: Unable to resolve artifact: Missing: 
---------- 
1) com.google.gdata:gdata-java-client:jar:1.40.0.atlassian-2 

2) org.jboss.weld.se:weld-se:jar:1.1.1.Final 

it seems that the settings.xml file is not used at all (e.g. it never looks at the glassfish repository). 

However if you run mvn test -s settings.xml, the depencies are found and later the ant task completes successfully as well (once the files are cached)","non-feature containing"
"Ant copy-dependencies task (for the bin distribution) doesn't work in Windows I tried to run the copy-dependencies tasks in ant running in Windows. This fails since the setup task always tries to delete and copy the jar file which isn't possible since Windows doesn't delete files that are currently open. (I assume it will not work either when the lib directory for ant is not writable in Linux) 

Copying the file to the lib directory doesn't work the first time anyway since the path is searched before ant is started, so the first time and has to be run twice. 

It is better to keep the jar file in the current directory and reference the file with a taskdef definition, this should work in all cases. 

I have attached a changed build.xml with the task defintion.","non-feature containing"
"Ant task RunStoriesWithAnnotatedEmbedderRunner not passing system properties to embedder I'm trying to run JBehave from Ant using the following ant code: 

{code:xml} 
<taskdef name=""runStoriesWithAnnotatedEmbedderRunner"" 
classname=""org.jbehave.ant.RunStoriesWithAnnotatedEmbedderRunner"" 
classpathref=""integration.tests.classpath"" /> 

<runStoriesWithAnnotatedEmbedderRunner includes=""**/*StoryEmbedder.java"" 
sourceDirectory=""src/integration"" 
systemProperties=""java.awt.headless=true,web.project.dir=${build.integration.web.dir}"" 
ignoreFailureInStories=""true"" 
ignoreFailureInView=""false"" 
generateViewAfterStories=""true"" /> 
{code} 

At the momment I'm getting a class not found which the story embedder I've written starts up (doesn't happen from a junit run inside eclipse!). 

I think that it's running from the default directory because it appears that the systemProperties are not making it through to the embedder. Here's the log showing the startup: 

{code} 
run-bdd-tests: 
[runStoriesWithAnnotatedEmbedderRunner] Running stories with annotated embedder org.jbehave.core.junit.AnnotatedEmbedderRunner 
[runStoriesWithAnnotatedEmbedderRunner] Found class names : [au.com.sensis.wireless.smsmanager.integration.bdd.stories.AnnotatedStoryEmbedder] 
[runStoriesWithAnnotatedEmbedderRunner] 2011-05-03 16:12:21,042 DEBUG [runStoriesWithAnnotatedEmbedderRunner] Processing system properties {} 
{code} 

As you can see it's reporting no properties passed. Digging into the Ant task code supports that the properties are not getting through, but from what I can see in the source there is no obvious reason. Possibly the code that loads the properties has a bug and is throwing an exception because it's try-catch silently swallows any errors.","non-feature containing"
"Ant task documentation is out of date. Ant task javadocs talk about ""specs"" instead of ""behaviour classes"". The given example doesn't work.","feature containing"
"Ant tasks running with incorrect classpath I've been trying to make this work for hours now. It appears that the Ant tasks run the Embedders with the classpath used to run Ant and that there is no way to override this. This means I cannot run JBehave against the classpaths used to build and test the application. 

How do we specify a classpath for JBEhave's Ant tasks????","non-feature containing"
"Archetypes featuring a StepMonitor with JFrameContextView What about adding the nice JFrameContextView in all of the archetypes? 

I've started with the archetype simple. If you like the idea, I can add it to all. 

https://github.com/alb-i986/jbehave-core/tree/archetypes-with-step-monitor","feature containing"
"Archetypes to boostrap creation of projects Archetypes are a useful way to help projects bootstrap their testing setup. 

Maven natively supports the concept of archetypes, which are templates used to generate new projects. 

The archetype resources are Velocity templates packaged as a jar. 

Maven provides a META-INF/maven/archetype-descriptor.xml, but other tools can still use the archetype resources.","feature containing"
"Asynchronous cache reload The eclipse plugin sets up a cache containing all step candidates. This cache is rebuilt whenever something changes within the project (which sometimes is happening at every key-stroke). Since querying the cache is bound to waiting for a reload to complete, this affects the GUI/user thread, ending up in a slow or even locked up Eclipse. 

Reported as per Github issues 
* #6 https://github.com/jbehave/jbehave-eclipse/issues/6 
* possibly also related to #1 https://github.com/jbehave/jbehave-eclipse/issues/1 

---- 
Github pull request: https://github.com/jbehave/jbehave-eclipse/pull/10 

This code detaches the query of the cache from its reload; Querying it is always done directly on the last known one, any change in the project requests an asynchronous reload, with only one active at a time. When a reload is finished, then the editors are triggered to query again.","feature containing"
"Auto-generate method stubs for pending steps with no parameters Auto-generate method stubs with no parameters. The steps such as 

Given there is a flight 
And there is a customer 
When the customer books the flight 
Then the customer is shown on the manifest 

would generate Java methods like this: 

@Given(""there is a flight"") 
@Pending 
public void givenThereIsAFlight() { 
} 

@Given(""there is a customer"") // note 'Given', even though story line is 'And' 
@Pending 
public void givenThereIsACustomer() { 
} 

@When(""the customer books the flight"") 
@Pending 
public void whenTheCustomerBooksTheFlight() { 
} 

@Then(""the customer is shown on the flight manifest"") 
@Pending 
public void thenTheCustomerIsShownOnTheFlightManifest() { 
} 

If @Pending annotated methods are already matched the methods should not be re-generated.","feature containing"
"Autocompletion using regex In JBehave story editor the auto completion filters step names according to text input. 

It would be easier to search for a step if the user can filter them in the way it works in the Java editor when you type CTRL + O. You can then filter the method names in a little text field by a regular expression. 

An alternative solution would be if the user can type a regular expression as the step name and autocompletion lists the step names matching to it. 

If you have lots of step names then this could make it much easier to find a step name in the editior.","feature containing"
"Bad encoding in JBehave Raports with default configuration from jbehave archetype in Windows I have created project from archetype with command: 
{{mvn archetype:generate -DarchetypeGroupId=org.jbehave -DarchetypeArtifactId=jbehave-spring-archetype}} 
and edited my.story file (added some international chars) 


After this 
There is: 
??A scenario with some pending steps &#313;_&#258;&#322;&#313;_&#313;&#317;&#313;_&#313;_&#258;&#322;a&#313;__&#313;_?? 
Should be: 
??Scenario: A scenario with some pending steps &#322;_&#347;&#380;&#322;&#347;_a&#347;&#281;&#322;?? <- here is proper encoded letters 

I have edited pom.xml and added: 
{{<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>}} 
{{<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>}} in properties section. 

The HTML and XML raport should be properly encoded after this. I think option -Dfile.encoding=UTF-8 should be not required for this. Maven project should have identical results on all platforms if properly configured.","non-feature containing"
"Before/After Story/Scenario methods could accept parameters that have meaning at that moment For example - 

bq. public void myBeforeStory(@Named(""someMetaTag"") String someMetaTag) { .. } 

This would be a poor-mans version of JBEHAVE-541","feature containing"
"Before/after scenario steps and lifecycle steps are executed in wrong order When story contains Lifecycle Before/After steps, these are executed outside the BeforeScenario/AfterScenario scope for scenarios parametrised by example. 

When the JBEHAVE-993 was implemented, runLifecycleSteps is called before runBeforeOrAfterScenarioSteps (and in the reverse order at the end). 

Attached is patch with fix and test (patch is based on commit 95dcd85)","non-feature containing"
"BeforeStories.xml can be zero length ( causing xUnit to fail a Jenkins job ) Never fear, the following can fix it so that the Jenkins job can complete: 

find $WORKSPACE/project/target/jbehave -maxdepth 1 -type f -size 0 -exec rm -f {} \;","non-feature containing"
"BeforeStory mechanism should be added to the story lifecycle. BeforeStory mechanism should be added to the story lifecycle.

Currently the lifecycle support only BeforeScenario capability (as shown in bellow). But it's require to have a capability like BeforeStory in the story level. 

Currently it's there only in Steps classes and if there are multiple steps classes having multiple BeforeStory annotation, all will execute which is not needed for a particular story

Priority has been increased since we are having a huge requirement to have BeforeStory capability in story level rather than steps level.

Actual
____________________________________________________
Lifecycle: 
Before:
Given a step that is executed before each scenario 
After:
Outcome: ANY    
Given a step that is executed after each scenario regardless of outcome
Outcome: SUCCESS  


Expected
________________________________________________________________

Lifecycle: 
*BeforeStory:
Given a step that is executed before the story*
Before:
Given a step that is executed before each scenario 
After:
Outcome: ANY    
Given a step that is executed after each scenario regardless of outcome
*AfterStory:
Given a step that is executed after the story regardless of outcome*
Outcome: SUCCESS  ","feature containing"
"Behaviour discovery and collecting There should be a way to automatically discover all the behaviours and run them as part of the core system to ease the IDE and ANT support","feature containing"
"BehaviourRunner constructs should use Writer instead of OutputStream As in JBEHAVE-101, deprecating constructors with OutputStream in favour of Writer, which is ultimately passed to the listener when running the behaviour verification.

Add default constructor which uses new PrintWriter(System.out) and context ClassLoader.","feature containing"
"Better integration into JUnit Problem statement: 
As has been stated in miscellaneous other Issues, it would be nice to have better integration into JUnit by JBehave. 

Recommended Code Change: 
Add two variables to the MostUsefulConfiguration, one to hold RunNotifier, and the other to hold the TestDescriptions. 
Increase the JUnit Description depth by parsing out the scenarios, and steps when creating the Story descriptions in AnnotatedPathRunner. 
Add a StoryReporter that reports to the RunNotifier using the provided StoryDescription.","feature containing"
"Better integration with JUnit (Separate results for each story/scenario/example) I would like each example in each scenario in each story to show up as distinct result in the JUnit test results within my IDE and the JUnit reports. This has the advantage that assertion failures are linked to example failures and can be clicked on in the IDE to jump to source code of the offending failure. Currently I get a single failure in my IDE and have to look through log files or look at the JBehave report. 

The current AnnotatedPathRunner implementation extends org.junit.runners.BlockJUnit4ClassRunner and therefore uses the methods with a @Test annotation to drive the JUnit results. In most jbehave tests, there is only one such method which means that there is only a single result in the JUnit reports (IDE and HTML). 

I have started to implement a new org.junit.runner.Runner implementation which extends org.junit.runners.ParentRunner and can use the stories as the basis for generating the JUnit test results rather than the Test case itself. 

I have attached a screenshot and source code for running a single test (jbehave.ListTest) in Eclipse. The test case runs a single story (list.story). You can see from the results that there is a hierarchy in the JUnit results for story, scenario and example.","feature containing"
"Better support for web scenarios As a web developer/QA, I want to be able to integrate web-testing frameworks, such as Selenium and WebDriver.

We should probably provide a WebScenario that developers can extend (or perhaps it should be a decorator of a given scenario) and make it easier to set up their web-based behaviours.","feature containing"
"Big Renaming of Spec to Behaviour Class and Criteria to Responsibility Normalize the vocabulary throughout JBehave, to refer to Behaviour Classes and Responsibilities rather than Specs and Criteria respectively.

This is to align with the vocabulary around BDD and make things less confusing for the user.","feature containing"
"BigDecimal parameter conversion fails for numbers with seven or more significant digits. This is because double.toString() makes makes a exponential type representation like ""1.23E11""","non-feature containing"
"Boolean outcome values are not handled properly in HTML output Boolean outcome values should be detected via is_boolean so that the Freemarker ?c built-in can be applied. ","non-feature containing"
"BooleanConverter and BooleanListConverter Need to provide a BooleanConverter and BooleanListConverter","feature containing"
"Broken Project - False Positive for Many Examples Hi JBehave team,

I'm currently worried that many of the examples might be broken, but still report as successful when executed from the command line using maven commands such as ""_mvn -Psonatype -s settings.xml clean install -Djbehave.version=4.0.5 -Pexamples_"".

I noticed the next line was commented a long time ago here: https://github.com/jbehave/jbehave-core/blob/master/examples/core/src/main/java/org/jbehave/examples/core/CoreStory.java#L98

{code:java}
//.usePendingStepStrategy(new FailingUponPendingStep())
{code}

So that allows many tests to pass even when some of their corresponding steps are not being matched at all (e.g. when some meta parameters are not being inherited, and then some of the parameters are parsed as plain strings). Maybe it would be more useful/safer if that line wasn't commented and each test that needs to have pending steps could override that behavior? In any case, the thing is that it seems many of examples provided on the repo just don't really work.

Also, something else I noticed (I mean, besides the instructions provided in the site/repo being kind of insufficient in order to be able to compile the project successfully without having some headaches) is that the tests configured for the project are kind of unreliable because they randomly fail when trying to build it (i.e. when running _mvn -s settings.xml clean install). So this makes it a bit difficult to contribute back to this great project.

PS: Currently I have the core examples in my repo set-up with Gradle: https://github.com/RodrigoQuesadaDev/jbehave-core-examples So you just need to run _./gradlew clean test_ in order to verify what I just stated (if you want to run it trough IntelliJ, though, you need to make sure the processResources task runs before the tests OR move the *.story files to the resources directory manually so that they are picked-up by the framework during execution).

Thanks,
Rodrigo","non-feature containing"
"Broken links in website http://jbehave.codehaus.org/development.html has a couple of broken links. These are to:
http://jbehave.codehaus.org/architecture.html, and

http://builds.codehaus.org/log/jbehave/","non-feature containing"
"Bug recognising Step with content starting with Given, When, Then, And When I have a scenario where one my steps contains words starting with Given, When, Then, And, the scenario parser just ignores them.
Eg: Then the page should display name Anderson (Anderson starts with And, so it doesn't recognise)

I've made a couple of changes on the PatternScenarioParser to fix it, and I am sending to you.

Cheers
Alexandre Martins.","non-feature containing"
"Build error with JDK 8 - Adopt OpenJDK feedback just run the build: 
mvn -s settings.xml clean install -Pexamples,gui 


Exception in thread ""main"" java.awt.AWTError: Unable to load AWT Toolkit: sun.awt.motif.MToolkit - sun.awt.motif.MToolkit 
at org.uispec4j.interception.toolkit.UISpecToolkit.buildUnderlyingToolkit(UISpecToolkit.java:131) 
at org.uispec4j.interception.toolkit.UISpecToolkit.setUp(UISpecToolkit.java:39) 
at org.uispec4j.interception.toolkit.UISpecToolkit.<init>(UISpecToolkit.java:24) 
at org.uispec4j.UISpec4J.initToolkit(UISpec4J.java:39) 
at org.uispec4j.UISpec4J.init(UISpec4J.java:31) 


https://groups.google.com/forum/#!msg/adopt-openjdk/TB0Xe6gyAJs/gS6OgZfmsFEJ","non-feature containing"
"Build isn't running the scenarios Ryan has sent me a patch for this.","non-feature containing"
"Build issue, cannot find org.jenkins-ci:annotation-indexer:jar:1.4 in http//repol.maven.org/maven2 When running JBehave I get this error when building. 

[ERROR] Failed to execute goal org.kohsuke:access-modifier-checker:1.4:enforce (default-enforce) on project jbehave-hudson-plugin: Execution default-enforce of goal org.kohsuke:access-modifier-checker:1.4:enforce failed: Plugin org.kohsuke:access-modifier-checker:1.4 or one of its dependencies could not be resolved: Failure to find org.jenkins-ci:annotation-indexer:jar:1.4 in http://repo1.maven.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -> [Help 1]","non-feature containing"
"Build should allow dependencies between extensions For instance, the StoryRunner requires the JMock extension, which is trivial to set up in Eclipse or IDEA.

We want to do this generically across all the extensions. Maybe something in the build.properties like:

extensions=jmock, junit","feature containing"
"Cache container for IoC/DI integration @UsingSpring (applies to Pico and Guice, I would assume) versus the use of Spring Test (@ContextConfiguration) does not cache the container and thus recreates it on every run. 
Use of @ContextConfiguration caches the container (with a key made up of the location String array). 
You can find this code in Spring Test in the TestContext class in the getApplicationContext method. 

http://grepcode.com/file/repo1.maven.org/maven2/org.springframework/spring-test/3.0.2.RELEASE/org/springframework/test/context/TestContext.java 

Enhancement would be to add a method to all the UsingXYZ annotations related to containers to cache the containers (always based on locations).","feature containing"
"Can we disassociate PendingStepStrategy and FailureStrategy please (and impls) There is no benefit from a usability POV for them being part of the same hierarchy. In fact its difficult to explain to newbies why that needs to be the case. In code there's only StoryRunner that holds on to three ThreadLocals: 

private ThreadLocal<FailureStrategy> currentStrategy = new ThreadLocal<FailureStrategy>(); 
private ThreadLocal<FailureStrategy> failureStrategy = new ThreadLocal<FailureStrategy>(); 
private ThreadLocal<PendingStepStrategy> pendingStepStrategy = new ThreadLocal<PendingStepStrategy>(); 

.. which is also hard to explain why.","feature containing"
"Can't run multiple stories with Maven plugin I'm using the 4.0.1 Maven plugin to run stories, and am noticing that I can't run more than one story without the build failing with a RejectedExecutionException.

When debugging in Eclipse with mvnDebug and attaching to the local debug port, I can attach a breakpoint in the shutdownNow() method for the executor service used by the StoryManager class. This method is called by the shutdownExecutorService method in Embedder, which in turn gets called when one of my story classes which extends JUnitStory completes.

However, the StoryManager does *not* get recreated at this point, meaning I'm left with a terminated thread pool - so when the *next* story comes up, it gets rejected since no threads are running or can be created in that pool. 

Downgrading to 3.9.5 fixes this issue for me.

I would consider this a blocking issue, as most people using JUnitStory likely have more than one of them, and this will cause builds to fail for no reason of the application developers.","non-feature containing"
"Can't run stories as embeddables I am attempting to run stories as embeddables. I have been able to successfully run them using the embedder, but have not figured out how to run them using embeddables. I have also posted more information about my problem here: 

http://stackoverflow.com/questions/17928594/jbehave-stories-will-not-run-as-embeddables 

Thank you.","non-feature containing"
"Can't run-stories-as-embeddables from test directory using Maven plugin When I tried to use it, the plugin couldn't find my .java file. 
I suspect that this is because the classloader obtained under Maven with a story that uses 
new LoadFromClasspath(this.getClass().getClassLoader()) 
as a StoryLoader doesn't include the test class directory - even though the running class is IN the test class directory. The same code works correctly under the Eclipse debugger (including the test class directory in the classpath). Everything else works correctly in Maven - unit tests, etc. 
The configuration: 

<configuration> 
<sourceDirectory>${project.build.sourceDirectory}</sourceDirectory> 
<testSourceDirectory>${project.build.testSourceDirectory}</testSourceDirectory> 
<includes> 
<include>**/ProcessorTestStory.java</include> 
</includes> 
<metaFilters> 
<metaFilter>+author *</metaFilter> 
<metaFilter>-skip</metaFilter> 
</metaFilters> 
<systemProperties> 
<property> 
<name>java.awt.headless</name> 
<value>true</value> 
</property> 
</systemProperties> 
<ignoreFailureInStories>true</ignoreFailureInStories> 
<ignoreFailureInView>false</ignoreFailureInView> 
</configuration> 
-Ed","non-feature containing"
"CancellationExceptions are not part of the story reports If a story execution exceeds its timeout, the Future representing it is cancelled by StoryManager.

In most cases this results in an unhandled InterruptedException that aborts the story execution, and in turn is included in the story report.

However, if the story execution handles the InterrupedException, e.g. by perfoming some wait in this manner:
try{
  Thread.sleep(100_000);
}
catch(InterruptedExecption e){
  //don't care
}
then the story might get executed to the end and the story report might conclude as successful.

On the other hand, test execution will fail because the Embedded will collect a CancellationException when invoking Future.get().

It would be nice if the story report always contained the information that the story was cancelled.

Sample project:
https://github.com/csabakoncz/serenity-projects/tree/master/serenity-timeouts

run tests with:
mvn clean verify -Djbehave.threads=1

The build fails, but neither JBehave nor Serenity reports contain any trace of the cancellation.

JBehave version: 4.0.5
","non-feature containing"
"Candidate step does not match AND steps The CandidateStep needs to handle AND steps as well as the its corresponding step type to match steps correctly.","non-feature containing"
"Candidate step should support generic parameter conversion It is quite common to have step parameters which are CSV of strings or numbers. 
The candidate step should support them as it does with strings and numbers.

More in general, it should generic and injectable parameter converters that allow users to convert objects from a string representations that make sense in the scenario domain.","feature containing"
"Candidate steps should be aware of the method annotation type when matching textual steps Candidate steps should be aware of annotations @Given, @When and @Then and distinguish pattern steps arising from different annotations.
At present, there is no such distinction and can lead to very confusing behaviour.
Example:
@Given(""foo named $name"")
public void givenFoo(String name) {...}
@When(""foo named $name is created"") 
public void createFoo{...}

If I have a scenario like this:
Scenario: Do stuff
Given xyz
When foo named Bar is created
...
then the ""When"" can match the givenFoo() method, which gets passed ""Bar is created"" as parameter. 

This unexpected behaviour, due to the implict uniqueness required of the matching pattern across all annotations, causes randomness in test execution. Sometimes it works, sometimes it doesn't. It would be better if the different annotations where treated differently in the matching of patterns, so that when I write Given/When/Then in the scenarios they will match corresponding @Given/@When/@Then methods.","feature containing"
"CandidateSteps instances should be created by StoryRunner context allowing for multi-threaded stateful steps logic In multi-threaded mode, the steps instances need to be instantiated per thread. 

A way to do this is to pass the InjectableStepsFactory to the StoryRunner run context and let the context instantiate the candidate steps per thread.","feature containing"
"Cannot find the persistence.xml file Running the sceanario from either eclipse or intellij, the Persistence.createEntityManagerFactory(""party-test""); finds the persistence.xml file just fine, and everything works. However running it via the maven plugin, and it can't find the file at all. I suspect this is a classpath issue, since the persistence.xml file is in a /META-INF directory and not in the normal classpath. I could be wrong though.","non-feature containing"
"Cannot use the same step multiple times in a scenario I have a story that looks like this: 

{code} 
Meta: 
@themes Book 

Scenario: 

As a member I can return all my borrowed books at once. 

Given an empty library 
And a user <user> has borrowed books <isbns> 
And a user <user2> has borrowed books <isbns2> 

When user <user> returns all his books 

Then books <isbns> are not borrowed anymore by user <user> 
And books <isbns2> are still borrowed by user <user2> 

Examples: 

| user | isbns | user2 | isbns2 | 
| user1@dings.com | 0321293533 | | | 
| user1@dings.com | 0321293533 | user2@dings.com | 1234567962 | 
| user1@dings.com | 0321293533 | user2@dings.com | 0321293533 | 
| user1@dings.com | 0321293533 1234567962 | | | 
| user1@dings.com | 0321293533 1234567962 | user2@dings.com | 1234567962 | 
| user1@dings.com | 0321293533 1234567962 | user2@dings.com | 0321293533 1234567962 | 
{code} 

As you can see, I would like to reuse a step two times, with different parameter sets (user/isbns and user2/isbns2). JBehave forces me to wrote two different step definitions (two annotated methods), because the @Named actually pulls the value straight out of the examples table, regardless, of what parameters match the step. 

So I am forced to do this. Very ugly, IMHO. 

{code} 
@Given(""a user <user> has borrowed books <isbns>"") 
public void createListOfBorrowedBooks(@Named(""user"") String user, @Named(""isbns"") String isbns) throws SQLException{ 
} 

@Given(""a user <user2> has borrowed books <isbns2>"") 
public void createListOfBorrowedBooks2(@Named(""user2"") String user, @Named(""isbns2"") String isbns) throws SQLException{ 
createListOfBorrowedBooks(user, isbns); 
} 
{code} 

I regarded the steps as something similar to a method or keyword, but now I realize that there are subtle differences. 

As weird as Robot Frameworks syntax and grammar might be sometimes, it is coping much better with these circumstances.","non-feature containing"
"Change language throughout for filter exclusion from 'notAllowed' to 'excluded' Should be ""Fix Version/s 4.x"" but that is not available yet.","feature containing"
"Change of ExamplesTableFactory constructor in patch release With JBEHAVE-718 the constructor 

public ExamplesTableFactory(Keywords keywords, ResourceLoader resourceLoader, 
ParameterConverters parameterConverters) 

was changed to 

public ExamplesTableFactory(Keywords keywords, ResourceLoader resourceLoader, 
ParameterConverters parameterConverters, TableTransformers tableTranformers) 

when the TableTransformers feature was introduced. 

This is a backwards incompatible change and should not have been included like that in a patch revision with only the last digit of the version number changed, as it breaks existing code (including mine :)) when going up to the latest 3.6 version. 

I suggest adding back the original constructor with a sensible default behavior. 

A pull request on GitHub will be sent: https://github.com/jbehave/jbehave-core/pull/31","non-feature containing"
"Change terminology of report rendering to view generation To avoid confusion, change terminology reporting rendering to stories view generation. 
The concept of a collective stories view of the report outputs seems to be less prone to misinterpretation.","feature containing"
"Changing the default of ""useDelimiterNamedParameters"" I discovered that there is a problem with parameter injection if it is not configured in a special way. 

See the example below. All values should be injected. But that does not work, only ""555"" is injected correctly. 

Parameters from an examples table are not injected in an expected way if MostUsefulConfiguration is not set like: .useParameterControls(new 
ParameterControls().useDelimiterNamedParameters(true)) 

The default is false for using delimeter named parameters. 

I suggest du use true as the default instead. 

See the discussion in the mailing list: http://www.mail-archive.com/user@jbehave.codehaus.org/msg02106.html 

Scenario: Example 
Given the account data from <creditAccount> is known and remembered 
And the account data from <debitAccount> is known and remembered 
And the account data from 555 is known and remembered 
And the account data from <account> is known and remembered 
Examples: 
|creditAccount|debitAccount|account| 
|123 |321 |999 |","feature containing"
"Changing the value separator in JBehave In my story file when i use default value separator |    its spliting data","non-feature containing"
"Changing the value separator of JBehave I faced a problem While using ExamplesTable of JBehave. The default value separator is |, but my example table has got a | character screenshot below.","non-feature containing"
"Check Status of a previous JBehave Scenario In JBehave, how can we check whether the previous scenario was success?","feature containing"
"Clarify the Scenario Reporters example and API The example for configuration of 'Scenario Reporters' on http://jbehave.org/reference/stable/reports.html is not clear. The code appear to be outdated and I am not able to use it. 

One other point: Is it really necessary use 9 different classes just to save my reports to a TXT file ? It's a common task and it will help a lot if it was more simple. 

(The classes on examples are: ScenarioNameResolver, UnderscoredCamelCaseResolver, PropertyBasedConfiguration, ScenarioDefiner, ClasspathScenarioDefiner, PatternScenarioParser, ScenarioReporter, ScenarioReporterBuilder, FilePrintStreamFactory) 

I really want to use JBehave, but the Factory/Definer/Builder hell is really boring.","feature containing"
"ClassLoader not injected by default when running stories via CLI In Ant and Maven plugin, set default value of classLoaderInjected=false by default.

The refactors in the story configuration have made class loader injection redundant for most use cases.","feature containing"
"ClassLoader-aware Spring ApplicationContext factory Spring's ClasspathXmlApplicationContext does not allow the specification of a ClassLoader.

To specify the ClassLoader, one can use a GenericApplicationContext with a ResourceLoader that is ClassLoader-aware.","feature containing"
"Classloader leak as remove is not called on ThreadLocals in StoryRunner h4. Overview: 
StoryRunner uses ThreadLocals however does not call remove() on them after use which leads to a classloader leak in our application which uses a long running thread to load and run stories.","non-feature containing"
"Close down stats file input stream after loading them As suggested in https://github.com/jbehave/jbehave-core/pull/22","feature containing"
"Code of StepsWizard does not compile, referenzing wrong WizardsMessages constants GenerateStepsWizard and SelectStepsToGenerateWizardPage both reference non-existing constants in WizardsMessages. 
They use fields like ""NewStoryWizard_0"" although the ones in WizardsMessages are properly named. 

Raised by Github issue #7: https://github.com/jbehave/jbehave-eclipse/issues/7 
Pull Request in issue #8: https://github.com/jbehave/jbehave-eclipse/pull/8","non-feature containing"
"Collect successful scenarios stat and render in story reports Currently, only the number of run scenarios and failed scenarios are collected. Collecting also the number of successful makes it easier to highlight in green just the number of successful ones. Now we are highlighting the total number of scenarios in green when there are failures, and this is confusing.","feature containing"
"Collision at ExamplesTable values and named parameters with the same name BDD scenario
{code}
Scenario: Collision at ExamplesTable values and named parameters with the same name
When I do something using 'X'
Then I  check something using '<param1>'
Examples:
|param1 |
|Y      |
{code}

Step implementation:

{code:java}
@When(""I do something using '$param1'"")
public void doSomething(@Named(""param1"") String param1)
{
    // Step implementation
}
{code}

Exception:
{code}
java.lang.ClassCastException: java.util.LinkedList cannot be cast to java.lang.String
	at com.....(...)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:728)
	at org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)
	at org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)
	at org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)
	at org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)
	at org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)
	at org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)
	at org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)
	at org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)
	at org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)
	at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)
	at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:1)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}

The issue happens due to the same naming {{@Named(""param1"")}} and {{|param1 |}}

This issue doesn't allow to use within one scenario steps with named parameters and ExamplesTable that have the same parameter names.","non-feature containing"
"Comma in the end of GivenStories declaration leads to empty GivenStory Users may mistakenly put comma {{,}} in the end of {{GivenStories}} declaration:
{code}
GivenStories: path/to/precondition1.story,
 
Scenario:  ...
{code}
This leads to creation of GivenStory with empty path that will cause issues at story executions.","non-feature containing"
"Compactify method and annotation information in BeforeOrAfterFailed message As Paul noted, the message in the BeforeOrAfterFailed message can be too verbose and confusing when reading logs. 

Should be shorted to include method short name, annotations short names and class, e.g.: 

Method aFailingBeforeScenarioMethod (annotated with @BeforeScenario in class org.jbehave.core.steps.SomeSteps) failed: java.lang.RuntimeException","feature containing"
"Composed steps don't behave like steps in a story when using parameters Problem Statement: 
When I use a composite step that calls another step which takes parameters, the correct step is rejected because it doesn't match the patternString. 

Steps to Recreate: 
1. Create a step and method that take a parameter, (ex. @When(""I click the $button button"")public void clickButton(String button){...} 
2. Create a Composite step that references step 1. (ex. @When(""I login"") 
@Composite(steps={""I click the login button""}) 

Actual Results: 
The second step will give you a pending method, that matches step 1. but they don't match because of the paramter. 

Suggested Change: 
Found this while debugging in the StepCandidate.class on line 179: 
if (StringUtils.startsWith(composedStep, candidate.getStartingWord()) 
&& StringUtils.endsWith(composedStep, candidate.getPatternAsString()) ) { 
return candidate; 
} 

Could be changed to: 

if (StringUtils.startsWith(composedStep, candidate.getStartingWord()) 
&& (StringUtils.endsWith(composedStep, candidate.getPatternAsString()) || candidate.matches(composedStep))) { 
return candidate; 
} 


JUnit Test: 


@Test 
public void shouldMatchCompositStepsWhenStepParamterIsProvided(){ 
CompositeStepParamterMatching steps = new CompositeStepParamterMatching(); 
List<StepCandidate> candidates = steps.listCandidates(); 
StepCandidate candidate = candidates.get(0); 
assertThat(candidate.isComposite(), is(true)); 
Map<String, String> noNamedParameters = new HashMap<String, String>(); 
List<Step> composedSteps = new ArrayList<Step>(); 
candidate.addComposedSteps(composedSteps, ""When I login"", noNamedParameters, candidates); 
assertThat(composedSteps.size(), equalTo(2)); 
for (Step step : composedSteps) { 
step.perform(null); 
} 
assertThat(steps.button, equalTo(""Login"")); 
} 

static class CompositeStepParamterMatching extends Steps { 
private String button; 


@When(""I login"") 
@Composite(steps={""I click the Login button""}) 
public void whenILogin(){} 

@When(""I click the <button> button"") 
public void whenIClickTheButton(@Named(""button"") String button){ 
this.button = button; 
} 

}","non-feature containing"
"Composite steps fail to execute We are set up using JBehave 3.9.5 and Selenium 2.49.1

We are experiencing an intermittent problem where the composite steps fail to run but the framework seems to think they have and tries to run the next step which fails.  

The composite steps that fail are our login steps so all tests using those fail in a batch (this never happens to just one test).  The failure happens about 10% of the time.  We have tried adding logging into the steps but this never outputs any logging indicating that the framework does not run those steps at all but thinks it has.

What other information would be useful for you?","non-feature containing"
"Composite steps in text format In order to be more effective in communication and in scenario development 
As a non-technical scenario writer 
I want to compose steps using existing steps in text format like my stories 

At the moment composite steps have to be implemented in Java code with an empty body. They could be defined and used in text format like stories (maybe with the extension .step?). This would be also an alternative for GivenStories.","feature containing"
"ConcurrentModificationException in CrossReference.outputFile() When Tests are executed massivley multithreaded, from time to time a ConcurrentModificationException is thrown when JBehave tries to write a report-file. 

Trace: 
{code} 
java.util.ConcurrentModificationException 
at java.util.HashMap$HashIterator.nextEntry(HashMap.java:926) 
at java.util.HashMap$KeyIterator.next(HashMap.java:960) 
at com.thoughtworks.xstream.converters.collections.CollectionConverter.marshal(CollectionConverter.java:54) 
at com.thoughtworks.xstream.core.TreeMarshaller.convert(TreeMarshaller.java:70) 
at com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:58) 
at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshallField(AbstractReflectionConverter.java:229) 
at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField(AbstractReflectionConverter.java:208) 
at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.<init>(AbstractReflectionConverter.java:171) 
at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doMarshal(AbstractReflectionConverter.java:116) 
at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshal(AbstractReflectionConverter.java:72) 
at com.thoughtworks.xstream.core.TreeMarshaller.convert(TreeMarshaller.java:70) 
at com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:58) 
at com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:43) 
at com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter.writeItem(AbstractCollectionConverter.java:64) 
at com.thoughtworks.xstream.converters.collections.CollectionConverter.marshal(CollectionConverter.java:55) 
at com.thoughtworks.xstream.core.TreeMarshaller.convert(TreeMarshaller.java:70) 
at com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:58) 
at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshallField(AbstractReflectionConverter.java:229) 
at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.writeField(AbstractReflectionConverter.java:208) 
at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2.<init>(AbstractReflectionConverter.java:171) 
at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.doMarshal(AbstractReflectionConverter.java:116) 
at com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter.marshal(AbstractReflectionConverter.java:72) 
at com.thoughtworks.xstream.core.TreeMarshaller.convert(TreeMarshaller.java:70) 
at com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:58) 
at com.thoughtworks.xstream.core.TreeMarshaller.convertAnother(TreeMarshaller.java:43) 
at com.thoughtworks.xstream.core.TreeMarshaller.start(TreeMarshaller.java:82) 
at com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy.marshal(AbstractTreeMarshallingStrategy.java:37) 
at com.thoughtworks.xstream.XStream.marshal(XStream.java:895) 
at com.thoughtworks.xstream.XStream.marshal(XStream.java:884) 
at com.thoughtworks.xstream.XStream.toXML(XStream.java:857) 
at com.thoughtworks.xstream.XStream.toXML(XStream.java:844) 
at org.jbehave.core.reporters.CrossReference.outputFile(CrossReference.java:150) 
at org.jbehave.core.reporters.CrossReference.outputToFiles(CrossReference.java:123) 
at org.jbehave.core.reporters.CrossReference$1.afterStory(CrossReference.java:234) 
at org.jbehave.core.reporters.ConcurrentStoryReporter.afterStory(ConcurrentStoryReporter.java:121) 
at org.jbehave.core.embedder.StoryRunner.runCancellable(StoryRunner.java:324) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:219) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:180) 
at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:229) 
at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201) 
at java.util.concurrent.FutureTask.run(FutureTask.java:262) 
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) 
at java.lang.Thread.run(Thread.java:745) 
{code}","non-feature containing"
"ConcurrentModificationException in xref when run multithreaded. This causes Jenkins to choke when in does not find a </story> for the story in question (the xunit plugin stage): 

[WARNING] Failed to run story loyalty/RapidRewards_extend_awards.story 
java.util.ConcurrentModificationException 
at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:372) 
at java.util.AbstractList$Itr.next(AbstractList.java:343) 
at org.jbehave.core.reporters.CrossReference$XRefRoot.processStories(CrossReference.java:273) 
at org.jbehave.core.reporters.CrossReference.createXRefRoot(CrossReference.java:115) 
at org.jbehave.core.reporters.CrossReference.outputToFiles(CrossReference.java:96) 
at org.jbehave.core.reporters.CrossReference$1.afterStory(CrossReference.java:206) 
at org.jbehave.core.reporters.ConcurrentStoryReporter.afterStory(ConcurrentStoryReporter.java:114) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:263) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:163) 
at org.jbehave.core.embedder.Embedder$EnqueuedStory.call(Embedder.java:686) 
at org.jbehave.core.embedder.Embedder$EnqueuedStory.call(Embedder.java:650) 
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303) 
at java.util.concurrent.FutureTask.run(FutureTask.java:138) 
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
at java.lang.Thread.run(Thread.java:619)","non-feature containing"
"Configuration option for non-greedy matchers for steps The biggest sore point for my team are the greedy reg-ex matchers for step prose. 

This was somewhat solved in another ticket which added a {{priority}} field to the annotation. 

However, this does not scale well with a large amount of steps. It's unmanageable, and a bit ugly, to have to worry about a global priority number. 

This problem would be best fixed if the reg-ex matcher was simply non-greedy. A usable solution, I think, would be to provide a configuration option in the StepsConfiguration to enable this. 

(On a side note, you may want to consider moving to a feature rich templating language like velocity).","feature containing"
"Consolidate configuration objects Merge story and steps configurations into single Configuration object, that now use the builder pattern. 

The embedder controls should be accessible from the main configuration object in Java but should be overridable by the controls specified in the upstream entry points, such as Maven or Ant.","feature containing"
"Context View does not seem to work anymore in 4.x I changed a project from JBehave 3.9.2 to 4.0-beta-8. 

This caused that the context view is not displayed anymore. I use the same code for applying the context view like I see in the JBehave examples today (org.jbehave.examples.core.CoreStories). 

You can use this example project to reproduce it: https://github.com/OttoDiesel/jbehave-selenium-example.git 

""Sproradically"" the context view seems to work, for example when I was using a composite step as the first executed step (if I remember it correctly). 

Some things have been changed in JBehave, for instance org.jbehave.core.reporters.CrossReference.getStepMonitor() is deprecated, but it is not documented what the new way is. 

Does the ContextView still work in JBehave 4.0-beta-8? Are you aware that it is (obviously) broken?","non-feature containing"
"Context managed by JBehave Create a Context managed by JBehave:

* The Context is managed only and only by JBehave. It is not directly accessible by the user of the framework.
* The Context is cleared after the execution of every scenario (if the scenario is parametrised, it is cleared after the execution of every example).
* The Context is handled properly when stories are executed concurrently.
* The Context should favour immutability. For example, when possible, make stored collections immutable.

* Input parameters:
** A method implementing one step accepts as input parameters not only the ones taken from the step, but also parameters stored in the Context.
** If an input parameter coming from the Context is null or does not exist when the method is invoked, an error is raised.
 
* Output parameters:
** If the method implementing one step returns a value, the framework stores this value into the Context.
** If the returned value already exists in the Context, an error is raised.
** If the returned value is a Collection, an immutable version of it (when possible) is stored in the Context.

As an example, the parameters can be identified by name using the value of an annotation.
The following step accepts a parameter from the step, 'fromStep', and also a parameter from the Context stored with the name 'inputName'.
The method also returns a String that is stored in the Context with the name 'outcomeName'.

{code} 
@Given(""some step that receives $fromStep"")
@ContextOutcome(""outcomeName"") 
public String someStep(String fromStep, @ContextParam(""inputName"") String fromContext) {
	return ""some data"";	
}
{code}
","feature containing"
"ContextView for communicating the current context Selenium API has a nice feature Selenium#setContext(String) which shows up in the Selenium server window. 

This feature is not available to WebDriver (no separate server window running anymore). 

By having a ContextView abstraction we can then provide alternative impls, such as a Swing-based panel.","feature containing"
"Convert ant build to use ivy for dependencies We currently have a lib directory with various subdirectories containing a number of dependent jars. As we add more adapters (spring, pico, test-ng) this is going to get more complex.

Ivy (http://ant.apache.org/ivy) has a similar dependency resolution model to maven. By migrating to ivy we can simplify the build and remove the dependent third-party jars from the repository.","feature containing"
"Convert story name in report to human readable form Another good suggestion from feedback. Convert: 

- trader_sells_stocks.story -> Trader Sells Stocks","feature containing"
"Count scenarios in a story separately from those in the GivenStories. PostStoryStatisticsCollector should be counting scenarios in a story considering whether it's a givenStory or not. It should be displaying the number of scenarios executed in the story, not including int the count those executed in the GivenStories.","feature containing"
"Create ""Container"" Scenario Type For Parameterised Scenarios I need to do some post processing on scenarios (my specific use case is to report success/failure to a CI tool via an API) and have Parameterised scenarios treated as a whole.  I.e. if one example fails the whole scenario fails, instead of each example row being treated individually.
Currently the @AfterScenario annotation only supports treatment of each example row as an independent scenario.

I have posted the conversation I had with Mauro on the mailing list today below:
----------------------------------------------------------------------------------------------------------
Hi All,
I have a few scenarios that are parameterised by an example table.  I want to do some specific processing afterwards depending on whether or not the scenario was a success or a failure.  This problem I'm running into is that jBehave is treating the result of the LAST example as the result for the WHOLE scenario.  So, if the first two examples fail but the last one succeeds (as in my sample below) the scenario will be treated as a success. Does anyone know of any way to configure this so that if ANY of the examples fail the whole scenario is considered a failure?  To be clear I only want to do the processing AFTER the whole scenario has run, so using uponType=ScenarioType.EXAMPLE will not work. I've included my sample code below:

Story File:
Feature: Some Feature

Narrative:
As a user
I want to do a thing
So that I can do another thing

Scenario: Some scenario

Given a word '<word>'
When something happens
Then something else should happen

Examples:
|word|
|lemon|
|lemon|
|banana|

Step File:
public class SomeSteps {

	@AfterScenario(uponType=ScenarioType.NORMAL, uponOutcome=Outcome.FAILURE)
	public void afterScenarioFail () {
		System.out.println(""******FAILURE"");
	}

	@AfterScenario(uponType=ScenarioType.NORMAL, uponOutcome=Outcome.SUCCESS)
	public void afterScenarioPass () {
		System.out.println(""******SUCCESS"");
	}

	@Given(""a word '$word'"")
	public void performSearch(@Named(""word"") String word) {
		if(!""banana"".equals(word)) {
			fail(""Failed"");
		}
	}
	
	@When(""something happens"")
	public void imageResultsDisplayed() {
	}

	@Then(""something else should happen"")
	public void seeRefinedSearchSuggestion() {
	}
}


mauro.talevi 	
11:19 AM (4 hours ago)


You should then configure

storyControls.doResetStateBeforeScenario(false) 

so that the previous failure will not be reset and it will be reported at the end of the execution.


me (Paul Robbins change) 	
1:18 PM (2 hours ago)


Mauro,
Thank you for the quick reply.  Unfortunately this solution presents the opposite problem.  Now, if I have multiple scenarios within a single story file, and scenarios that come after the failed one are determined to be failures.  What I'm looking for is some way to configure so that each scenario's success/failure is determined independently, but the scenario is counted as a failure if one of its examples fails.



mauro.talevi 	
1:38 PM (2 hours ago)



One possible solution could be to introduce a new story control flag to reset state only for example scenarios, while normal scenarios are controlled by the existing flag.  Then you could set the example scenario control flag to false, while keeping the normal scenario flag to true (default). 

Although this is not exactly what you're looking for, it seems.   The problem is that currently a scenario parametrised by example is not considered as one scenario, but multiple scenarios (although JBehave knows the difference between a normal and an example scenario).

We could perhaps introduce a sort of a ""container"" scenario type that would keep track of the state during the execution of only examples scenarios

In any case, please raise a JIRA issue for it and we start the discussion - the solution would need to be spiked and verified:

http://jbehave.org/reference/stable/issue-tracking.html

","feature containing"
"Create a eclipse category for JBehave and a new wizard to create stories * Create a new category in eclipse to show JBehave options. 
* Create a new file wizar to create stories.","feature containing"
"Create a wizard to generate step code. I'm going to start creating a wizard pages. First page with the missing step selection to permit that the user can select which missing steps want to generate and the option to select if it generates a new class or add the new methods to an existing class. Second page must permit to configure the method name, the method parameters and its patters.","feature containing"
"Create standard human and machine-readable reports When you execute JBehave from Maven, a report or set of reports should be written to a sub-directory of the standard maven target directory or target/site directory.

One set of reports should be human-readable (for instance, HTML).

Another set of reports should be machine-readable (for instance, XML).

Both reports should include the same summary and count information about the number of scenarios and steps executed, failed, pending, successful and not executed.

Both reports should contains per-scenario and per-step content and outcomes.

This will greatly aid in the creation of plug-ins that execute JBehave in CI systems and reporting systems such as Hudson, Bamboo and Sonar.","feature containing"
"Create ubber ant build.xml The build.xml in the top directory should be able to:
* build core, create jbehave-core-xxx.jar, put it in a dist directory, build and run behaviour classes (yes, this is self-referential - that's a risk for now)
* build each extension with the core on the build classpath, put jbehave-extensionname-xxx.jar in the dist dir, build and run behaviour classes
* build the website, with its root in dist/website
* create all the javadocs, for everything, ever, in dist/website/javadoc (which we can link to with a relative url in the website)","feature containing"
"Creation of a new parser to support the tracking of line numbers in error reporting. Attached is a patch for JBehave. 

The main change is the addition of a new parser. Its based on Eclipse JFace, which means we can track line numbers in error reporting. It can also be re-used for syntax highlighting in an Eclipse editor. JFace requires some Eclipse libraries, so these are new dependencies which still work even though we're not running in an OSGi container. The parser is also very fast compared to the current regex-based parser - the longest running test was 25s for the previous parser, and now its just 0.5s. 

In ScenarioParserBehaviour we've written some tests for the default configuration of JUnitScenario. They fail with the current parser but pass with the new one which is able to throw a new ParseException for each type of problem. 

We've added one test to CandidateStepBehaviour.java that currently fails. Doug tried fixing it by changing the ExamplesTable to be backed by a LinkedHashMap which means that the arguments are automatically in the correct order. But this did not work for other examples and couldn't figure out how to make it work, so the test is currently broken. We'd need help to fix this. 

Further proposed changes would improve the detection of problems such as: 

- not having enough columns in the examples section to cover all the required variables 
- having more columns than required in the examples section 
- checking the order of statements e.g. ensure a When comes after a Given 
- allowing boolean's for parameters 

The first two are quite difficult as it involves a good knowledge of the CandidateStep class.","feature containing"
"CrossReference not creating givenStories hierarchy in xref.json Problem: 
The reportbuilder doesn't create html pages for givenStories. 
Crossreference xref.json file only output the information of the GivenStory and not the main story. 

It only happens when having givenStories within a story file and CrossReference. 
Without givenStories, it shows correctly. 

For example: 

- Story file: test.story 

Scenario: Test 

GivenStories: another_test.story 
Then check something 

------------------ 

In cofiguration class, I have: 

. 
. 
. 
CrossReference crossReference = new CrossReference().withJsonOnly().withOutputAfterEachStory(true) 
.excludingStoriesWithNoExecutedScenarios(true); 
ContextView contextView = new LocalFrameContextView().sized(640, 120); 
SeleniumContext seleniumContext = new SeleniumContext(); 
SeleniumStepMonitor stepMonitor = new SeleniumStepMonitor(contextView, seleniumContext, 
crossReference.getStepMonitor()); 
Format [] formats = new Format[] {new SeleniumContextOutput(seleniumContext), CONSOLE, WEB_DRIVER_HTML}; 
StoryReporterBuilder reporterBuilder = new StoryReporterBuilder() 
.withCodeLocation(CodeLocations.codeLocationFromClass(embeddableClass)).withFailureTrace(false) 
.withFailureTraceCompression(true).withDefaultFormats().withFormats(formats) 
.withCrossReference(crossReference); 
@Override 
public Configuration configuration() { 
return new SeleniumConfiguration() 
.useSeleniumContext(seleniumContext) 
.useWebDriverProvider(driverProvider) 
.useFailureStrategy(new FailingUponPendingStep()) 
.useStoryControls(new StoryControls().doDryRun(false).doSkipScenariosAfterFailure(false)) 
.useStepMonitor(stepMonitor) 
.useStoryLoader(new LoadFromClasspath(embeddableClass.getClassLoader())) 
.usePathCalculator(new RelativePathCalculator()) 
.useStoryReporterBuilder(reporterBuilder); 
} 
. 
. 
. 

------------- 

- target/jbehave/view: (it doesn't create a path.to.another_story.html page for the givenStory another_story.story) 

. 
. 
. 
afterstories.html 
afterstories.stats.html 
beforestories.html 
index.html 
beforestories.stats.html 
path.to.test.html 
path.to.test.stats.html 
navigator.html 
reports.html 
xref.json 

-------------- 

- inside xref.json: It has the information ONLY of the given story (another_test.story) It means that Story Navigator ONLY show the givenStory. 
Also, as the given story doesn't have an html page, it shows the broken link. 

{""xref"": { 
""whenMade"": 1334236006069, 
""createdBy"": ""JBehave"", 
""metaFilter"": """", 
""meta"": [ 
""project=basicUI"" 
], 
""stories"": [ 
{ 
""description"": """", 
""narrative"": ""In order to test PlanMill instance {excerpt}\u000aAs a user\u000aI want to login with my credentials\u000a"", 
""name"": ""BDD Login to PlanMill instance.story"", 
""path"": ""path/to/another_test.story"", 
""html"": ""path.to.another_test.html"", 
""meta"": ""project=basicUI\u000a"", 
""scenarios"": ""Scenario:Test...."", 
""passed"": true, 
""started"": 1334235999102, 
""duration"": 5848 
} 
], 
. 
. 
.","non-feature containing"
"CrossReference should allow output of JSON or XML data per completed story and to write to only one format Instead of writing the cross reference XML and JSON at the end of the suite, write it once per story completion. Of course this should be configurable, with the default as is (at the end of the suite). 

Secondarily, have a configuration option that allows a choice of XML or JSON (or both), rather than doing both as at present.","feature containing"
"Current path is converted to file:/home/.../ when accessing codeLocationFromClass from inside a jar I have tried to build a complete jbehave test into a jar file by maven assembly and then to run the test on another machine that doesn't have the dev system installed. 

e.g. java -cp ""lib\*"" org.junit.runner.JUnitCore de.vodafone.jbehave.rrd.runner.Runner 

the reporter tries to create the files in a path that contains $PWD/file:/$PWD/lib/jbehave/view, so I assume the path is converted from the jar location to an url which then is used as a regular path, this doesn't work on Windows or creates a directory file: in linux. 

(In Linux it is possible to work around this by creating a symlink from / to file:) 

I'll try to attach an example project if I can narrow this down","non-feature containing"
"Curtailed stack traces for ""known failures"". public void myStep { 
throw new KnownFailure(""CORBA down""); 
} 

If we threw the above from the middle of a step, JBehave could list the step as failing without stack trace in the outputs.","feature containing"
"Custom StepMonitor doesn't work in version 4.x I created a custom StepMonitor:
{quote}    private StepMonitor stp = new NullStepMonitor(){
        public void performing(String step, boolean dryRun){
            System.err.println(""DEBUG - Monitor. Step = "" + step);
        }
    };{quote}
and I use it in my configuration:
{quote}      return new MostUsefulConfiguration()
            ................
            .useStepMonitor(stp);{quote}
On version 3,9,5 it works as expected, the result is:
{quote}Scenario: A scenario with some pending steps
DEBUG - Monitor. Step = Given I am a pending step
Given I am a pending step
DEBUG - Monitor. Step = And I am still pending step
And I am still pending step
DEBUG - Monitor. Step = When a good soul will implement me
When a good soul will implement me
DEBUG - Monitor. Step = Then I shall be happy
Then I shall be happy{quote}

But on version 4.0.4 it doesn't work, I have got:
{quote}Scenario: A scenario with some pending steps
Given I am a pending step
And I am still pending step
When a good soul will implement me
Then I shall be happy{quote}

Here is simple example on GitHub: https://github.com/kordirko/jbehave_stepmonitor.git
Master branch is for version 4.0.4, and branch ""Jbehave_3_9_5"" is for version 3.9.5","non-feature containing"
"Custom StoryReporter's not being executed in the same Thread they were created Thread used to create StoryReporter is not the same one than used later to execute it.

More information can be found at https://groups.google.com/forum/#!topic/jbehave-dev/SoN9z22Aq84

Maven example project reproducing this issue:

https://github.com/rjimgal/jbehave4-reporter-threads","non-feature containing"
"Custom converters As a developer, I want to provide converters for my scenarios so that I can convert from a String to anything that can be represented as a String (eg: a Grid, an Image, etc.)","feature containing"
"CustomWorld for those people who want to define their own World accessors See javadoc in the CustomWorld class","feature containing"
"Customize JBehave HTML report. Is there any way to customize HTML the way we want in JBehave? As per our project requirement, we want to add more information in HTML report such as date time, browser tested etc. We noticed HTMLoutput method in JBehave. If it is possible with this method can you please provide any good example?","feature containing"
"Data archive file content should be displayed using relative paths The data archive file content should be shown using relative paths to be more readable. 

On some systems (e.g. Windows) the path of the java.io.tmpdir can be quite long,","feature containing"
"Data file view URLs need to escape non-valid characters When using the default java.io.tmpdir as upload directory on certain platforms, the directory path may contain invalid URL characters that need to be escaped.","non-feature containing"
"Deafult Meta Matcher - behaviour for multiple tags I kind of want to start discussion regarding behaviour of Default Meta Matcher.

I was using defult syntax for filtering and I encounterd some problems. Given 
{code:java}
@environment dev
@risk
{code}
{code:java}
@environment all
@risk
{code}
I bumpted on a situation that when I use ""+risk +environment dev"" both stories was found. I found that DeafultMetaMatcher contains a logic that results in kind of ""or"" operator between metas in filterString. 

I have itroduced to my code new Metamatcher that is having more like ""and"" operator between metas, so I am not creating an issue. Plus there is ","feature containing"
"Define commom JAXB interfaces for systems to provide Features and its Stories and Scenarios to a JBehave runner. There are many systems where Stories could be writed, stored and mantained. Some example are Confluence (using its excelent versioning handle), Rational RSA, SparxSystems Enterprise Architect (both as scenarios inside UseCases/Features UML elements). 

One way todo that integration would be Jbehave to provide commom classes annotated with _javax.xml.bind.annotation.Xml*_ where developers could create JAXB *Services* that will get data from whatevers system and serve Features, its Stories and related Scenarios objects for JBehave as XML ou JSON.","feature containing"
"Disable Timeout in debuggingmode It should be the default behavior in debugging mode to disable the timeout. 

A first POC-Implementation can be reviewed in branch NoTimeoutInDebugMode in the fork git://github.com/picpromusic/jbehave-core.git 

Or via browser here: 
https://github.com/picpromusic/jbehave-core/tree/NoTimeoutInDebugMode 

A Diff can be viewed here: 
https://github.com/picpromusic/jbehave-core/compare/master...NoTimeoutInDebugMode","feature containing"
"Distinguish ignored steps and comments All comments from BDD stories are reported as ignored steps, but only comments starting with ""Given"", ""When"", ""Then"", ""And"" (or any other corresponding localized keywords) should be considered as ignored steps.

https://github.com/codecentric/jbehave-junit-runner/issues/90","feature containing"
"Document JUnitAdapter on website Explain how to use it - especially Damian's excellent Eclipse hack that allows you to run the current behaviour class under the cursor.","feature containing"
"Documentation specifically for non-technical users of JBehave As it seems there is no documentation of JBehave for non-technical users. 

The documentation on www.jbehave.org is mixed with the technical and non-technical aspects of JBehave. This is not suitable for non-technical people learning to write JBehave stories. 

I suggest that a documentation is created specifically for non-technical users of JBehave. It should be as practical as possible, please no calculator examples or something like that. And it should contain some best practices for how to write JBehave stories.","feature containing"
"Documentation to configure maven-plugin should be updated When introducing JBehave into our project I've run into some challenges - luckily most have been searchable and resolved. 

We have to separate tests in pom.xml, and the docs does not say <scope>test</scope> in the plugin configuration, which makes it harder to get started using JBehave for some projects. 
We also need to be able to run without tests, and use the standard maven flag -DskipTests - the maven plugin docs does not mention how to get this right, but this worked for us: http://stackoverflow.com/questions/7926723/jbehave-maven-how-to-skip-scenario-tests","feature containing"
"Doesn't find scenarios with numbers in the file name cells_with_3_neighbours_are_born -> CellsWith3NeighboursAreBorn, throws ScenarioNotFoundException
cells_with3_neighbours_are_born works OK, but should be able to do either.","non-feature containing"
"Double.NaN should be parseable into a double NaN, used as an error condition in mathematical algorithms, should be supported as a double. Currently NaN does not work. It throws a ParseException.","non-feature containing"
"Dry-run Scenario to determine that no steps are Pending Sometimes it is useful to know if all the Steps in a Scenario have been matched (which is fast) before attempting to run it (which may be very slow). For example, as we have learnt to use JBehave we have had need to refactor our Step definitions. Our JBehave tests aren't run much more often than daily at the moment, and it isn't reasonable to run them all before committing, due in both cases to the length of time needed to run them. Compounding that with other possible fires in the build chain, it can take quite some time before we realise that a change to a step definition has broken a Scenario. 

What we'd like is a way to (relatively) quickly dry-run our Scenarios, to confirm that each Step has at least been matched. 

One possibility that would allow us to do this would be if the Configuration passed into runScenarioSteps could provide the initial State, I'm thinking it would then be quite easy for the State to skip running the steps and just determine whether they had been matched?","feature containing"
"Duplicate step error message not reported It seems that the DuplicateCandidateFound exception is getting lost inside the embedder. Test case is attached. The only error message I get is: 
{code} 
org.jbehave.core.embedder.Embedder$RunningStoriesFailed: Failures in running stories in batch: 
java.util.concurrent.FutureTask@1d25d06e: Failures in running stories lost_diagnostics.story 
at org.jbehave.core.embedder.Embedder.runStoriesAsPaths(Embedder.java:226) 
at org.jbehave.core.junit.JUnitStory.run(JUnitStory.java:24) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
at java.lang.reflect.Method.invoke(Method.java:597) 
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44) 
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) 
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41) 
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) 
at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79) 
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71) 
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49) 
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193) 
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52) 
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191) 
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42) 
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184) 
at org.junit.runners.ParentRunner.run(ParentRunner.java:236) 
at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50) 
at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) 
{code}","non-feature containing"
"Duration calculation contains a de facto round down StoryManager's RunningStory class returns the elapsed duration by the method getDurationInMillis(), this method multiplies by 1000 the class' own duration.getDurationInSecs() value. The before mentioned method in the same time divides its own durationInMillis value by 1000. This divide results tecnically in a round down, for example: if the original value was 9564 the final result will be only 9000 sine 9564/1000 = 9 and 9*1000 = 9000, this ends up in incorrect duration values of story files as well as wrong total value. The StoryDuration should be extended with a direct getter method what retruns the durationInMillis without modification so the RunningStory could use it again without modification.","non-feature containing"
"Dynamic data for scenarios Would be nice to have a feature that allows inject table right before the scenario execution.

I.e. we have such scenario.
Given login page opened
When <login> is entered
And <password> is entered
Then Welcome page is displayed
Examples:
examples/loginInfo.table

In general case data in loginInfo.table might become outdated from the moment it was generated (during parsing all stories in the suite) and at the moment this particular story scheduled for the execution.

Having some functionality that allows to get access to the loginInfo.table right before scenario execution to check it and requiest new one from some DataProvider looks quite reasonable.

The same for the steps parameterized with ExampleTables, i.e.
When user enters info for product from productInfo.table","feature containing"
"Easier and safer configuration of default locale, affecting keyword language Currently there is no easy and safe way to configure another locale for the keywords in my mind. 

I know that it is described here: http://jbehave.org/reference/stable/stories-in-your-language.html 

But it has to be configured in several places, which might work today but not in a future version of JBehave. 

Furthermore ""new ParameterConverters.ExamplesTableConverter(keywords))"" does not work since there is no such constructor. 

So I had the idea to set this private final field by reflection to my desired German locale: org.jbehave.core.i18n.LocalizedKeywords.DEFAULT_LOCALE 

See the code below for how I solved it. It works basically. But it is not nice to solve it this way, although I applied single source principle. 

So I suggest that JBehave provides an dedicated API to set the default locale without JBehave users have to use reflection in order to achieve this single source language configuration. 

A quick solution would be to make the ""LocalizedKeywords.DEFAULT_LOCALE"" public and not final. But that would not be so nice, I know. 

You know your JBehave framework better than me. I hope you have an idea how to provide that API in a well designed way. 

Maybe instead of ""useKeywords(...)"" it could be done with ""useLocale(...)"", just an idea. 

That locale would affect keyword language and all other language dependent parts of JBehave. 

Having such an API for configuring locale can be even helpful for JBEHAVE-874 issue I think, since it would be easier to realize and more safe and maintainable for future versions of JBehave. 

{code} 
private void setGermanLocale() { 
try { 
Field localeField = LocalizedKeywords.class.getDeclaredField(""DEFAULT_LOCALE""); 
setFinalStatic(localeField, Locale.GERMAN); 
} catch (NoSuchFieldException | SecurityException e) { 
e.printStackTrace(); 
} 
} 

private void setFinalStatic(Field field, Object newValue) { 
field.setAccessible(true); 
try { 
Field modifiersField = Field.class.getDeclaredField(""modifiers""); 
modifiersField.setAccessible(true); 
modifiersField.setInt(field, field.getModifiers() & ~Modifier.FINAL); 
field.set(null, newValue); 
} catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) { 
throw new RuntimeException(e); 
} 
} 
{code}","feature containing"
"Easier story file's language configuration In order to configure the language of the story files the JBehave user has to do a lot or otherwise JBehave won't work correctly. 

This is because you have to create a Keywords object and set it into many other objects: 
http://jbehave.org/reference/stable/stories-in-your-language.html 

If you forget to set the Keyword object into one of the other objects, then it does not work correctly, tests fail. Or if JBehave is changed in a future version, your language configuration might not work anymore. 

The problem is striking a balance between flexibility and configurability. We don't like setter and static injection. We prefer CDI. The issue here is how to make this easier to configure and what is the sensible default. 

We could make the language default to the platform locale, for example, instead of the English locale. 

This default could be changed (if needed) by a dedicated JBehave property for configuring the story language. This seems to be more flexible than having to change the platform locale or passing -Duser.language to the java process. 

The origin for this issue is a mailing list discussion: 
http://www.mail-archive.com/user@jbehave.codehaus.org/msg01954.html","feature containing"
"Eclipse can't find the test to run when it's in JBehave's jar This works fine when we have the source available. Is there a way of including the source for Scenario in the jar, to get Eclipse to notice that there really is a test?","feature containing"
"Eclipse installation instructions do not work Following the jBehave [instructions on creating a test project|https://github.com/wmaop/wm-jbehave/wiki/Creating-a-test-project-with-Maven] does not work. Even with an internet connection, the wm-jbehave dependency is not found. This appears to be because [it is not in the central Maven repo|https://stackoverflow.com/questions/46124046/maven-cant-see-jbehave/46124132?noredirect=1#comment79213475_46124132].

I have flagged this as medium because, although it is unlikely to affect existing users, it prevents new users accessing the tool.","non-feature containing"
"Eclipse plugin for navigating between textual and code steps As an avid user of jBehave, I find maintaining steps very laborious, so I would like an eclipse plugin with: 
* support for opening declarations of steps from the scenario files 
* support for finding usages of steps in scenario files from the declaration 
* support for opening the declaration of failed steps when running junit 

Nice to have: 
* refactoring support: when editing the annotations, scenarios using the step get rewritten","feature containing"
"Eclipse plugin parser should be consistent with Core parser with regards to comments The story editor (Eclipse plugin) displays a line starting with ""!--"" as a comment line, painting it green. It does not require a space after ""!--"". It is the same with some other keywords in the story editor, for example I can start a line with Scenario:blabla and the story editor recognizes it as a scenario. 

But the story parser of jbehave-core requires a space after a keyword like ""!--"". So it does not fit toghether. The story parser of jbehave-core and the one of the Eclipse plugin should parse the story in the same way. Otherwise it is misleading what the story editor displays. 

Besides that, usually comment keywords don't include a space (XML, SQL, Javadoc etc.) So it is contra intuitive in a way. But I don't know how logical it would be to make an exception just for the comment keyword but not for ""Given"", ""Scenario"" and so on. Maybe a space should be optional for all story keywords.","feature containing"
"Eclipse story runner plugin I want to be able to easily run scenarios and stories from within Eclipse","feature containing"
"Eliminate Format as a factory for StoryReporter StoryReporter is made by Format, and that feels an unnecessary OO separation. Making custom reporters is cumbersome as a result. Can we kill the Format class?","feature containing"
"Embedder recreates StoryManager instead of using existing one The method Embedder.runStoriesAsPaths() should use the correct method to get an instance of the StoryManager. Currently it uses it recreates a new StoryManager which prevents the user from manipulating the storyManager using the public storyManager() function.","non-feature containing"
"Embedder should be responsible for all configurable aspects of story running In 2.x, responsibilities are split between the StoryRunner and the Ant task/Maven plugin. E.g. the ability to skip some stories or ignore failure is configured at Ant/Maven level. 

An Embedder should instead be responsible for running stories in the same way, whatever environment it is embedded in, IDE, CLI, web. 

The Ant/Maven layer should become wafer-thin, only responsible for collecting the stories to be run, delegating to the embedder.","feature containing"
"Embedder should be responsible for instantiation of Embeddable instances Making the Embedder instantiate the Embeddable instances from the class names using the EmbedderClassLoader, rather than the Ant or Maven entry points, allow us to avoid unnecessary instantiation of classes when skip mode is enabled. 

It also minimise further any code logic in the Ant/Maven layers, limited to the collection of class names and other configurable parameters.","feature containing"
"Embedder's calculation of timed out stories is naive {noformat} 
waitUntilAllDoneOrFailed() { 
long start = System.currentTimeMillis(); 
{noformat} 

start really should be ""lastStepTime"" and be updated everytime a step executes.","feature containing"
"Empty example table row values cause exception Given the following example table: 

|C1|C2|C3| 
|||| 

JBehave fails to parse the table. It reports the following error: 

|C1|C2|C3| 
|||| (FAILED) 
(java.lang.IndexOutOfBoundsException: Index: 0, Size: 0) 

The stack trace reads: 

Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0 
at java.util.ArrayList.RangeCheck(ArrayList.java:547) 
at java.util.ArrayList.remove(ArrayList.java:387) 
at org.jbehave.core.model.ExamplesTable.columnsFor(ExamplesTable.java:76) 
at org.jbehave.core.model.ExamplesTable.parse(ExamplesTable.java:60) 
at org.jbehave.core.model.ExamplesTable.<init>(ExamplesTable.java:48) 
at org.jbehave.core.steps.ParameterConverters$ExamplesTableConverter.convertValue(ParameterConverters.java:328) 
at org.jbehave.core.steps.ParameterConverters.convert(ParameterConverters.java:68) 
at org.jbehave.core.steps.StepCreator.convertParameters(StepCreator.java:253) 
at org.jbehave.core.steps.StepCreator.access$1100(StepCreator.java:25) 
at org.jbehave.core.steps.StepCreator$5.parametriseStep(StepCreator.java:161) 
at org.jbehave.core.steps.StepCreator$5.perform(StepCreator.java:129) 
at org.jbehave.core.embedder.StoryRunner$FineSoFar.run(StoryRunner.java:189) 
at org.jbehave.core.embedder.StoryRunner.runSteps(StoryRunner.java:174) 
at org.jbehave.core.embedder.StoryRunner.runScenarioSteps(StoryRunner.java:162) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:84) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:62) 
at org.jbehave.core.embedder.Embedder.runStoriesAsPaths(Embedder.java:160) 
... 43 more 

Parsing the table works fine if the last row contains at least one space in one of the cells. So 

|C1|C2|C3| 
||| | 

and 


|C1|C2|C3| 
|||| 
|| || 

works fine.","non-feature containing"
"Empty lines in an example table are processed as tests I commented some lines from an example and inserted an empty line in between like this: 

|header1|header2| 
|value|value| 

|--|value|value| 

this causes an empty set of parameters to be processed after the active lines are processed, I assume that the empty lines are processed as tests as well. 

If I remove the empty line again, the empty test run disappears.","non-feature containing"
"Enable override of configured properties with values specified as table properties I have noticed a problem in my story where I need to change the ExampleTableSeperatorValue (since a webpage title contains a vertical bar). 

This could be easily configured if the separator could be changed for an individual table (like {trim=false}). 

E.g. 
{code} 
{ignorableSeparator=!--,headerSeparator=!,valueSeparator=!} 
!url!title! 
!-- a comment --! 
!http://www.example.com/!example.com|Example! 
{code}","feature containing"
"Ensure ExamplesTable preserves ordering of columns Currently the ExampleTable does not guarantee order of the columns since the row is returned as a HashMap. 

In some cases, the preserving the order of the textual table may be useful in the implementation of the step. Using LinkedHashMap would preserve the ordering, at a small cost of performance.","feature containing"
"Ensure consistency of encoding In order to allow reliable and consistent support for non-English languages, a consistent encoding needs to be used. 

- UTF-8 encoding should be mandated for Java source and textual story files. 
- ISO-8859-1 with Unicode escaped characters for locale resource bundles. 

The requirements need to be clearly documented, with links to tools that allow conversion of native to ascii based unicode, tools that can allow users to easily and efficiently specify keywords in their locales. 

A standard set of locales can then be supported and bundled as core resources, so that users need only specify new LocalizedKeywords(<my Locale>). 

We may at a later state a further layer of conversion using some of these tools.","feature containing"
"Ensure lazy initialisation in ConfigurableEmbedder.configuredEmbedder() I stumbled upon a beheavior of this method: 
{code}org.jbehave.core.ConfigurableEmbedder.configuredEmbedder(){code} 

It always calls these methods when being called: 
{code}embedder.useConfiguration(configuration()); 
embedder.useCandidateSteps(candidateSteps()); 
embedder.useStepsFactory(stepsFactory());{code} 

This had some unexpected side effects for me. For example I am logging which steps are being used. Since I call ""configuredEmbeder()"" multiple times, the method ""stepsFactory()"" is called multiple times. Even if I use just one instance of embedder it is called many times since the JBehave framework calls ""configuredEmbedder()"" many times. 

Maybe it would be good if there is another method added to ""org.jbehave.core.ConfigurableEmbedder"" called ""configureEmbedder"" which actually configures the embedder every time when it is called. 

But the method ""configuredEmbedder"" should maybe be implemented with lazy initialization, so that the calls in its method are just executed once. I tried this in the class which I extend from ""JUnitStories"". But then the meta-filtering does not work for some strange reason. So I could not find a solution for this.","feature containing"
"Ensure same instance of EmbedderClassLoader is used to find and run stories from Ant or Maven I'm getting the following stacktrace when using the ServiceLoader infrastructure in my JBehave steps while running under the maven plugin. I think this is caused by using different class loaders to find the stories and then to execute them. It starts working if I patch createClassLoader in AbstractEmbedderMojo to cache the created classloader and to reuse that every time. 

java.lang.ClassCastException 
at java.lang.Class.cast(Class.java:2990) 
at java.util.ServiceLoader$LazyIterator.next(ServiceLoader.java:345) 
at java.util.ServiceLoader$1.next(ServiceLoader.java:421) 
at com.salerio.idm.service.AdaptorsModule.configure(AdaptorsModule.java:33) 
at com.google.inject.AbstractModule.configure(AbstractModule.java:59) 
at com.google.inject.spi.Elements$RecordingBinder.install(Elements.java:223) 
at com.google.inject.spi.Elements.getElements(Elements.java:101) 
at com.google.inject.InjectorShell$Builder.build(InjectorShell.java:135) 
at com.google.inject.InjectorBuilder.build(InjectorBuilder.java:102) 
at com.google.inject.Guice.createInjector(Guice.java:92) 
at com.google.inject.Guice.createInjector(Guice.java:69) 
at functional.BaseFixture.initializeInjector(BaseFixture.java:272) 
at functional.BaseFixture.initialize(BaseFixture.java:104) 
at bdd.FixedIncomeSteps.init(FixedIncomeSteps.java:36) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
at java.lang.reflect.Method.invoke(Method.java:597) 
at org.jbehave.core.steps.StepCreator$BeforeOrAfter.run(StepCreator.java:348) 
at org.jbehave.core.steps.StepCreator$1.perform(StepCreator.java:74) 
at org.jbehave.core.embedder.StoryRunner$FineSoFar.run(StoryRunner.java:202) 
at org.jbehave.core.embedder.StoryRunner.runSteps(StoryRunner.java:187) 
at org.jbehave.core.embedder.StoryRunner.runStorySteps(StoryRunner.java:170) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:84) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:63) 
at org.jbehave.core.embedder.Embedder.runStoriesAsPaths(Embedder.java:194) 
at bdd.MyStories.run(MyStories.java:52) 
at org.jbehave.core.embedder.Embedder.runStoriesWithAnnotatedEmbedderRunner(Embedder.java:137) 
at org.jbehave.mojo.RunStoriesWithAnnotatedEmbedderRunner.execute(RunStoriesWithAnnotatedEmbedderRunner.java:20) 
at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180) 
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328) 
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138) 
at org.apache.maven.cli.MavenCli.main(MavenCli.java:362) 
at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
at java.lang.reflect.Method.invoke(Method.java:597) 
at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315) 
at org.codehaus.classworlds.Launcher.launch(Launcher.java:255) 
at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430) 
at org.codehaus.classworlds.Launcher.main(Launcher.java:375)","non-feature containing"
"Ensure utility methods should be independent of unit-testing framework Refactor Ensure method to only depend on Hamcrest and not on the unit-testing framework.

Assertions can be done using Hamcrest's MatcherAssert.","feature containing"
"Error in WebDriverProvider initialize method ignored due to NPE in StoryRunner {noformat} 
new WebDriverProvider() { 
public void initialize() { 
throw new RuntimeException(); // or Error or something 
} 
} 
{noformat} 

... does not get reported. It's consumed because of a later NPE 

The NPE is in StoryRunner, concerning member variable 'reporter' which is not set before use, in this situation.","non-feature containing"
"Error reporting in minimock could be better. The error reporting in minimock gives no clue as to what expectations have been set up, and what arguments it's getting.

This makes it really hard to work out whether it's the code or the behaviour that's misbehaving.","feature containing"
"Error serializing object class org.jbehave.web.runner.wicket.pages.RunStory When I click on ""Run story"" it works but the server log contains: 

16:34:23,656 INFO [org.apache.wicket.protocol.http.WebApplication] (http-/127.0.0.1:8080-6) [wicket] Started Wicket version 6.15.0 in DEPLOYMENT mode 
16:34:23,984 ERROR [org.apache.wicket.serialize.java.JavaSerializer] (http-/127.0.0.1:8080-6) Error serializing object class org.jbehave.web.runner.wicket.pages.RunStory [object=[Page class = org.jbehave.web.runner.wicket.pages.RunStory, id = 0, render count = 1]]: org.apache.wicket.core.util.objects.checker.CheckingObjectOutputStream$ObjectCheckException: The object type is not Serializable! 
A problem occurred while checking object with type: org.jbehave.core.embedder.StoryManager 
Field hierarchy is: 
0 [class=org.jbehave.web.runner.wicket.pages.RunStory, path=0] 
private org.jbehave.core.embedder.StoryManager org.jbehave.web.runner.wicket.pages.RunStory.storyManager [class=org.jbehave.core.embedder.StoryManager] <----- field that is causing the problem 
at org.apache.wicket.core.util.objects.checker.CheckingObjectOutputStream.internalCheck(CheckingObjectOutputStream.java:387) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.core.util.objects.checker.CheckingObjectOutputStream.check(CheckingObjectOutputStream.java:361) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.core.util.objects.checker.CheckingObjectOutputStream.checkFields(CheckingObjectOutputStream.java:645) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.core.util.objects.checker.CheckingObjectOutputStream.internalCheck(CheckingObjectOutputStream.java:569) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.core.util.objects.checker.CheckingObjectOutputStream.check(CheckingObjectOutputStream.java:361) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.core.util.objects.checker.CheckingObjectOutputStream.writeObjectOverride(CheckingObjectOutputStream.java:713) [wicket-core-6.15.0.jar:6.15.0] 
at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:342) [rt.jar:1.7.0_09] 
at org.apache.wicket.serialize.java.JavaSerializer$SerializationCheckerObjectOutputStream.writeObjectOverride(JavaSerializer.java:268) [wicket-core-6.15.0.jar:6.15.0] 
at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:342) [rt.jar:1.7.0_09] 
at org.apache.wicket.serialize.java.JavaSerializer.serialize(JavaSerializer.java:78) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.pageStore.DefaultPageStore.serializePage(DefaultPageStore.java:376) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.pageStore.DefaultPageStore.storePage(DefaultPageStore.java:150) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.page.PageStoreManager$PersistentRequestAdapter.storeTouchedPages(PageStoreManager.java:412) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.page.RequestAdapter.commitRequest(RequestAdapter.java:181) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.page.AbstractPageManager.commitRequest(AbstractPageManager.java:98) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.page.PageManagerDecorator.commitRequest(PageManagerDecorator.java:73) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.page.PageAccessSynchronizer$2.commitRequest(PageAccessSynchronizer.java:258) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.Application$2.onDetach(Application.java:1640) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.request.cycle.RequestCycleListenerCollection$3.notify(RequestCycleListenerCollection.java:105) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.request.cycle.RequestCycleListenerCollection$3.notify(RequestCycleListenerCollection.java:101) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.util.listener.ListenerCollection$1.notify(ListenerCollection.java:120) [wicket-util-6.15.0.jar:6.15.0] 
at org.apache.wicket.util.listener.ListenerCollection.reversedNotify(ListenerCollection.java:144) [wicket-util-6.15.0.jar:6.15.0] 
at org.apache.wicket.util.listener.ListenerCollection.reversedNotifyIgnoringExceptions(ListenerCollection.java:113) [wicket-util-6.15.0.jar:6.15.0] 
at org.apache.wicket.request.cycle.RequestCycleListenerCollection.onDetach(RequestCycleListenerCollection.java:100) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.request.cycle.RequestCycle.onDetach(RequestCycle.java:640) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.request.cycle.RequestCycle.detach(RequestCycle.java:589) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:259) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:201) [wicket-core-6.15.0.jar:6.15.0] 
at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:137) [wicket-core-6.15.0.jar:6.15.0] 
at javax.servlet.http.HttpServlet.service(HttpServlet.java:734) [jboss-servlet-api_3.0_spec-1.0.2.Final-redhat-1.jar:1.0.2.Final-redhat-1] 
at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.2.Final-redhat-1.jar:1.0.2.Final-redhat-1] 
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:295) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1] 
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:214) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1] 
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:230) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1] 
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:149) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1] 
at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:169) [jboss-as-web-7.2.0.Final-redhat-8.jar:7.2.0.Final-redhat-8] 
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:145) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1] 
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:97) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1] 
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:102) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1] 
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:336) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1] 
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:856) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1] 
at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:653) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1] 
at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:920) [jbossweb-7.2.0.Final-redhat-1.jar:7.2.0.Final-redhat-1] 
at java.lang.Thread.run(Thread.java:722) [rt.jar:1.7.0_09] 
Caused by: java.io.NotSerializableException: org.jbehave.core.embedder.StoryManager 
at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1180) [rt.jar:1.7.0_09] 
at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1528) [rt.jar:1.7.0_09] 
at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1493) [rt.jar:1.7.0_09] 
at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416) [rt.jar:1.7.0_09] 
at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174) [rt.jar:1.7.0_09] 
at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:346) [rt.jar:1.7.0_09] 
at org.apache.wicket.serialize.java.JavaSerializer$SerializationCheckerObjectOutputStream.writeObjectOverride(JavaSerializer.java:260) [wicket-core-6.15.0.jar:6.15.0] 
... 37 more 


I had the same behavior with the jbehave-web-trader-runner WAR (from jbehave-web-examples 3.5.5) deployed on the server without any change of library version.","non-feature containing"
"Example Code - custom-reports.ftl is incompatible with 4.x.x The TemplateableViewGenerator.java class has been heavily modified in the JBehave v4.x.x, the dataModel has been extended with new keys as well as an old one has been replaced:

V3.9.3:
{code:java}
    public void generateReportsView(File outputDirectory, List<String> formats, Properties viewProperties) {
        this.viewProperties = mergeWithDefault(viewProperties);
        String outputName = templateResource(""viewDirectory"") + ""/reports.html"";
        String reportsTemplate = templateResource(""reports"");
        List<String> mergedFormats = mergeFormatsWithDefaults(formats);
        reports = createReports(readReportFiles(outputDirectory, outputName, mergedFormats));

        Map<String, Object> dataModel = newDataModel();
        addDateAndEncoding(dataModel);
        dataModel.put(""timeFormatter"", new TimeFormatter());
        dataModel.put(""reportsTable"", new ReportsTable(reports, nameResolver));

        write(outputDirectory, outputName, reportsTemplate, dataModel);
        generateViewsIndex(outputDirectory);
    }
{code}

v4.1.1:
{code:java}
    public void generateReportsView(File outputDirectory, List<String> formats, Properties viewProperties) {
        this.viewProperties = mergeWithDefault(viewProperties);
        String outputName = templateResource(""viewDirectory"") + ""/reports.html"";
        String reportsTemplate = templateResource(""reports"");
        List<String> mergedFormats = mergeFormatsWithDefaults(formats);
        reports = createReports(readReportFiles(outputDirectory, outputName, mergedFormats));
        reports.viewAs(ViewType.valueOf(viewProperties.getProperty(""reportsViewType"", Reports.ViewType.LIST.name())));
        Map<String, Object> dataModel = newDataModel();
        addDateAndEncoding(dataModel);
        dataModel.put(""timeFormatter"", new TimeFormatter());
        dataModel.put(""reports"", reports);
        dataModel.put(""storyDurations"", storyDurations(outputDirectory));
        write(outputDirectory, outputName, reportsTemplate, dataModel);
        generateViewsIndex(outputDirectory);
    }
{code}

The _reportsTable _has been replaced by _reports _therefore the corresponding ftl repostrs must be updated accordingly as well.

During migration from 3.x.x to 4.x.x the following error message occures:
{color:red}SEVERE: Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> reportsTable  [in template ""ftl/custom-summary.ftl"" at line 62, column 24]{color}

To fix this issue the above mentioned key must be replaced in the custom ftl.
","non-feature containing"
"Example Table parameters to take preference over Meta parameters Imaging the following scenario:

@author rjimgal
Scenario: It is possible to list books by author
Given an author <author>
When user searches by author
Then there are books listed
Examples:
|Meta:|author           |
|         |Shakespeare|
|         |Cervantes     |


Meta properties are added (or updated), to existing ExamplesTable parameters, this leads into 'rjimgal', feed into 'Given an author <author>' step.

I think examples table value should take preference over Meta value. This makes even more sense for Gherkin, where Meta does not have any value associated, and thus
an empty string would be used instead.","feature containing"
"Example codebase for Ant extension Create a sample codebase under extensions/ant/example","feature containing"
"Example codebase for JBehave core Put together an example codebase under jbehave/core/example (Currency Converter?)","feature containing"
"Example codebase for JMock extension Create example codebase under extensions/jmock/example using UsingJMock, etc.","feature containing"
"Example codebase for JUnit extension Create codebase under extensions/junit/example","feature containing"
"Examples Table for subset of steps http://jbehave.org/reference/stable/tabular-parameters.html is great, but pertains to a single step. 

{quote} 
Given I'm on the FooBar Page which is 20 mins of clicking through prelim pages 
When I enter <foo> in the foo field 
Then the bar field is auto-completed with <bar> 

Examples: 
| foo | bar | 
| eggs | bacon | 
| toast | marmite | 
{quote} 

http://jbehave.org/reference/stable/parametrised-scenarios.html suggests that all the Given/When/Then steps are repeated. 

In the linked-to example, it is the only one given. What this change is about is the fact that only the When/Then steps need to be repeated. This is implicit because the Given line does not refer to any of the table params. 

If this needs to be explicit, it could be a team's choice to set this for the entire set of stories: 

bq. configuration.setPartialExamplesTablesExpansionPerScenario(true); 

Or it could be specified in the story itself: 

{quote} 
Given I'm on the FooBar Page which is 20 mins of clicking through prelim pages 
When I enter <foo> in the foo field 
Then the bar field is auto-completed with <bar> 

Examples(1-2): 
| foo | bar | 
| eggs | bacon | 
| toast | marmite | 
{quote}","feature containing"
"Examples Table parser can be improved to allow a comment as the first line I tried to format a examples table in the following way: 

|-----|-----| 
| one | two | 
|-----|-----| 
| 1 | 2 | 
|-----|-----| 

However, the examples table parser requires the table to start with the header (it cannot start with a comment). 
To allow it, I just did the following patch: https://github.com/ruifigueira/jbehave-core/commit/0580bb233f885fd8bc9520238a78007c97f9987e (just consider changes in ExamplesTable and ExamplesTableBehaviour).","feature containing"
"Examples not working with parametrized GivenStories Following code will make Examples section cease to work at all:

GivenStories:  /sample/procedure_login.story#{id2:global}
Given Logged in
When Go transfers
When Enter amount <amount>
Examples:
|amount|
|1|

While this one would work:

GivenStories:  /sample/procedure_login.story
Given Logged in
When Go transfers
When Enter amount <amount>
Examples:
|amount|
|1|

Using version:
<jbehave.core.version>3.9.5</jbehave.core.version>  
<jbehave.web.version>3.6-beta-2</jbehave.web.version>  
<jbehave.site.version>3.1.1</jbehave.site.version>","non-feature containing"
"ExamplesTable and ExamplesTableFactory should be interfaces To be able to use different formats for the ExamplesTable the factory should be an interface. The ExamplesTable should also be an interface. This way examples could be stored in XLS or CSV files by providing different factories, ie in a story: 

Examples: 
lotsOfExamples.xls","feature containing"
"ExamplesTable doesn't preserve column order while replacing named parameters ExamplesTable doesn't preserve column order while replacing named parameters. This issue is caused by using {{HashMap}} at generation new data with replaced named parameters. {{LinkedHashMap}} should be used instead.","non-feature containing"
"ExamplesTable incorrectly parses files with windows line endings ExamplesTable uses ""\n"" as a separator when splitting the table into rows: 

private static final String ROW_SEPARATOR = ""\n""; 

private void parseByRows(...) { 
String[] rows = tableAsString.split(ROW_SEPARATOR); 

In a file with windows line endings, this leaves a trailing ""\r"" which is then interpreted as an extra blank column. 

Suggested fix is to use the regex ""\\r\\n|\\r|\\n"" to split.","non-feature containing"
"ExamplesTable is not parsed properly when inlined separators are used If ExamplesTable specifies inlined separators and doesn't contain default header separator:
{code}
{ignorableSeparator=!--,headerSeparator=!,valueSeparator=!,commentSeparator=#}\n
!header 1!
!value 1 !
{code}
parsing fails with error like
{code}
org.jbehave.core.io.StoryResourceNotFound: Story path '{ignorableSeparator=!--,headerSeparator=!,valueSeparator=!,commentSeparator=#}
!header 1!!value 1 !' not found by class loader sun.misc.Launcher$AppClassLoader@66d3c617
	at org.jbehave.core.io.LoadFromClasspath.resourceAsStream(LoadFromClasspath.java:80)
	at org.jbehave.core.io.LoadFromClasspath.loadResourceAsText(LoadFromClasspath.java:65)
	at org.jbehave.core.model.ExamplesTableFactory.createExamplesTable(ExamplesTableFactory.java:83)
	at ...
{code}

The root cause is a wrong detection of ExamplesTable: https://github.com/jbehave/jbehave-core/blob/master/jbehave-core/src/main/java/org/jbehave/core/model/ExamplesTableFactory.java#L90
{code:java}
protected boolean isTable(String input) {
        return input.contains(keywords.examplesTableHeaderSeparator());
}
{code}
it doesn't take into account possible custom separators","non-feature containing"
"ExamplesTableFactory should load resources from classpath by default Resources in classpath are much more common than URL resources, so it is more convenient to have LoadFromClasspath as the default ResourceLoader.","feature containing"
"ExamplesTableFactory should use configured ResourceLoader Please, take a look at ExamplesTableFactory constructors:
https://github.com/jbehave/jbehave-core/blob/master/jbehave-core/src/main/java/org/jbehave/core/model/ExamplesTableFactory.java, some of them define default resource loaders
{code}new LoadFromClasspath(){code}

If user defines own resource loader for stories, default resource loader in ExamplesTableFactory  could be unexpected behavior.","non-feature containing"
"ExamplesTableProperties should provide default values for separators Instantiation of ExamplesTableProperties should ensure values for separators are always set.","feature containing"
"Exclude SCM patterns from ScenarioClassNameFinder Automatically exclude .svn and other SCM directories from the directory scan.","feature containing"
"Excluded (filtered-out) scenarios are reported as pending as well Excluded (filtered-out) scenarios are reported as pending as well. 

Set metadata on scenario and set metafilter so the scenario is ignored. It will be reported as pending too. 

this bug has been probably introduced by JBEHAVE-471. The problem is caused by {{org.jbehave.core.reporters.PostStoryStatisticsCollector.afterScenario()}} as the method does not differ if no steps has ben executed because scenario is not implemented/pending or because scenario was excluded.","non-feature containing"
"Excluded scenarios should not be included into ScenarioSuccessful count Excluded scenarios should not be included into ScenarioSuccessful count. Let's say we have story with 5 scenarios and metafilter will exclude 3 of them. This story will be reported then with 5 Total Scenarios, 5 Successful Scenarios and 3 Excluded.","non-feature containing"
"Excludes can raise a NPE if value is empty in POM file JBehave Maven goals support the property ""excludes"". 

See: http://jbehave.org/reference/stable/maven-goals.html 

If ""excludes"" is used in the POM file and if it is empty, then a NPE occurs in AbstractScanner.java:327 

This class is called from: org.jbehave.core.io.StoryFinder.scan(StoryFinder.java:183) 

JBehave could be easier to configure concerning ""excludes"" if this would allow empty value. That would mean, that nothing is excluded if the value is empty. No need to cause a NPE because of this. 

I did not verify it, but I think a NPE is also raised when ""includes"" are empty. It would be better if no NPE is thrown. If the value is empty it can be interpreted as nothing is included or everything is included, whatever makes sense to you as a default.","feature containing"
"ExecutorService instance not shutdown() at the end of stories. only shutdown for ones not injected in","non-feature containing"
"ExecutorService not shutdown if doIgnoreFailureInView is set to false h4. Overview: 

The executor service in Embedder.java is not shutdown() if doIgnoreFailureInView is set to true. This leads to a thread leak. 

h4. Technical: 
See the finally block in Embedder.java runStoriesAsPaths(). 
The shutdownExecutorService() is called only if generateReportsView() runs successfully without throwing an exception. However if doIgnoreFailureInView is set to false (which is by default) then generateReportsView() throws a RunningStoriesFailed RuntimeException.","non-feature containing"
"Expectation needs to be able to specify exactly() for times() Currently, when you specify a number of times(N) for an expectation it is matched N times, after which it defaults to the fallbackBehaviour. There should be a way that you can specify ""exactly()"", in this case the Expectation continues to match, but the verify will fail if the number of invocations is wrong. I suspect that this is the desired behaviour for never(), currently never() just means that the Expectation is never matched. So.... why is there no ExpectationBehaviour?","feature containing"
"Expose story and scenario elements as Meta On the back of JBEHAVE-625, it can be useful to expose story and scenario elements (only top-level ones and excluding the user-defined meta properties) as Meta, which can then be used for filtering or matching. 

This can be done as a decorator method on the Story and Scenario model classes, e.g. 

{code} 
Meta storyMeta = story.asMeta(""story_""); 
Meta scenarioMeta = scenario.asMeta(""scenario_""); 
{code} 

where the prefix can be used to provide a namespace to avoid conflicts with user-defined meta properties, but can also be set to an empty string.","feature containing"
"Expose the stepsType inside StepCandidate The StepCandidate class does not expose the actual Class type for the implementing class type. In order for a caller to find this out, it must instantiate the step using getStepsInstance() and then call getClass(). 

This creates a problem when integrating with the jbehave-junit-runner as described in this issue: https://github.com/codecentric/jbehave-junit-runner/issues/29. 

That issue cannot be resolved unless the caller can ask for the class type without instantiating it. Code showing an example of this problem is attached below.","feature containing"
"Extract CandidateSteps interface Extract CandidateSteps interface from Steps class so to allow composition over inheritance.","feature containing"
"F3 / ctrl-MouseClick through to class file matching Story component (Felix) (Worked by Felix, not Liz)

Felix has a really nifty tool which allows you to put the mouse on a line of story text, press F3 and it takes you to the class file matching that text.

He promises a ctrl-mouse-click some time.","feature containing"
"FIT adapter - If I have existing FIT fixtures I would like to be able to use them from the story runner. In this case, JBehave would give me the structure of expressing requirements as GWT, but I would be able to easily wrap my current FIT test suite in JBehave stories.
- In some cases, a FIT table fixture may be the most appropriate way to express the semantics of a given/when/then- I want to be able to choose to use this where appropriate.","feature containing"
"Failing Scenarios are Reported as Successfull We noticed that methods annotated with @AfterScenario(uponOutcome=FAILURE) were not being triggered properly after a scenario failed. Upon further inspection, we see that the Failure is reported by the failing step. It is then ignored by the ""After"" methods, which report success. The following scenario is run (although it should be skipped). The report at the bottom correctly states that the story failed. 

Sample Output from one of the Trader Examples: 

Running story org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story 

(org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story) 
Before Story ... 
Scenario: A scenario with failed step 
Before Scenario ... 
Given I do nothing 
Then I fail (FAILED) 
(junit.framework.AssertionFailedError: I failed!) 
After Any Scenario ... 
After Successful Scenario ... 

Scenario: A scenario that is not executed because if followed a failed scenario 
Before Scenario ... 
Given I do nothing 
After Any Scenario ... 
After Successful Scenario ... 

... Browser has been put to rest 


After Story ... 

Failed to run story org/jbehave/examples/trader/stories/skip_scenarios_after_failure.story 
junit.framework.AssertionFailedError: I failed!","non-feature containing"
"Failing steps could be assigned a unique failure-context that could to a) name screenshots, and b) be used in HTML reports This affects 'core' and 'web' 

Say an element is not found in a webpage, and WebDriver throws whatever exception it needs, presuming that fails a step, then JBehave could set a failure-context (lets say that a GUID). 

Later, when the FailingScreenShotThing picks up the fact that a step failed, it could use the failure-context in the name of the screen-shot jpeg. 

Later, in the rendering of the reports, the HTML one at least could link to the jpeg. 

Maybe instead of GUID, this could be the Object Identity of the StepResult or Failed instance.","feature containing"
"FailingUponPendingStep is not called if step is marked as Pending because of parameter matching failure For the following step description:

    @Given(""a $Status license has wrong ID"")
    @Alias(""license has wrong ID"")
    public void foo(@Named(""Status"") Status s) {


When called by @Alias mapping
JBehave marks the step as pending and ignores  FailingUponPendingStep strategy.

The reason why JBehave marks step as pending is because it fails to map parameters:
org.jbehave.core.steps.StepCreator$ParameterNotFound: Parameter not found for position '0' amongst '[]'
	at org.jbehave.core.steps.StepCreator.matchedParameter(StepCreator.java:396)
	at org.jbehave.core.steps.StepCreator.parameterForPosition(StepCreator.java:342)
	at org.jbehave.core.steps.StepCreator.parameterValuesForStep(StepCreator.java:298)
	at org.jbehave.core.steps.StepCreator.access$1000(StepCreator.java:38)
	at org.jbehave.core.steps.StepCreator$ParametrisedStep.parametriseStep(StepCreator.java:646)
	at org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:596)
	at org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)
	at org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)
	at org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)
	at org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)
	at org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)
	at org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)
	at org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)
	at org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)
	at org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)
	at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)
	at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)


Version tests: 4.0.5

","non-feature containing"
"FailingUponPendingStep strategy not honoured The only time the story fails is if the final example parameterised scenario fails. I'll try and work on a test case/patch...","non-feature containing"
"FailingUponPendingSteps only works for normal steps, it does not do as it suggests for composite steps Whereas as mismatching (regex) step text causes PENDING (as expected), then subsequent job failure for regular given, when or then steps, this the case for composite steps. E.g. the following ... 

{noformat} 
@Given (""This matches just fine"") 
@Composite(steps = [""This matches nothing"", ""Perhaps this matches, perhaps it does not""]) 
public void unimportantMethodName() { } 
{noformat} 

... does not cause ultimate build failure. 

Moreover, the step executer continues to the next step rather than marks that as NOT PERFORMED as expected. Perhaps the two are related.","non-feature containing"
"FailingUponPendingSteps strategy not honoured When I run a story, JBehave exits without waiting for the story results. 

The same stories work perfectly in version 3.9.3.","non-feature containing"
"Failure to execute all scenarios within a story. Given a story with 2 scenarios, the 2nd of which has GivenStores, if the first scenario fails, the second scenario will not execute fully, execution will finish when it's first GivenStory finishes.","non-feature containing"
"Failure while running JBehave's behaviour tests on itself Failure in the JBehave behaviour tests (cleanly checked out):

.........F................................
Time: 0.34s

Failures:

1) com.thoughtworks.jbehave.extensions.story.domain.ScenarioUsingMiniMock shouldPassItselfAndComponentsToVisitorInCorrectSequence [com.thoughtworks.jbehave.extensions.story.domain.ScenarioUsingMiniMockBehaviour]:
VerificationException: Unexpected call to visit (Expected 1 calls): 
at com.thoughtworks.jbehave.core.Verify.fail(Verify.java:124)
at com.thoughtworks.jbehave.core.Verify.that(Verify.java:88)
at com.thoughtworks.jbehave.core.minimock.Expectation.invoke(Expectation.java:53)
at com.thoughtworks.jbehave.core.minimock.MockObject$ExpectationHandler.invoke(MockObject.java:42)
at $Proxy1.visit(Unknown Source)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at com.thoughtworks.jbehave.core.minimock.MockObject$1.invoke(MockObject.java:104)
at com.thoughtworks.jbehave.core.minimock.$Proxy0.visit(Unknown Source)
at com.thoughtworks.jbehave.core.visitor.CompositeVisitable.accept(CompositeVisitable.java:28)
at com.thoughtworks.jbehave.extensions.story.domain.ScenarioUsingMiniMock.accept(ScenarioUsingMiniMock.java:64)
at com.thoughtworks.jbehave.extensions.story.domain.ScenarioUsingMiniMockBehaviour.shouldPassItselfAndComponentsToVisitorInCorrectSequence(ScenarioUsingMiniMockBehaviour.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at com.thoughtworks.jbehave.core.invoker.InvokeMethodWithSetUpAndTearDown.invoke(InvokeMethodWithSetUpAndTearDown.java:43)
at com.thoughtworks.jbehave.core.invoker.InvokeMethodWithSetUpAndTearDown.invoke(InvokeMethodWithSetUpAndTearDown.java:28)
at com.thoughtworks.jbehave.core.behaviour.BehaviourMethodVerifier.visit(BehaviourMethodVerifier.java:38)
at com.thoughtworks.jbehave.core.behaviour.BehaviourMethod.accept(BehaviourMethod.java:38)
at com.thoughtworks.jbehave.core.behaviour.BehaviourClass.visitBehaviourMethods(BehaviourClass.java:45)
at com.thoughtworks.jbehave.core.behaviour.BehaviourClass.accept(BehaviourClass.java:35)
at com.thoughtworks.jbehave.core.behaviour.BehaviourClass.visitBehaviourClasses(BehaviourClass.java:64)
at com.thoughtworks.jbehave.core.behaviour.BehaviourClass.accept(BehaviourClass.java:32)
at com.thoughtworks.jbehave.core.Run.main(Run.java:29)

Total: 42. Failures: 1, Exceptions: 0.","non-feature containing"
"Failures at BeforeStories is not being transmited to junit viewer Given that I'm running a test using a embedder AnnotatedPathRunner using Eclipse IDE 
And that I set ignoreFailureInStories to false 
When failures occurs on method tagged by @BeforeStories 
The Console shows that a failure have occurred 
And the JUnit viewer is showing a wrong green result","non-feature containing"
"Failures in @BeforeStories and @AfterStories steps cause NPE @BeforeStories and @AfterStories steps are not tied to any specific story. 

The StoryRunner reporter requires to be set to a conventional story path name, e.g. ""beforeStories"" and ""afterStories"" so the output of the failure messages can be captured and does not cause a NPE.","non-feature containing"
"Failures in view do not cause build to fail Even when configured to not ignore failures in view, running embeddables does not fail when failing stories occur. 

Currently, it only uses flag for ignoring failure in stories.","non-feature containing"
"File paths need to be normalised to use '/' File contents display and viewing fails on Windows because paths use '\' for path separator.
Normalising paths to use '/' in place of '\' will make behaviour cross-platform.","non-feature containing"
"File upload failures in web runner should be more informative Failures to upload files in web runner should be more informative, e.g. the cause of the failure should be shown.

One common failure cause is that the use tries to upload an archive whose unzipped directory structure already exists on the filesystem. Some OS do not allow overwrite by default and the upload action will be shown as failed even though the archive has been uploaded (but not unzipped).","feature containing"
"FileNotFoundException storyDurations.props When generating reports on a maven build without any stories (stories.include=none), I get a FileNotFoundException with storyDurations.props. 

[INFO] Generating reports view to 'd:\workspaces\git\cassini\acceptance\acceptance-view-common\target\jbehave' using formats '[stats, console, html]' and view properties '{ 
ws.ftl, reports=ftl/jbehave-reports-with-totals.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, decorated=ftl/jbehave-report-decorated.ftl, maps=ftl/jbehave-maps.ft 
java.io.FileNotFoundException: d:\workspaces\git\cassini\acceptance\acceptance-view-common\target\jbehave\storyDurations.props (Le fichier sp�cifi� est introuvable) 

If I change my version back to 3.9.2 (changing NOTHING else) then I do not get this exception. It seems if the storyDuration isn't found it's not a problem and it shouldn't display a stack trace.","non-feature containing"
"Filter out tests at the scenario level only The filtering by metafilter is applied twice: once to filter out stories and once to filter out scenarios. 

Given the following situation: 

- A scenario is marked +Smoke 
- The containing story is not tagged in any way 
- A test run is executed using meta filter ""+Smoke"" 

In this case, the scenario would not be run as the story is filtered out before the meta information of the scenario has a change to be evaluated. 

Stories should not be ignored when they don't match a positive meta filter like ""+Smoke"" as their scenarios might match that meta filter. 


-- 
My thoughts: 

I think filtering by meta could only be applied to scenarios. Each scenario could inherit the meta of the containing story and be evaluated as such. Filtering out stories right away is not all that useful.","feature containing"
"Find Steps page Use JBehave Core's StepFinder to allow a simple textarea to cut & paste a textual step and to find the 
matching step patterns and (optionally) show the corresponding methods in the steps instance. 

It should also show the list of steps instances configured in the application amongst which the steps are searched. 

If no textual step is provided, all patterns available should be shown.","feature containing"
"Find stories when running from jar with dependencies Hello ! 

I'm using a ETSY sample based project to run my JBehave stories with Selenium. 

I created a JFrame based user interface to have a standalone runnable for people who run JBehave + Selenium tests. 

My stories files are stored as following ""project/src/main/resources/stories/*.story"" 

To find the story files when running from Maven or Eclipse debug this line works fine : 

new StoryFinder().findPaths(codeLocationFromClass(this.getClass()).getFile(), asList(""**/*.story""), null).toArray(new String[0]); 

But when running from the JAR file that does not work : for ""codeLocationFromClass(this.getClass()).getFile()"" I get : ""/C:/Documents%20and%20Settings/lbp0527/Bureau/project/build/project-1.0-SNAPSHOT-jar-with-dependencies.jar!"" 

The JAR file contains at its root the ""stories"" folder with inside all my *.story files but I can't find a good way to retrieve this list from my UI. 

Do someone knows a way to find story files within the built JAR ? 

Maybe this is some ""off topic"" for the Jira, please tell me if and how to find my answer. 

Thanks !","feature containing"
"Finding Steps documentation has a typo 'reportMatchingStepocs' A block of code in the [Finding Steps documentation|http://jbehave.org/reference/stable/finding-steps.html] has a typo. 

It reads 
{code:java}
embedder.reportMatchingStepocs(""Given a step that I'm looking to match"")
{code}

Instead of 
{code:java}
embedder.reportMatchingStepdocs(""Given a step that I'm looking to match"")
{code}","non-feature containing"
"Finnish language support Finnish language translations for keywords. Pull request: 
https://github.com/jbehave/jbehave-core/pull/43","feature containing"
"Firefox window not closing (by default) when failure occurs Steps to reproduce for Etsy: 

1) Corrupt CartContents.goovy (line 24) like so aim at an xpath like so: 

findElement(By.xpath(""//a[@rel = 'removeeeeeeeeeee']"")).click() 

2) Run the build. 

3) Note that there is a Firefox window open at the end of the run. This did not happen before the 3.4-beta-1 (core) and 3.3.1 (web) releases :(","non-feature containing"
"Fix broken JBehave Core Example The build fails with errors: https://travis-ci.org/valfirst/jbehave-core/builds/274073010.

Errors:
# The error is caused by invalid initialization of {{ExamplesTableProperties}}:
{code}
java.lang.NullPointerException
	at java.lang.String.startsWith(String.java:1405)
	at java.lang.String.startsWith(String.java:1434)
	at org.jbehave.core.model.TableTransformers$FromLandscape.ignoreRow(TableTransformers.java:90)
	at org.jbehave.core.model.TableTransformers$FromLandscape.transform(TableTransformers.java:62)
	at org.jbehave.core.model.TableTransformers.transform(TableTransformers.java:43)
	at org.jbehave.examples.core.steps.TableSteps.thenTheTransformedTableIs(TableSteps.java:38)
	(reflection-invoke)
	at org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)
	at org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)
{code}
# The error is caused by race condition in {{TraderSteps}} when multiple threads change value of shared variable (the issue reproduces from time to time):
#- {code}
java.lang.AssertionError: 
Expected: ""ON""
     but: was ""OFF""
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at org.jbehave.examples.core.steps.TraderSteps.theAlertStatusIsCurrently(TraderSteps.java:182)
	(reflection-invoke)
	at org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)
	at org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)
{code}
#- {code}
java.lang.AssertionError: 
Expected: ""OFF""
     but: was ""ON""
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
	at org.jbehave.examples.core.steps.TraderSteps.theAlertStatusIs(TraderSteps.java:176)
	(reflection-invoke)
	at org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)
	at org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)
{code}","non-feature containing"
"Fix rendering of newlines in ExamplesTable as parameter in HTML When outputting example tables as parameters in HTML the newlines between rows are ignored.","feature containing"
"Fix typos in archetypes and removed unused file my_step.xml for non-Spring archetype I replaced the word on all files (archetypes and two examples) and removed the spring file on the archetypes except spring.","feature containing"
"Flash support A WebDriverProvider implementation that supports invocation of SWF object methods via Javascript.","feature containing"
"Format.XML_TEMPLATE using Hamcrest matchers produces invalid xml tags When using OutcomesTable with Hamcrest matchers, if you have an outcome error, the generated value from the matcher for Long, Short, Float and Object is surrounded with '<' and '>'. 

It gives an xml tag that looks like this: 
<value><1234L></value> 

which is invalid xml. 
Hudson/Jenkins plugin then fail to produce a report for xUnit. 

I think the reporter should escape these characters.","non-feature containing"
"GUI Interface for jBehave runner in IntelliJ plug-in Unscheduling","feature containing"
"Generate StepDoc from annotated methods of CandidateSteps instance Given a CandidateSteps instance, we want generate the list of annotated candidate steps available to scenario writers,
with list of steps patterns and aliases.","feature containing"
"Generate Steps silently fails. 1) Create Project from archetype 
2) Take standard sample.story and right click select JBehave->Generate steps, select finish and nothing happens.","non-feature containing"
"Generic Parameter Converter for Enum classes. It would be nice if you could generically convert Enum fields automatically without having to create ad-hoc @AsParameterConverters for each.","feature containing"
"Get rid of trailing whitespaces after the table ExamplesTable.java
public ExamplesTable(String tableAsString) {
this.tableAsString = tableAsString.trim();
parse();
}","feature containing"
"Gherkin tags parsed incorrectly The following Gherkin text is incorrectly transformed by GherkinStoryParser (see attached JUnit test):

{noformat}
@featureTag
Feature: A short, tagged feature
  Narrative: a narrative is a must

  Background: something that has to be performed before each scenario
{noformat}

The result of the transformation is
{noformat}
A short, tagged feature

Narrative: a narrative is a mustMeta: @featureTag 
Lifecycle:something that has to be performed before each scenario
Before:
{noformat}

As a result, the ""featureTag"" Meta tag has a value starting with ""Lifecycle:something ..."". It should be empty string.

","non-feature containing"
"GherkinStoryParser has a sysout The class GherkinStoryParser has near the end a System.out.println. This may confuse the user because the stories may be printed twice on the console","feature containing"
"Given Stories Overriding the Scenario Title in Context View The org.jbehave.web.selenium.LocalFrameContextView.LocalFrameContextView() class used for local frame doesn't show the story scenario when GivenStories tag is used. It shows the scenario name of GivenStories rather than the scenario which is currently in execution.","non-feature containing"
"GivenScenario needs finishing Please get the GivenScenario finished.

I think it might be a good idea to visit the outcome expectations from the scenario too. That way, don't need to add unrelated expectations into the new scenario's outcomes.","non-feature containing"
"GivenScenarios As someone writing scenarios, I want to be able to use another scenario as a Given, so that I don't have to write big long scenarios.

Not sure how this would work - at the moment we can get around it on the code side. I'm guessing we're looking for something like

Given the glider

where the_glider is a scenario file.

(What would we do if the_glider had two scenarios in it? Throw an exception, maybe?)","feature containing"
"GivenScenarios comma-separated paths should support newlines between paths In parsing 

GivenScenarios <CSV of paths> 

CSV should support newlines between paths, e.g. 

GivenScenarios /very/long/path, 
/another/long/path 

Currently, the presence of newlines will prevent the parsing of the CSV.","feature containing"
"GivenScenarios runs called scenario as PENDING not the implemented version We are trying to use GivenScenarios but when the scenario containing it runs it generate the PENDING steps not the actual steps. When the called scenario is run independently it runs fine. My step implementation are simply printlns. This is just running in Eclipse with jbehave-core-2.5.1. Any idea what we could be missing here. As a workaround I can embed the steps method for the first scenario before the steps method of the second then it works as expected. 
Please see attached source in bdd1.jar 
tx 
Warren 

1. user_logs_in_successfully 
Given I am not logged in 
When I log in as Liz with a password abc 
Then I should see a message, ""Welcome, Liz!"" 

output: 
runBeforeScenario 
logged out 
login for user: csm with password: abc 
checkMessage: Welcome, Liz! 
runThisAfterScenarioAny 
runThisAfterScenarioSuccess 

2. user_places_an_order 
Scenario: User logs in and places an order 
GivenScenarios: com/test/examples/scenarios/user_logs_in_successfully.scenario 
When I place an order 
Then I should see a message, ""Order placed"" 

output: 
(com/test/examples/scenarios/user_logs_in_successfully.scenario) 
Scenario: 
Given I am not logged in (PENDING) 
When I log in as service with a password service (PENDING) 
Then I should see a message, ""Welcome, CSM!"" (NOT PERFORMED) 

placing Order 
checkMessage: Order placed 

3. Run user_places_an_order with workaround (embedded steps method). Interesting is that the before and after steps of the first steps class is run in the second as well. 

output: 
runBeforeScenario 
logged out 
login for user: Liz with password: abc 
checkMessage: Welcome, Liz! 
runThisAfterScenarioAny 
runThisAfterScenarioSuccess 
runBeforeScenario 
placing Order 
checkMessage: Order placed 
runThisAfterScenarioAny 
runThisAfterScenarioSuccess","non-feature containing"
"GivenStories and Examples keywords should only be parsed after newline In line with the requirement of steps keywords appear at beginning of line, the GivenStories and Examples keywords should be treated similarly. 

This would allow the corresponding portions of the scenario to be commented out by !-- on demand.","feature containing"
"GivenStories are not working for me in jbehave-web-selenium [3.6-beta-2] Hi 

I am new in Jbehave and trying to setup automation framework using Jbehave[3.9.3] and selenium[2.42.2]. I am using Ivy to execute the test. I could able to do that successfully. 

GivenStories are not working for me. I am sorry if this is not the right place to ask this question. After trying for couple days and looking into the comments that GivenStories works for everyone. Just sharing my example with experts if they help me out and point me what I am doing wrong. 

1.) Ivy.xml - Code 
<dependencies> 
<!-- TODO: The jbehave-web-selenium module uses an older selenium that doesn't support modern firefox. 
Trying to stay on the latest selenium. --> 
<!-- The beta below supports the new version of selenium. We'll see how buggy it is. --> 
<dependency org=""org.jbehave.web"" name=""jbehave-web-selenium"" rev=""3.6-beta-2""/> 
<dependency org=""org.jbehave"" name=""jbehave"" rev=""3.9.3""/> 
<dependency org=""org.jbehave"" name=""jbehave-core"" rev=""3.9.3""> 
<artifact name=""jbehave-core"" type=""jar""/> 
</dependency> 
<dependency org=""org.jbehave"" name=""jbehave-ant"" rev=""3.9.3""/> 
<dependency org=""org.jbehave"" name=""jbehave-distribution"" rev=""3.9.3""/> 
<dependency org=""org.seleniumhq.selenium"" name=""selenium-java"" rev=""2.42.2""/> 
<dependency org=""org.seleniumhq.selenium"" name=""selenium-support"" rev=""2.42.2""/> 
</dependencies> 

2.) BaseTest.java is attached which extends JUnitStories 

3.) RunAsStories.java is attached which extends BaseTest.java ---- This the entry point for me to execute 

4.) Stories file are attached 
- Common.story (This will be executed before some of the scenarios) 
- Page1.story (This will use GivenStories to call Common.Story. This is present in a different package. I tried keeping them in same package.) 
- Page2.story(This will use GivenStories to call Common.Story for some of the scenarios) 

5.)What is happening here 
- It open the browser and execute steps in Common.Story. Then closes the browsers 
- It open another browser and try to execute Page1.Story and it do not execute Common.Story even path specified for GivenStories. It starts from and try to execute ""first page of application appears"" 

6.)Can someone please help in this and let me know if I need to updage any thing here.","non-feature containing"
"GivenStories at story level are reported to StoryReporter chaotically in multi-threaded  mode *Steps to reproduce:*
1. Create some stories like:
{code:java}
GivenStories: precondition.story
Scenario: Scenario
When I do something
{code}
2. Run them using multiple threads

*Actual result:* ""givenStory"" flag is passed to methods beforeStory and afterStory in some random order (multiple threads change and share one value)

*Expected result:* multiple threads should use local  ""givenStory"" flag","non-feature containing"
"GivenStories path list should be more tollerant with spaces We should allow paths to be padded with spaces.","feature containing"
"GivenStories should be able to be loaded relative to the story depending on them. It should be possible to have given stories included relative to the story including them, as this makes it easier to re-organise the stories without changing the paths.","feature containing"
"Groovy bindings for steps Adriano Bonat (ThoughtWorker) suggests that invoking step methods written in Groovy would be cool.","feature containing"
"HTML Reports do not display the values in the correct fields of the table For example tables, if a field does not contain any values, the succeeding field value will take place of this field in the stories.*.html file

eg:

|Field1|Field2|Field3|
|a||c|

in the html file you will find c displayed against Field2.
","non-feature containing"
"HTML contains double escaped characters when outputting table text from input story file When writing stories that contain example tables with M��ori macrons, there seems to be some double escaping of these characters happening in the output HTML files. 

For Example, given the following scenario: 
Scenario: M��ori Macron support 
Given some condition 
When I do something 
Then I expect to see a macron in the HTML table below: 
|Example-Title| 
|M��ori macron should show on this line| 
ample-Title 
I would expect the characters to render as seen in the text file, however I see the following in the HTML output: 

Then I expect to see a macron in the HTML table below: 
Ex 
M&amp;#257;ori macron should show on this line 

&#257; is the escape character for this particular macron, and the HTML source for this line shows the double escape: 
<tr><td>M&amp;#257;ori macron should show on this line</td></tr>","non-feature containing"
"HTML decoration for parameter empty string puts a span between each char in the line When using a story step that has an empty parameter, when decoration the html output of the story, a span is put between each character, probably since a substring match or regex matches everywhere. This makes the text look kind of odd since the spacing between the char changes. If the parameter is empty, the coloring could just be skipped. 

{quote} 
When user enters """" and clicks link 
Then result """" shown 
{quote}","non-feature containing"
"HTML decoration marks parameters twice Following up on JBEHAVE-656, this works now correctly for empty strings. 
However all other parameters are enclosed in a span twice if an example table is used (this was present in 3.5.4 as well). 

Apparently the parameters are marked once using the name enclosed in angle brackets and then once more by string replace, by the function that is used for normal steps as well. 

This doesn't cause any change is the HTML display, so it's not a very big problem (the xml looks odd however since the parameter tag appears twice).","non-feature containing"
"HTML report numbers could be more tabular guice.stories.simple_guice_example Scenarios: 1 (Failed: 0) Steps: 3 (Successful: 3; Pending: 0; Not Performed: 0; Failed: 0; Ignorable: 0) 
i18n.stories.fr_trader_is_alerted_of_status Scenarios: 1 (Failed: 0) Steps: 13 (Successful: 0; Pending: 4; Not Performed: 9; Failed: 0; Ignorable: 0) 
i18n.stories.it_trader_is_alerted_of_status Scenarios: 2 (Failed: 0) Steps: 15 (Successful: 7; Pending: 8; Not Performed: 0; Failed: 0; Ignorable: 0) 

The output formats as a string. There are some numbers is parens. These should really be <td>numbers</td> 

There should also be totals at the bottom of the set, and column headings at the top :)","feature containing"
"HTML-based scenario reporting HTML-based scenario reporting should:

- generate reporter events in HTML format
- aggregate and render reports in HTML - as well as other formats - in a collective view for story results
- allow styling via CSS of all rendered reports","feature containing"
"HTML/XML reports should handle better missing or null values from the examples table Currently NPE can occur in escaping HTML/XML chars when the value for a given header is not found or when a converter returns a null value. A check should be added before escaping them.","feature containing"
"Have a way to register a setup and a teardown that will be invoked before and after EACH method You probably would not need this in an ideal enviornment. But in the case where you want to make sure that everyone on the team is cleaning up after themselves (deleting the test data from database, cleaning up the files, etc), it is something that can save days of work.

An enhanced version would be to allow dependency injection into each behaviour class so that it won't have to use singleton on certain case (like database connection).

Yes I konw you are not supposed to do database connection tests, but in order to fix the existing tests a feature like this would come in very handy.","feature containing"
"Honor order in @UsingSteps instances Although step class dependencies are not recommended, in some cases it is useful (e.g. when managing a per-scenario transactional Spring context). 
Currently, the order of steps in @UsingSteps instances are hashed twice,once in AnnotationFinder and once more in InstanceStepsFactory, making the order of e.g. @BeforeScenario unreliable. 
Find attached new versions of these classes, based off of 3.7.5 source, where the order is retained.","feature containing"
"Hudson Plugin to import JBehave reports As a developer I want to see a Hudson build test result showing failed scenarios so that I can see what broke my build 

As a developer I want scenarios containing pending steps and no failed steps to appear in build test result not as a fail or pass so that I can see what is missing from a story 

As a Manager I want to see individual scenarios in the build graph so that I can monitor progress of stories 

As a Manager I want to see Hudson build trend graph containing failed, pending and successful scenarios so that I can monitor the stability of my build","feature containing"
"Hudson can't issue -Dmeta.filter directives because of the spaces and quotes in the values side of the name/value thing passed to -D -Dmeta.filter=""+suite foo"" is going to cause Hudson to try to redo the quotes like so 

""-Dmeta.filter=+suite foo"" 

The fix will be add underscore as a space replacement for meta-filters. 

-Dmeta.filter=+suite_foo","non-feature containing"
"I can't use enums as World keys. Can't think of any reason why we're only allowing Strings as World keys. This is madness, I tell you! Madness!","feature containing"
"I would like to add priority to my scenarios I would like to be able to add priority to my textual scenarios and should be available to the StoryReporter. This priority is used to tell in what order the different scenarios should be implemented. 

E.g. if (in StoryReporter) 
public void beforeScenario(String title); 

is changed to 
public void beforeScenario(String title, int priority); 

The priority can be used to create a visual report (e.g. in HTML). 

The priority can also be used to raise warnings if a high priority scenario is pending, while there is activity on scenarios with less priority.","feature containing"
"I18N Keywords As proposed by Emerson Macedo on dev list, it would be useful to have keywords for different languages pre-configured. 

An I18nKeywords that reads keywords from I18n resource bundles for different Locales should do the trick.

We can provide i18n bundles for the most common locales in our core jar (very small overhead in terms of size!), and users can add or override them as needed.

The localisation should be done when instantiating the Keywords class so it only happens once.","feature containing"
"I18n keywords resource bundle not found by Ant task ResourceBundle needs to use the caller's classloader when used with Ant.","non-feature containing"
"IDE hangs with attatched story file When we try to edit something in attached story file IDE gets stuck and need to restart. To reproduce open this file and scroll down to EOF then try to put a space. then ide is getting stuck and cannot do anything. Need to kill the process by task manager. I used both intelijidea (2016.1.1) and eclipse (mars) and can reproduced the same issue.

I have set of files like this, only difference i can see in these files are no of lines (300-800 lines). Is there any limitation that jbehave can handled.

I've installed below jbehave plugins on my IDE
Jbehave Plugin 1.0.1
jbehave support 1.52
jbehave support extention 1.02

I spend number of days to resolve this issue ,but couldn't find a solution for this. Im stuck on my project works.

Can you guys please advice me on this



","non-feature containing"
"IDE_CONSOLE no longer any different to IDE (w.r.t console output) I've noticed recently a problem with IDE_CONSOLE. It (or more particularly the IdeOnlyConsoleOutput class) is being ignored. If you do a Maven run from the command line, for a project that uses a normal on JB3.1/JUnit tool chain you can see it. 

Put in a strategic throw, or loop/sys-out for the current threads stack trace, you don't have the prerequisite packages in the stack (I've checked), yet it still dump to console :-( 

Maybe there is a System.out somewhere that is ignore this configuration choice.","non-feature containing"
"IOUtils test fails when not in UTF-8 After checkouting sources, a test is failing, 'cause my system isn't setup in UTF-8 by default. 
I know it said to setup maven to add a system property about that, but i haven't been successfull with that manipulation... 
However, i'm able to get it compiling with pretty simple modification of the code, which is something i have to do everywhere i have to compile jbehave sources. 

https://github.com/JSlain/jbehave-core.git 
Last commit","non-feature containing"
"If a test times out, the generated xml in the jbehave directory is not complete for the test that timed out. We use Jenkins to run our JBehave tests at night. Every now and then we have a test that times out and the generation of the error report at the end fails because it runs into a XML parse issue on a XML file in the generated ""target/jbehave"" directory. The XML is missing the closing </story> tag. 

Workaround is to increase the timeout but it would be nice if this was properly handled.","non-feature containing"
"If story is 'excluded' because of meta-filtering, we need a way to totally exclude it such that there are not monitor or StoryReporter calls for it. I'm opening browsers in Saucelabs, the closing them a few seconds later. Pointlessly.","feature containing"
"Ignorable steps before And steps should not be marked as pending Pending step generator should not mark as pending and generate methods for ignorable steps before And steps.","non-feature containing"
"Ignore !-- comments in story meta Jenkins barfs when finding !-- during the XSLT transform (xUnit plugin). 

Can we cater for comments amongst meta-tags? 
Either parse and handle them, or fail to parse explicitly :)","feature containing"
"Ignore full-stop/period|punctation at end of step I experienced some trouble especially with {{@}}{{Then}} steps ending with punctation characters: 
{noformat} 
Given I do this 
When I do that 
Then I expect to see the message Hello World. 
{noformat} 
will require a step definition like 
{code:java} 
@Then(""I expect to see the message $message."") 
{code} 
Mind that you must not forget the period at the end of the step definition... otherwise message will be {{Hello World.}} rathen than {{Hello World}}. 

This is a quite common mistake and in addition it prevents the step definition to be reusable here: 

{noformat} 
Given I do this 
When I do that 
Then I expect to see the message Hello World 
And the world echoes Hello John. 
{noformat} 

where it is required to have an Alias just because of the period. Or, as alternative, the assertions inside need to deal with the period at the end. 

It would be nice if JBehave could ignore this period although it is not quite clear to me how to handle scenarios where the period needs to be parsed. And of course such a change might break existing tests.","feature containing"
"Implement a RegexTransformer to enable exporting jBehave syntax to Gherkin syntax There are a number of productivity tools available such as picklesdoc (https://github.com/picklesdoc) that process gherkin files. It would be great if there was a jBehave transformer that supported converting jBehave syntax to Gherkin syntax.","feature containing"
"Implementation of Parameter Converters Hello JBehave's team,

I noticed the examples you have on the documentation for parameter converters (http://jbehave.org/reference/stable/parameter-converters.html) and also your code (https://github.com/jbehave/jbehave-core/blob/master/jbehave-core/src/main/java/org/jbehave/core/steps/ParameterConverters.java) implement the _accept_ method of the ParameterConverter interface in a way that doesn't seem to make too much sense, like this

{code:java}
return Trader.class.isAssignableFrom((Class<?>) type);
{code}

instead of doing it like this

{code:java}
return ((Class<?>) type).isAssignableFrom(Trader.class);
{code}

The reason for implementing it as the latter in the example would be to be able to receive a supertype of Trader (such as Object?) in a step method, in the other hand, I don't see a reason for implementing it as it is right now (if you want exact matching, then you are better off using the equals method?), but I might be missing something, so please correct me if I'm wrong.

Thanks,
Rodrigo","non-feature containing"
"Improve DE keywords https://github.com/jbehave/jbehave-core/pull/40","feature containing"
"Improve JUnit integration As a developer using jBehave running in JUnit in Eclipse, I would like to easily determine 
1. how many individual scenarios have passed or failed, and 
2. which steps failures occur in 

What springs to mind, is to wire each scenario up as separate JUnit TestCase (rather than the single 'testScenario()' method). Doing so, I would easily be able to drill down to the individually failing scenarios more easily. Regarding finding out which step failed, short of writing a fully-fledged plug-in, this would be a simple matter of retaining the actual failure exception and setting this in JUnit's test result - the failed step should be in the stack trace reported by JUnit.","feature containing"
"Improve JUnit reporter Consider merging https://github.com/BrandonJohnGrenier/jbehave-junit-reporter-3 into JBehave for proper step-by-step JUnit reporting. As some of the code is to avoid issues with the built-in reporting, it can become much cleaner from within JBehave (e.g. the singleton can be eliminated). 

Attached the test base class for our product to use this runner/reporter.","feature containing"
"Improve SauceLabs settings interop. SauceLabs has a few timeout settings, that can be set per job. Allow for them to be overridable, defaulted, and settable by system property","feature containing"
"Improve SpringStepsFactory to allow delegating the CandidateStep creation to other factories Change the SpringStepsFactory so it doesn't create CandidateSteps but rather return bean instances. That way I can have a different way of instanciating CandidateSteps.

{code}
addSteps(new ParameterConverterStepsFactory().createCandidateSteps( new SpringStepsFactory(context).createStepsInstances() ));
{code}

And the simplified SpringStepsFactory :

{code}
public class SpringStepsFactory {
private final ListableBeanFactory parent;

public SpringStepsFactory(ListableBeanFactory parent) { 
this.parent = parent;
}

public Object[] createStepsInstances() {
List<Object> steps = new ArrayList<Object>();
for (String name : parent.getBeanDefinitionNames()) {
Object bean = parent.getBean(name);
if (containsScenarioAnnotations(bean.getClass())) {
steps.add(bean);
}
}
return steps.toArray(new Object[steps.size()]);
}

private boolean containsScenarioAnnotations(Class<?> componentClass) {
for (Method method : componentClass.getMethods()) {
for (Annotation annotation : method.getAnnotations()) {
if (annotation.annotationType().getName().startsWith(""org.jbehave.scenario.annotations"")) {
return true;
}
}
}
return false;
}
}
{code}","feature containing"
"Improve default report The current report suffers from lack of information. 
i'm working on a bit project and most of the people prefer the junit report provided on jenkins ci. 

i think that the default report should have more information regrading: 
* step failure - add full stacktrace and as much information as possible 
* step duration 
* filtering for the report table (ex. show only failed / success) 
* save run information in order to see results over time 

cheers","feature containing"
"Improve documentation Posted by Gerard Meszaros on wiki:

There seems to be a large gap between the Two-Minute Tutorial and the detailed technical documentation (JavaDoc). This gap created a lot of frustration. Each of the following issues may, for all we know, have good solutions in the product. We just couldn't find them! The Two-Minute Tutorial seemed to leave out a bunch of important stuff. We couldn't get the example to actually compile and run until we discovered this. The installation information was non-existant/incomlete. There was no mention of the need to have hamcrest-all-1.2.jar installed so we couldn't code the equalTo in the ensureThat. The use of Static Imports to allow these methods be referenced without class names on front should be highlighted in the example.

The link to the examples (which we are encouraged to review) is broken.

When running scenarios with Pending steps, the tests still run green. The documentation does say this can be changed but we were unsuccessful at doing it. It seems to be rather involved and/or voodoo. It would be good to have a very clear description of 1) Why it considers Pending steps as green and 2) how to cause the pending steps to fail the tests in various environments (e.g. Eclipse/Java)","feature containing"
"Improve documentation on scenario and step configuration Provide snippets of configuration code to show how to change only selected elements from the defaults, e.g. how to configure the use of a specific StepsMonitor.","feature containing"
"Improve documentation on use of WebDriverProvider to prevent error 'WebDriver has not been found for this thread.' When using the webDriver in the pages classes as follows: 

public class Home extends AbstractPage { 

private final WebDriver driver; 

public Home(WebDriverProvider driverProvider) { 
super(driverProvider); 
this.driver = driverProvider.get(); 
} 

public void open() { 
get(""http://localhost:8080/bignibou/""); 
manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS); 
} 

public void enterDetails(String email, String status, String password) { 
driver.findElement(By.name(""member.email"")).sendKeys(email); 
driver.findElement(By.name(""member.status"")).sendKeys(status); 
driver.findElement(By.name(""member.password"")).sendKeys(password); 
} 

public void doRegister() { 
driver.findElement(By.name(""member.doRegister"")).submit(); 
} 

One get the following error: 
WebDriver has not been found for this thread. 
Please verify you are using the correct WebDriverProvider, with the appropriate credentials if using remote access, e.g. to SauceLabs: -DSAUCE_USERNAME=xxxxxx -DSAUCE_ACCESS_KEY=xxx-xxxx-xxxx-xxxx-xxx 

Instead one has to use the webDriverProvider as follows: 

public class Home extends AbstractPage { 

private WebDriverProvider driverProvider; 

public Home(WebDriverProvider driverProvider) { 
super(driverProvider); 
this.driverProvider = driverProvider; 
} 

public void doRegister() { 
driverProvider.get().findElement(By.name(""member.doRegister"")).submit(); 
} 

} 

Maybe the error message could be more explicit.","feature containing"
"Improve embedder monitoring Add monitoring of embedder controls 
Add story timeouts","feature containing"
"Improve extensibility of Configuration and Embedder elements In order to extend Embedder and Configuration classes and avoid race-condition in OSGi when using the set methods I want improve the way elements are configured and initialised: 

- Raising the attributes' visibility from private to protected. 
- Using lazy-initialisation of attributes.","feature containing"
"Improve extensibility of core elements Some classes as Embedder, Configuration and AnnotationBuilder have its attribute's default values being initialized in its declaration statement. To complicate a bit more those attributes are private. 

To be able to extend those classes and be able to set default values properly we need to remove that initialization from the attribute declaration and put in some method with a protected visibility.","feature containing"
"Improve javadocs While JBehave code is quite self-explanatory, a more exhaustive javadoc would be beneficial to the end-user - especially of the non-default features and configuration options.","feature containing"
"Improve regex-based scenario parsing Provide an alternative implementation of scenario parser that does not suffer from regex stack overflow issue:

http://jbehave.org/documentation/known-issues/regex-stack-overflow/","feature containing"
"Improve reporting of failure PrintStreamStoryReporter and subclasses have the reportErrors flag that prints the failure stack trace. This is adequate but a rather crude approach. 

In most use cases, we need to report the failure more meaningfully, be it an outcome failure or a system failure. 

Issues to improve: 
- show failure message after step and stack trace after entire scenario (only if failure trace flag is set) 
- provide an outcomes table that allows to verify multiple outcomes and report them upon failure 

Also ensure that the failure trace reporting is easily configurable via the StoryReporterBuilder.","feature containing"
"Improve responsiveness of editor for large projects by not recreating the same StepMatcher for every candidate step on every keystroke _Improve responsiveness of editor for large projects by not recreating the same StepMatcher for every candidate step on every keystroke_ 

Projects that have significant number of steps will experience lag on every keystroke when using the current jBehave-eclipse plugin across any OS... 

Reported as per Github issues 
- [#6 https://github.com/jbehave/jbehave-eclipse/issues/6|https://github.com/jbehave/jbehave-eclipse/issues/6] 

The following pull request attempts to resolve some of the issues regarding performance and responsiveness of the jBehave-eclipse plugin: 
- [Improved responsiveness of editor for large projects #12|https://github.com/jbehave/jbehave-eclipse/pull/12]","feature containing"
"Improve robustness around job timeout on SauceLabs SauceLabs communicates timeout via a specific string - ""Job on Sauce is already complete"". Trap for that and indicate that the WebDriver instance is no longer usable, for that Story.","feature containing"
"Improve state management of StoryRunner We need to improve the state management of the StoryRunner. 

Currently after every set of steps run the state is reset and the scenario @Before/@After steps are run separately from the normal steps, causing wierd behaviours when there are failure in the @Before steps but not in the normal steps. Examples of such a behaviour are the trader failing_before_after.story and failing_before_stories.story. 

A better and more intuitive state management should be in place, keeping state in the run context. The state should be reset by default before each scenario (to ensure backward compat) but will be shared between the @Before/@After steps and the normal steps. 

We should also have the option to not reset it before each scenario to allow for failures in the @BeforeStory/Stories steps to propagate to the scenario steps in the same run context. 

Once a failing state in a given run context, the steps that follow will not be performed, as customary with normal steps.","feature containing"
"Improve table usage on steps in parameterized scenarios The NamedParameters from the Examples section of a parameterized scenario can be use to replace values in a table used in a step in that scenario. The current replacement scheme is to replace the value whereever it appears in the table data. This improvement is to offer an option to replace table data where the value matches the named parameter as the whole value. It is also to change the algorithm on all replacement to process the named parameters in a sorted order (largest to smallest in length) so as to avoid replacement where one parameeter name is part of another parameter name. 

The default behaviour is to do full replacement (as is currently the case). This behaviour can be overridden via ParameterControls (a replaceWholeWordValue property) or on a per-table basis (with {replaceWholeWordValue=true|false}). 

An updated parameterised_table.story is attached with expected behaviour.","feature containing"
"Improve tabular story report Feedback from colleagues' first use of tabular story report introduced in 3.0.2 (JBEHAVE-339). 

- The layout is too dispersive, too much white space and table runs away out of page 
- Unnecessary (or misleading) repetitions of column headers, such as ""Successful"" and ""Failed"" 
- More difficult to spot failures, only numbers are colour-coded 

Suggestions include: 

- Have a top-level multi-column row with two headers, ""Scenarios"" and ""Steps"". 
- Use logos (with hovering text) for ""Successful"", ""Failed"", ""Pending"" etc ... 
- Colour-code in red the story name in case of failure","feature containing"
"Improve terminology, the distinction between a story and a scenario I think it's unfortunate that a scenario file contains several other scenarios. This leads to some ambiguities in the system, such as the meaning of a {{GivenScenario}}, and also in communication (is a scenario a collection or a scenario?).

It also is somewhat a violation of the literal meaning of scenario - which by definition contains other stories or scenes, not scenarios.

I think while the framework is still relatively young it would be worth addressing this design choice. Perhaps a scenario should contain stories, or something like that.

The main concern is removing the ambiguity about what a scenario is.","feature containing"
"Improved test in PrintStreamOutputBehaviour I tried to improve the tests in PrintStreamOutputBehaviour similar to the changes I did in the Template output to check if xml encoding is done correctly in all cases (it does) and if the file is actually valid xml (it wasn't, not even the expected string was). 
To make this work I added an xmlunit check and changed the order of the created story to match the way a real story is created, in this case the xml is valid. 
This didn't require any change to actual code, only the test code was wrong, so this is a minor issue.","feature containing"
"In AfterStories log string ""Reports view generated with X stories"" showes wrong number Problem in this place:
org.jbehave.core.reporters.TemplateableViewGenerator:169
{code}
        for (Report report : reports.getReports()){
            *Map<String, Integer> stats = report.getStats();*
            if (stats.containsKey(""scenarios"")){
                if (stats.get(""scenarios"") > 0)
                storyCount++;
            }
        }
{code}
""Stats"" map contains not only reports' files, but additionally already calculated ""Total"" reports stats - which will count as one more story.
*Example:*
Reports view generated with 4 stories (of which 0 pending) containing 4 scenarios (of which 0 pending) - when actually was run only 3 stories with 4 scenarios (so, it should be ""3 stories"" in log string)","non-feature containing"
"In an example table, values are not trimmed if there is a custom separator We've found this bug while executing a jbehave story with an example table written like this :

{{Given an example table :
{valueSeparator=!}
label  | code  |
LABEL1 ! CODE1 !}}

During the execution, this step was runned with success, but at the end we had this error message :
Exception in thread ""main"" org.jbehave.core.embedder.Embedder$RunningStoriesFailed: Failures in running stories: ...

It seems that an exception is thrown somewhere, but the process resumes.
We've found several workarounds :
- delete the space before CODE1
- delete the space after CODE1
- not define a custom separator, and use the default separator | everywhere

So, the bug is :
If we use a custom separator and if the values of the example have spaces at both sides, an error is thrown.

We use the jbehave core 4.0.5.
Regards","non-feature containing"
"Incorrect formatting in JBehave report if fixture uses both string and table parameters fixture code: 
{code} 
@Then(""keyword <variable1> keyword <table1>"") 
@Alias(""keyword $variable1 keyword $table1"") 
public void checkSomething(String variable1, ExamplesTable table1) throws SQLException { 

{code} 

usage: 
And keywords variable1 is in 
|field|value| 
|IS_VALID|Y| 
|IS_VALID|N|","non-feature containing"
"Incorrect uploaded filename on Windows IE Uploading an archive with IE fails because the uploaded file name contains the full path. This is due to the different behaviour to commons-upload FileItem, depending on the browser.

The uploaded file name needs to be stripped of any path prefix, if present.","non-feature containing"
"Indented scenarios in stories was possible in JB2 but after upgrade failed in JB3 A client had indented JB scenarios (tabs and/or spaces) in the .scenario files. When upgraded to JB3, and everything else was working for the renamed .story files. the scenarios were not being executed. It seems regex made no match. 

We had breakpoints in place so we could see the BeforeScenario being invoked, but none of the steps. When we removed the left-whitespace, it worked.","non-feature containing"
"Initialisation errors in RemoteWebDriverProvider are not being reported Errors in initialize() method in RemoteWebDriverProvider (e.g. due to auth failure in SauceWebDriverProvider) are not being reported. 

Added RemoteWebDriverProviderTest to verify behaviour (the missing URL should lead to a RunningStoriesFailed exception in the Embedder).","non-feature containing"
"Inline Comments Can you please support inline comments like in the example below? 

{noformat} 
Examples: 
|accountNr |city | 
|123 !-- private customer|Zuerich| 
|312 |Zuerich| 
|999 !-- company customer|Basel | 
{noformat} 

The above example does not work, neither with !-- nor with |--. 

As it seems, comments can only start on a new line in JBehave. So a workaround would be: 

{noformat} 
Examples: 
|accountNr |city | 
!-- private customer 
|123 |Zuerich| 
|312 |Zuerich| 
!-- company customer 
|999 |Basel | 
{noformat} 

But this is not so readable as the inline comments since it destroys the layout of the example table quite a bit.","feature containing"
"Installing new m2e plugin does not like goal ""unpack-view-resources"" Installed latest M2E plugin 
Eclipse complains that Eclipse plugin not covered by lifecycle configuration","non-feature containing"
"Integrate JIRA We are using JIRA to organise our stories. It would be nice to integrate the story files directly from JIRA, so you don't have to write them twice. At this moment we write the acceptance criteria for a story in JIRA and we copy them into our projects. 

My idea is to 
-extend the LoadFromUrl class to add the functionality to log into a page (like for google docs). Something like LoadFromSecuredUrl, LoadFromJira 
-then write a parser that extracts the fields from a story in JIRA as plain text like you propose it here http://jbehave.org/reference/stable/locating-stories.html","feature containing"
"Integrate UsingJMock and UsingJMockWithCGLIB The Mock inner class in UsingJMock should be clever enough to create a regular Mock when it is mocking an interface, and a CGLIB mock otherwise.","feature containing"
"Is there a way to sync scenarios with classes? If a scenario gets reworded, the wording of the Steps class also needs to change. Is there a way to get Eclipse to pick up these changes as refactorings?

(I'm new to JBehave so this may be a rubbish idea, perhaps BAs never decide to reword their scenarios or this feature is already available or scenario writers don't use Eclipse?)","feature containing"
"JBehave + TestNG + Selenium Grid - generate jbehave index.html report file for each seperate selenium node when using single jbehave story file I have a JBehave project in which need to integrate with TestNG and Selenium grid which using [this|https://github.com/ULei/jbehave-testng-example/blob/master/src/test/java/testng/CoreStoriesUsingTestNG.java], [this|https://github.com/garyfoxes/UsingMavenWithTestNG/blob/28b292c56116ffa0b1daebce3022ec9627ce70d9/src/main/java/testngexamples/seleniumgrid/TestSuiteBase.java] and [this|https://github.com/michelleXIE2014/testNG-jbehave-test-example/blob/master/src/test/java/com/lazycode/TraderEmbedderTest.java] code in github *(sorry since i cant past the entire code so only showing the reference)* i have done the JBehave + TestNG + Selenium Grid.

But my problem is when using **single Story** file to execute in different Selenium node the jbehave report `index.html` file is shown for any one node only. I want to have separate report for each node in a single or more jbehave report index.html file. I should not run with two story files and all, how can i show separate report for each and every Selenium node in a single jbehave report html file.

I know the jbehave use [freemarker|http://freemarker.org/] for their report generation but i have no clue on how to override this and show report for each selenium nodes. I have also raised this in [stackoverflow |http://stackoverflow.com/questions/38481164/jbehave-testng-selenium-grid-generate-jbehave-index-html-report-file-for-e]in which there is no response for it.

It will be nice if there is feature in JBehave for this. Like an java code for to optimism that will take the name of the node and present it in the report.

Thanks in Advance. ","feature containing"
"JBehave Eclipse Editor says ""No step is matching"" when using a constant inside annotations With JBehave it is possible to annotate a step method with @Given and @When at the same time, for example: 

{code} 
@Given(""I take a screenshot"") 
@When(""I take a screenshot"") 
public void screenshot() {} 
{code} 

I tried not to repat myself and changed that to: 

{code} 
private static final SCREENSHOT_STEP_NAME = ""I take a screenshot""; 
@Given(SCREENSHOT_STEP_NAME) 
@When(SCREENSHOT_STEP_NAME) 
public void screenshot() {} 
{code} 

That compiles and works when executing the story using the step. The step method is really called. 

But in the JBehave Eclipse Editor it says that no step is matching the step name ""I take a screenshot"". It has to do with using the constant for the annotations. So I think it is a bug in the JBehave Eclipse editor.","non-feature containing"
"JBehave Eclipse Plugin Probably besed very closely on the JUnit plugin code, if not a simple extension to the JUnit plugin itself.

You can use the existing JUnit plugin with the JUnit Adapter, but it only gives you basic functionality. You can't double-click on a responsibility name in the plugin and navigate to the actual method, for instance.

Also, searching for behaviour classes would be nice (anything ending in Behaviour or containing a public void should...() method?)","feature containing"
"JBehave Eclipse plugin If I will be included in JBehave Contributors team I'll be happy to transfer copyright to the JBehave project. You can find the initial plugin sources in the attached zip. I will answer to any question about plugin development specificatons.","feature containing"
"JBehave Maven Plugin As a JBehave user, I would like to be able to type mvn jbehave and verify all the behaviours of the system.","feature containing"
"JBehave Reports import to Hudson xUnit Error: Conversion error Error to convert - A file not found Hi, 

i know about some similar tasks JBEHAVE-394, but i think this does not resolve my problem. 
In my test project(see Attachment) i added a story(ist_produkt_in_bestand.story) with GivenStories. The report xml for that story is currupted because two end-tags are missing. </scenario></story> 

That failure takes place with version 3.1.2, 3.2-beta 1..5, 3.2 and 3.3-beta-1. 

I think it is realy possible that i doing something wrong with the configuration ""src/test/java...jbehave.config.TraderEmbedderRunner"". If it is, tell me pleace how i change it. 

My Hudson config: 
jbehave-hudson-plugin 3.2-beta-5 
xUnit 1.13 

Thanks for your help. 

Best regards 

Sven Sch_fer","non-feature containing"
"JBehave batch execution crashes when there is a NullPointerException or RuntimeException JBehave Version 3.10

+Test suite background.+
Currently we have around 800 scenarios written in about 100+ story files. Most of the scenarios may have about 15 - 30 steps. 
Maven used as the build tool.

+Issue+
We throw all exceptions occur in steps definitions to the JBehave runner where runner can identify the test as a failure or an error

When there are multiple RuntimeException or NullPointerException throwing from scenarios when executing a story JBehave will crashes and stops executing the batch. All the stories after that will not execute.

Note:
Please find he attached log file containing different logs we observe this issue in different situations.
","non-feature containing"
"JBehave configuration classes I'm starting to find that there are multiple different things I might want to do, and the dependency injection mechanism isn't really working as well as I'd like for this.

It would be nice to produce a configuration that's easy to set up, and use that for everything. We could then have different ways of configuring JBehave, eg: environment-driven, settable, null (so you have to specify everything yourself), etc.

Going to have a play with this, driving it using the ""broken scenarios only"".

BTW, every time I get a ""broken scenario"" or ""error output"" story, I'm driving it by actually breaking a story. You won't see these broken stories checked into the build, but it's easy enough to replicate yourself!","feature containing"
"JBehave i18n: Some german translations in keyword_de.properties are WRONG! I'm using jbehave (for the first time) in a project for a german customer and I would, of course, like to write the user stories in german. 

I had a short look into the keyword_de.properties and would like to make some corrections/suggestions: 

1. Scenario=Scenario: 
---should be--- 
Scenario=Szenario: 

Spelled with 'z' instead of 'c'. 

2 GivenStories=VorgegebeneGeschichten\: 
---should be--- 
GivenStories=GegebeneStories\: 

Instead of ""vorgegebene"" simply use ""gegebene"". And I would not even translate 
Story/Stories because it's already a ""germanized"" term, meaning it has been 
accepted in the german language especially within the ""business community"". 

3. Given=Vorgegeben 
---should be--- 
Given=Gegeben 

As mentioned before. 

4. When=Wann 
---should be--- 
When=Wenn 

""Wann"" is simply WRONG in this case. Even though a correct translation of 
the word ""when"", but only if it is related to ""time""/ a temporal term. You 
have to use the conditional ""Wenn"" which you could also translate into english 
as ""if"": http://german.about.com/library/blconfus_wann.htm 

5. NotPerformed=NICHT ERF\u00DCLLT 
---should be--- 
NotPerformed=NICHT AUSGEF\u00DCHRT 

""To perform"" is ""ausf_hren"" in german, hence ""NICHT AUSGEF_HRT"" would be 
the correct translation. ""Erf_llen/erf_llt"" actually means ""fullfilled"" 

That's it! 

I attached the corrected properties file. Would be nice if you or someone 
from the jbehave team could include it in the next release if possible. 

I know this will break compatibility with older releases, but since one 
of the main keywords (""when"") is translated completely wrong I can hardly 
imagine that someone used the German translations yet. Actually it should even be 
replaced/patched in older releases.","non-feature containing"
"JMockListener should only check mocks if the method succeeded If something goes wrong in a method that uses mocks, the actual error is being suppressed and a spurious mock-related message is being returned instead. This makes it difficult to debug methods with mocks.","non-feature containing"
"JUnit test per example in parametrized tests Using AnnotatedPathRunner/SpringAnnotatedPathRunner allow to get JUnit test per story, which is much more friendly than one big ""run"" test. It would useful to get reporting per example in parametrized tests (something looking like in JUnitParams on attached screenshot). 

Btw, JUnitParams which allows to create parametrized tests in JUnit uses custom runner which source code could be useful to review JUnit related part of the implementation of that feature.","feature containing"
"JUnit tests will not run in Win7 JUnit tests failes due to that the read from file results in CarriageReturn as well as Linefeed on each read line.","non-feature containing"
"JUnit to Behaviour test converter To facilitate the conversion of integration/acceptance tests that have been written as JUnit tests it would be useful to have converter.","feature containing"
"JUnitReportingRunner - NullPointerException, if 2 Scenarios are in 1 Story I have a sample story: _Suchen&Ändern Inlandzahlung Varianten.story (see Attachment 1).
This sample story includes different stories as given stories, containing 2 scenarios (for example: Suchen&Ändern ES-CHF-Bank.story.
If I start the JUnitStories, the execution fails after the first scenario in the first story with a NullPointerException. What can I do to work around this bug?

Thanks for looking at this issue.
Thomas

Code of the JUnitStories:

@RunWith({color:red}JUnitReportingRunner.class{color})
public class EFinanceStories extends JUnitStories {
...
        JUnitReportingRunner.recommandedControls(configuredEmbedder());
...

Stack Trace of the failure:

Szenario: Finden und ändern eine Standardzahlung ES-CHF-Bank ab Detailanzeige
Beispiele:
Gegeben Login mit Benutzer Standarduser
Wenn ich die Standard Inlandzahlung für ES-CHF-Bank erfasse
Und ich die Details der Inlandzahlung für ES-CHF-Bank anzeige
Und ich dann die Zahlung zu folgenden Werten ändere:
| Betrag   |
| <Betrag> |
Dann erhalte ich die Meldung geändert
!-- Erfasste Transaktion wieder löschen
Wenn ich die Inlandzahlung für ES-CHF-Bank mit folgenden Werten lösche:
| Betrag von | Betrag bis |
| <Betrag>   | <Betrag>   |
Dann erhalte ich die Meldung Auftrag wurde gelöscht

|Betrag|
|101.50|
Failed to run story E-Finance/stories/Inlandzahlung/Einzelauftrag/Suchen&Ändern/_Suchen&Ändern Inlandzahlung Varianten.story
java.lang.NullPointerException
	at de.codecentric.jbehave.junit.monitoring.JUnitScenarioReporter.example(JUnitScenarioReporter.java:240)
	at org.jbehave.core.reporters.DelegatingStoryReporter.example(DelegatingStoryReporter.java:91)
	at org.jbehave.core.reporters.ConcurrentStoryReporter.example(ConcurrentStoryReporter.java:209)
	at org.jbehave.core.embedder.StoryRunner.runScenariosParametrisedByExamples(StoryRunner.java:429)
	at org.jbehave.core.embedder.StoryRunner.runCancellable(StoryRunner.java:303)
	at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:220)
	at org.jbehave.core.embedder.StoryRunner.runGivenStories(StoryRunner.java:389)
	at org.jbehave.core.embedder.StoryRunner.runCancellable(StoryRunner.java:272)
	at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:220)
	at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:181)
	at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:262)
	at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:229)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.execute(MoreExecutors.java:299)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at com.google.common.util.concurrent.AbstractListeningExecutorService.submit(AbstractListeningExecutorService.java:58)
	at com.google.common.util.concurrent.AbstractListeningExecutorService.submit(AbstractListeningExecutorService.java:37)
	at org.jbehave.core.embedder.StoryManager.submit(StoryManager.java:226)
	at org.jbehave.core.embedder.StoryManager.runningStory(StoryManager.java:137)
	at org.jbehave.core.embedder.StoryManager.filterRunning(StoryManager.java:121)
	at org.jbehave.core.embedder.StoryManager.runningStoriesAsPaths(StoryManager.java:106)
	at org.jbehave.core.embedder.StoryManager.runStories(StoryManager.java:83)
	at org.jbehave.core.embedder.Embedder.runStoriesAsPaths(Embedder.java:203)
	at de.codecentric.jbehave.junit.monitoring.JUnitReportingRunner$1.evaluate(JUnitReportingRunner.java:88)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)

(AfterStories)","non-feature containing"
"Jbehave maven plugin failed to run multiple JunitStories I have a test project with two TestRunner classes extending JunitStories and the maven build failed with java.util.concurrent.RejectedExecutionException. 

After some investigation, I found the AbstractEmbedderMojo ""RunStoriesAsEmbeddables"" creates the an ""EmBedder"" and then loads both of the two test runners in this Embedder. Then, the Embedder calls ""runAsEmbeddables()"" and in this method it calls ""embeddable.useEmbedder(this);"" It means both of the TestRunners are ran by this embedder. As a result, when the ""Embedder"" completes the first test runnber's ""runStoriesAsPaths()"" method, it calls ""shutdownExecutorService();"" and then the second test runner got the RejectedExecutionException when running stoies.","non-feature containing"
"Jbehave plugin for Eclips counts steps and not scenarios As analysts we would prefer that jbehave counts real test scenarios in Eclipse (unitils) and not all steps (wich are only part of a test case). 

Example in screenshot below. ""174 tests"" is then erronious. 

We use version <unitils.jbehave.version>1.0.1. 

If you need any furthur information let me know. 

Kind regards, 
Nicolas.","feature containing"
"Jenkins plugin - all scenarios duration is zero When using JBehave Jenkins plugin to publish test results, the duration column is always 0. this is a known xUnit issue that were solved in xunit plugin version 1.20 (current is 1.62). 
possible solution is to update the xUnit version (JBehave uses 1.9)","non-feature containing"
"Jenkins plugin broken, unmatched dependency Current available jenkins plugin has unmatched dependency. When installing it crashes with: 

WARNING: Failed to load org.jBehavePluginType$DescriptorImpl 

jbehave is then not available in product configuration for processing the output. 

I'm not only one with this problem. Here is a workaround which works great, modified jenkins package without the problematic code. 

http://stackoverflow.com/questions/26861855/jenkins-jbehave-plugin-installation-failed-classnotfoundexception-dtkit-testty","non-feature containing"
"Jenkins plugin cannot parse xml files with narrative tag If a story file contains {{<narrative>}} tag, then the generated xml report will look like the following: 
{code} 
<narrative keyword=""Narrative:""> 
<inOrderTo keyword=""In order to"">do something</inOrderTo> 
<asA keyword=""As a"">user</asA> 
<iWantTo keyword=""I want to"">be able to do something else</iWantTo> 
</narrative> 
<story path=""story1.story"" title=""It should do something""> 
... 
</story> 
{code} 
Jenkins plugin cannot parse files like this, log 
{code} 
INFO: [xUnit] - Converting '/path/to/jenkins/job/workspace/target/jbehave/story1.xml' . 
[Fatal Error] :6:2: The markup in the document following the root element must be well-formed. 
com.thalesgroup.hudson.plugins.xunit.exception.XUnitException: Conversion error Error to convert - A file not found 
{code} 
Line 6 points to the starting {{<story>}} tag, which comes after the closing {{</narrative>}} tag.","non-feature containing"
"Jenkins plugin fails to generate <testcase> nodes For a story like this

{noformat}
Issue Test1
Meta:
@author skundrik

Narrative:
Test narrative
					 
Scenario: Test scenario
Given report run at <timeStamp> using data source <dataSource> with thread pool size <threadPoolSize>
Then item count is <count>

Examples:
|timeStamp           |dataSource   |threadPoolSize|count|
|2015-06-06T00:30:00Z|DSource      |8             |1499 |
|2015-06-07T00:30:00Z|DSource      |8             |199  |
{noformat}

The JUnit 1.0 XML output does not contain any testcase nodes and effectively loses the results of the test.","non-feature containing"
"Jenkins snippet generator does not generate correct groovy script - can't use JBehave with pipelines I'm using Jenkins (2.17) and the JBehave-Jenkins plugin (4.1-SNAPSHOT, built from master) to set up a pipeline job for a series of JBehave tests. The results of these need to be aggregated in the pipeline script, but this doesn't appear to be supported - the snippet generator outputs the following:
{{step([$class: 'XUnitPublisher', testTimeMargin: '3000', thresholdMode: 1, thresholds: [[$class: 'FailedThreshold', failureNewThreshold: '', failureThreshold: '0', unstableNewThreshold: '', unstableThreshold: ''], [$class: 'SkippedThreshold', failureNewThreshold: '', failureThreshold: '', unstableNewThreshold: '', unstableThreshold: '0']], tools: [<object of type org.jbehave.jenkins.JBehavePluginType>]])
}}
The offending bit is the tool section, where there doesn't appear to be an object that matches the JBehavePluginType that can be used here.

This basically means I can't use JBehave in pipelines, which is a big problem. Can this be fixed?","non-feature containing"
"Keyword Synonyms cause failure to find And Steps in same class I started to use Keyword Synonyms to allow steps to be found like 'Given|GIVEN|given' etc. 
I used a custom keywords bundle (see attachments) which worked correctly and found my custom keywords as expected. 
However I cannot now find steps annotated like this : 

@Then(""I navigate to admin page"") 
@Given(""I am on the admin page and logged in"") 
public static void loggedIntoAdmin() { 
AdminPage.login(); 
} 
The JIRA text is : 
Given a given customer is selected 
And I am on the admin page and logged in 

Note : The Given step and the And Step are in the same class. 

This works fine if I do not use Synonyms on the Given step.","non-feature containing"
"Last of two subsequent AND-clauses with translated keywords is not performed I translated 'And' keyword to 'Ande' (actually I use russian word, but in order to simplify I will use plain latin letters). All other keywords remain the same. 

When I try to execute simple scenario with three THEN-clauses concatenated by AND: 

{noformat:nopanel=true} 
When something happened 
Then check first condition 
Ande check second condition 
Ande check third condition 
{noformat} 

Then last clause is not matched with corresponding step and marked as pending. Although corresponding step is present in code. *If I use english keyword 'And' all work fine*. 

I created sample project for reproducing bug: https://github.com/nartamonov/jbehave-i18n-bug","non-feature containing"
"Lazy instantiation of steps classes, only if candidate steps are matched As suggested by Paul, the eager instantiation of steps classes is unnecessary. Candidate steps can be matched using the steps type and the steps instances should be instantiated only if the candidate steps are matched.","feature containing"
"Lifecycle steps not aware of examples table data Because the Lifecycle object containing all the before/after steps runs as a separate thing, if any of those steps needs data from the examples table of each scenario, it will not be found 

Example 

Lifecycle: 
Before: 
Given that I am looged as <user> 

Scenario: test 

When I do something 
Then bleh 

Examples: 
|user|password| 
|userA|passwordA| 
|userB|passwordB| 

in this example the runner will not find a matching step because the method for the log in is expecting data, but because the step is in the lifecycle the examples table is not provided to it","non-feature containing"
"Lifecycle steps not run before/after each Example Scenario When you have a story with: 
* At least, two scenarios 
** 1st scenario is a ""normal"" scenario 
** 2nd scenario is a ""example"" scenario 
* The story has {{Lifecycle}} steps 

For the example scenario {{Lifecycle}} steps are not run before/after each scenario. 

Check attached example (use {{mvn test}} to run the example).","non-feature containing"
"Lifecycle steps: after upon outcome In JBehave it is possible to use lifecyle steps, which add steps before and after each scenario. 

{quote} 
Lifecycle: 
Before: 
Given I have a bank account 
And my balance is 100 
After: 
Then my balance is archived 
{quote} 

If a step of the scenario fails, then the after steps are not executed. 

This might be good in some situations, but in another situations it would be good that the after steps are executed even in case of a failure. For example one could do some cleanups there. 

Can you please improve this so that it can be specified upon which outcome type the after steps are called in the story?","feature containing"
"Lines starting ""Scenario: "" cannot be commented out. Devs often comment out all scenarios bar one, as they debug it. 

commenting out of steps - sure that works 
commenting out of the scenatio header - sadly its ignored","non-feature containing"
"LoadFromRelativeFile break on windows when using maven traversal When invoking LoadFromRelativeFile and passing in a traversal substitution stories are not found because the substitution is not applied. This is due to the difference in the StoryFilePath which forces path separators to be '/'. When the LoadFromRelativeFile code gets the absolute path of location file separators are converted to '\'. This keeps the locationPath.replace code from working 

Im invoking the code as.. 

public Configuration configuration() { 
return new MostUsefulConfiguration() // where to find the stories 
.useStoryLoader(new LoadFromRelativeFile(CodeLocations.codeLocationFromClass(getClass()), LoadFromRelativeFile.mavenModuleTestStoryFilePath(""src/test/resources/jbehave/""))) 
.useStoryReporterBuilder( 
new StoryReporterBuilder().withDefaultFormats() 
.withFormats(Format.CONSOLE, Format.TXT)); 


The code that breaks in LoadFromRelativeFile that break is 

String locationPath = new File(CodeLocations.getPathFromURL(location)).getAbsolutePath(); 
for (StoryFilePath traversal : traversals) { 
String filePath = locationPath.replace(traversal.toRemove, traversal.relativePath) + ""/"" + resourcePath; 


locationPath would have all '/' converted to '\' by getAbsolutePath on windows machines. 

Maybe the following line should be inserted after the definition of locationPath 

locationPath = locationPath.replace(""\\"",""/""); 

}","non-feature containing"
"LoadOdtFromClasspath missing from sources In my Company we are using CSV files with data tables to feed jbehave story files. We would like to have one file with the data rather than single CSV for single jbehave story file. 
I found in documentation org.jbehave.core.io.odf.LoadOdtFromClasspath functionality http://jbehave.org/reference/stable/locating-stories.html and I thought that it could solve our problems. 
However when I check my sources of jbehave (4.0-beta-3 core and 3.5.5 web) there is no class LoadOdtFromClasspath available. Would you please let me know why it is not in the sources? Would you send me some example of how to use loading from ODT file and what are the features? Would it help for having too many files for jbehave stories?","non-feature containing"
"LocalFrameContextView is succeptible to something like XSS (not a security issue though) the status display in org.jbehave.web.selenium.LocalFrameContextView is constructing a html string for the current step by concatenating the strings with html tags, this will not work if the step itself contains html tags or javascript fragments. 

This doesn't cause any real issues but it makes the current step fail, in essence this is an injection error (if this were in a web application, this would be sufficient for a xss bug). 

I noticed this when writing an example xss story for my project, for now I just commented out the offending steps, I will submit a patch when I get around to on the weekend.","non-feature containing"
"Localisation As proposed by Alexandre Martins, localisation of Narrative would be useful for use with non-english languages.
Eg, the narrative in portuguese would be:

Como um [papel]
Eu quero [fun?_o]
De forma que [benef_cio]

Both the story codegen and the renderer would need to support a Localiser component that know how to translate the keywords in the different locales.","feature containing"
"Localized Story in a german version shows different behavior than english version I tried to use jBehave stories with German locales (See text below and the attached example). 
But ""Und"" steps of the german story aren't fully recognized. 
It is working With just one ""Und""-step but not with an additional one. 

English version of the story works fine (even with two ""And"" based step candidates ). 

PS: By the way, jBehave offers an annotation "" <at> and"" in this example report, but there exists no "" <at> and"" 
annotation in jBehave. 
------------------------------------------------------------------------- 
------------------------------------------------- Step class -------------------------------------------- 
public class Kreditausfallversicherung { 

<at> Given(""sei eine Kreditausfallversicherung mit einer Laufzeit bis zum $enddate"") 
public void maturityDateOfCDS(String maturity) { 
System.out.println(""Given: maturityDateOfCDS "" + maturity); 
} 

<at> Given(""einer Ausfallpr\u00E4mie von $spread pro Jahr"") 
public void spreadAndPaymentFrequency(double spread) { 
System.out.println(""Given: spreadAndPaymentFrequency "" + spread); 
} 

<at> Given(""einer Konkursquote von $recoveryRate"") 
public void andEinerKonkursquoteVon40(double recoveryRate) { 
System.out.println(""Given: andEinerKonkursquoteVon40 "" + recoveryRate); 
} 

<at> When(""die Kreditausfallversicherung bewertet wird"") 
public void wennDieKreditausfallversicherungBewertetWird() { 
System.out.println(""When: wennDieKreditausfallversicherungBewertetWird ""); 
} 

<at> Then(""wird zum $presentDate der aktuelle Wert $presentValue EUR erwartet"") 
public void erwartet(String presentDate,double presentValue) { 
System.out.println(""Then: erwartet "" + presentDate + "" "" + presentValue); 
} 
} 
----------------------------------------------------------------------------------------------------------------- 


---------------------- snipp German Version -------------------- 

Erz�hlung: 
Um eine Kreditausfallversicherung 
Als H�ndler zu bewerten 
M�chte ich den aktuellen Wert berechnen 

!-- Vorher: 
!-- Gegeben sei folgende risikolose Zinskurve 
!-- |Tage|Zinssatz| 
!-- 
Szenario: Berechnung mit einer Konkursquote von 40% 
Given: maturityDateOfCDS 20.1.2009 
Gegeben sei eine Kreditausfallversicherung mit einer Laufzeit bis zum 20.1.2009 
Given: spreadAndPaymentFrequency 5.0 
Und einer Ausfallpr�mie von 0,05 pro Jahr 
Und einer Konkursquote von 40% (AUSSTEHEND) 
Wenn die Kreditausfallversicherung bewertet wird (NICHT AUSGEF�HRT) 
Dann wird zum 20.8.2008 der aktuelle Wert -8,347642935784341E-4 EUR erwartet (NICHT AUSGEF�HRT) 
<at> And(""einer Konkursquote von 40%"") 
<at> Pending 
public void andEinerKonkursquoteVon40() { 
// AUSSTEHEND 
} 

---------------------- snipp English Version -------------------- 
Narrative: 
In order to have the present value of a CDS 
As a trader 
I want to calculate it 
Scenario: Calculation with a recovery rate of 40% 
STEP: given maturityDateOfCDS 20.1.2009 
Given a CreditDefaultSwap with maturity date 20.1.2009 
STEP: given spreadPerYear 0.05 
And a spread of 0.05 per year 
STEP: given recoveryRate 40.0 
And a recovery rate of 40% 
STEP: when itsCalculated 
When its calculated 
STEP: then expectValueAtRiskdate 20.8.2008 
Then we expect at 20.8.2008 a present value of -8,347642935784341E-4 EUR","non-feature containing"
"Loose step matching, not based on StepType Hi, 

I've recently started working with jbehave, and I am noticing duplication when a step method can be more than one StepType, e.g.: 

{code} 
@Given(""the cart is empty"") 
@When(""the cart is empty"") 
public void cartIsEmpty() {} 
{code} 

An easy (?) workaround could be to support the following syntax 

{code} 
@Given(""the cart is empty"") 
@When 
public void cartIsEmpty() {} 
{code} 

i.e. in case a method has multiple StepType annotations, only one [value|http://jbehave.org/reference/stable/javadoc/core/org/jbehave/core/annotations/Given.html#value()] needs to be not empty. 

But I think there's a more elegant solution. 
The Cucumber Book says something interesting about this: 
{quote} 
Given, When, Then Are the Same. 
It doesn't actually matter which of the three methods you use to register a step definition, because Cucumber ignores the keyword when matching a step. Under the hood, all of the keyword methods are aliases for Cucumber:: RbDsl#register_rb_step_definition. The keywords are really just there for extra documentation to help you express the intent of each step or step definition. 
This means that, whether it was created with the method Given, When, or Then, a step definition will match any Gherkin step as long as the regular expression matches the main text of the step 
{quote} 

I like this concept. At the end of the day, a step is just a method that I may want to call at a certain point (as the m-th or the n-th step) in a scenario. 

Well, different story for given's vs. then's. 
Given my cart is empty != Then my cart is empty 
But, as the cucumber book suggests, then steps should be reworded to use ""should"" 
=> ""then my cart *should* be empty"" 

So what about going a little bit farther and defining a generic @Step annotation? 

{code} 
@Step(""the cart is empty"") 
public void cartIsEmpty() {} 
{code} 

There is a problem, though, as I think this would break JBEHAVE-196 (?). 
But then, as far as I understand, the ultimate solution would be to support regexes, wouldn't it? Which is another feature that would be a very-nice-to-have, I think. 

Thanks","feature containing"
"Make ClassLoader injectable in BehavioursLoader BehavioursLoader should allow an injectable ClassLoader","feature containing"
"Make Eclipse plugin version settable in command-line Make the build version a command-line param, eg -Dversion=1.0.x so we can build new versions easily.

ATM, version is sprinkled in 2-3 places. I noticed that you use an xslt to generate a site.xml with the given version.

It would be simpler to use Ant's property replacement of @version@ in all the relevant files and just have a version=x.y in the main build.properties","feature containing"
"Make ExamplesTableProperties API public Make ExamplesTableProperties API public as it can be used by transformers to perform manipulations with ExamplesTable in a proper way","feature containing"
"Make ParameterConverters to use builder-style paradigm and add DateConverter Refactor ParameterConverters to be added as builder 

new ParameterConverters().addConverter(new DateConverter(new SimpleDateFormat(""dd/MM/yyyy""))); 

Add DateConverter as default converter with injectable DateFormat.","feature containing"
"Make SauceLabsCrossReference extensible by subclasses To allow extensibility make the map of story to Sauce URLs protected in SauceLabsCrossReference","feature containing"
"Make column separator configurable in ExamplesTable When trying to read from external sources, like a wiki, some characters like ""|"" may be reserved and we need to allow for use of others. 

The parser should allow configuration of other column separators when parsing tables.","feature containing"
"Make default converter classes publicly accessible and allow configuration of number format Make the default converters in ParameterConverters public so they can be accessed and possibly overridden.

Make the number format in NumberListConverter configurable and defaulting to NumberFormat.getInstance().","feature containing"
"Make it easy to pick the output directory for the reports As part of my usage of JBehave I need to control where the reports are being written. Unless I missed an obvious API the code I currently use (see code below) is particularly verbose (=and not easy to figure out)=. I think it would be great is there was something on the MostUsefulConfiguration object (or other object) to let the user set the output folder or any other simpler way. 

.useStoryReporterBuilder( 
new StoryReporterBuilder() { 
protected org.jbehave.core.reporters.FilePrintStreamFactory filePrintStreamFactory(String storyPath) { 
return new FilePrintStreamFactory(new StoryLocation(codeLocation(), storyPath), fileConfiguration("""")) { 
public File outputDirectory() { 
return new File(""c:/dev/tmp/behave""); 
}; 
}; 
};","feature containing"
"Make mojos @requireDependencyResolution test The test resolution scope allows use of mojo in both test and compile scopes.","feature containing"
"Make parametrised name delimiters configurable Currently, parametrised names are conventionally delimited by angle brackets (< and >). The matching mechanism does not depend on them by the output step decoration that identifies and highlights parameter values in StepCreator does. 

The parameter name delimeters should be abstracted into a ParameterControls configuration element.","feature containing"
"Make story parser and renderer configurable The implementation classes of the story parser and renderer should be optionally be configurable and default to text-based parser and renderer.","feature containing"
"Mark start/end of all parameter values in step creation Mark parameter values with start and end tags in all steps, not just the ones whose value come from the examples tables. 

This allow the markup of the parameters in the reporting, e.g. to highlight with different color in HTML reports.","feature containing"
"MatchingStepMonitor should use delegating model The MatchingStepMonitor is used internally by the PerformableTree and should support the delegating model to honor other step monitor configured by the user.","non-feature containing"
"Maven 2 support Regardless of feelings about maven vs ant, there is a case for supporting both.

IMO maven 2 provides a declarative approach that simplifies readability of build system, 
especially for multicomponent systems.

Discussions on merits should be on the list. 
Here I'm attaching an initial spike patch that mavenises build for people to have a look at and get a feel.

Read README.txt to start off with - need to install cotta jar in the local repo (this is just a temporary step to get build
working - it can also be configured to be installed automatically or deployed to ibiblio).

The behaviours still fail to run because of the jbehave.core.util.BehavioursLoader does not provide injection of classloader.","feature containing"
"Maven JBehave plugin does not run text story files The patch fixes maven plugin and story runner bugs described in http://archive.jbehave.codehaus.org/dev/465151AA.6020700%40xait.no.
The patch also fix a bug when printing stories: when the story and scenario classes are anonymous, numbers are printed. With this patch the name of the story and the scenario(s) are printed.

1. Apply the patch at jbehave/trunk/ 
2. run ""ant build""
3. run ""mvn install""
4. run ""mvn integration-test"" at plugins/maven/src/it
5. verify that the maven build gives the same as the result further below.
6. remember to add the interface ""Named"" to Subversion. Feel free to place it somewhere else than org/jbehave/core/story/domain

***Maven results:
[INFO] Scanning for projects...
[INFO] Reactor build order:
[INFO] jBehave Maven Plugin Integration Test 1
[INFO] jBehave Maven Plugin Integration Test 2
[INFO] jBehave Maven Plugin Integration Test 3
[INFO] jBehave Maven Plugin Integration Test Reactor
[INFO] ----------------------------------------------------------------------------
[INFO] Building jBehave Maven Plugin Integration Test 1
[INFO] task-segment: [integration-test]
[INFO] ----------------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:compile]
[INFO] Compiling 5 source files to C:\work\svn_workspace\jbehaveTrunkClean\plugins\maven\src\it\test1\target\classes
[INFO] [resources:testResources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:testCompile]
[INFO] No sources to compile
[INFO] [surefire:test]
[INFO] No tests to run.
[INFO] [jar:jar]
[INFO] Building jar: C:\work\svn_workspace\jbehaveTrunkClean\plugins\maven\src\it\test1\target\jbehave-maven-plugin-it-test1-1.1-SNAPSHOT.jar
[INFO] [jbehave:run-behaviours {execution: run-behaviours}]
Done something
.
Time: 0.015s

Total: 1. Success!
[INFO] ----------------------------------------------------------------------------
[INFO] Building jBehave Maven Plugin Integration Test 2
[INFO] task-segment: [integration-test]
[INFO] ----------------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:compile]
[INFO] Compiling 5 source files to C:\work\svn_workspace\jbehaveTrunkClean\plugins\maven\src\it\test2\target\classes
[INFO] [resources:testResources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:testCompile]
[INFO] No sources to compile
[INFO] [surefire:test]
[INFO] No tests to run.
[INFO] [jar:jar]
[INFO] Building jar: C:\work\svn_workspace\jbehaveTrunkClean\plugins\maven\src\it\test2\target\jbehave-maven-plugin-it-test2-1.1-SNAPSHOT.jar
[INFO] [jbehave:run-story {execution: run-story}]
Given org.jbehave.it.stories.givens.ATestToBeRun
When org.jbehave.it.stories.events.UserRunsTest
Then org.jbehave.it.stories.outcomes.ATestIsRunSuccessfully
.
Time: 0.0s

Total: 1. Success!
[INFO] ----------------------------------------------------------------------------
[INFO] Building jBehave Maven Plugin Integration Test 3
[INFO] task-segment: [integration-test]
[INFO] ----------------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:compile]
[INFO] Compiling 5 source files to C:\work\svn_workspace\jbehaveTrunkClean\plugins\maven\src\it\test3\target\classes
[INFO] [resources:testResources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:testCompile]
[INFO] No sources to compile
[INFO] [surefire:test]
[INFO] No tests to run.
[INFO] [jar:jar]
[INFO] Building jar: C:\work\svn_workspace\jbehaveTrunkClean\plugins\maven\src\it\test3\target\jbehave-maven-plugin-it-test3-1.1-SNAPSHOT.jar
[INFO] [jbehave:print-story {execution: run-story}]
Story: user runs integration test

As a
I want
So that

Scenario: user runs test successfully

Given a test to be run
When user runs test
Then a test is run successfully
[INFO] ----------------------------------------------------------------------------
[INFO] Building jBehave Maven Plugin Integration Test Reactor
[INFO] task-segment: [integration-test]
[INFO] ----------------------------------------------------------------------------
[INFO] [site:attach-descriptor]
[INFO]
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] ------------------------------------------------------------------------
[INFO] jBehave Maven Plugin Integration Test 1 ............... SUCCESS [2.812s]
[INFO] jBehave Maven Plugin Integration Test 2 ............... SUCCESS [0.969s]
[INFO] jBehave Maven Plugin Integration Test 3 ............... SUCCESS [1.000s]
[INFO] jBehave Maven Plugin Integration Test Reactor ......... SUCCESS [1.093s]
[INFO] ------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 6 seconds
[INFO] Finished at: Thu May 31 12:03:01 CEST 2007
[INFO] Final Memory: 8M/16M
[INFO] ------------------------------------------------------------------------","non-feature containing"
"Maven JBehave plugin goal jbehave:run-stories-as-embeddables doesn't found my JUnitStories test classes I'm testing a web site with Jbehave-web-selenium 3.2-beta-3 and I I'd rather run my tests with jbehave-maven-plugin instead of running them with maven-surefire-plugin, due to some issues of this last plugin with jbehave-hudson-plugin (please see this issue for more information: https://github.com/aparkinson/jbehave-hudson-plugin/issues#issue/1) 

But jbehave-maven-plugin doesn't recognize my JUnitStories test classes (that seems to be always the case for plugin configurations given in JBEHAVE-207 issue (http://jira.codehaus.org/browse/JBEHAVE-207). 

Please the attached file for maven plugins configuration details.","non-feature containing"
"Maven goal run-stories-with-annotated-embedder-runner doesn't exist In the documentation (http://jbehave.org/reference/latest/maven-goals.html) reference a goal named: run-stories-with-annotated-embedder-runner that not exist. Fix with 
run-with-annotated-embedder","non-feature containing"
"Maven plugin + slf4j doesn't play nicely together It seems the SLF4j's {{StaticLoggerBinder}} doesn't play nicely with jBehave's {{EmbedderClassLoader}}. 
When running a business logic that creates a logger without the embedder CL, LoggerFactory.getLogger will provide logback logger (assuming it exists on the classpath). Doing the same with the maven plugin will produce {{org.slf4j.impl.SimpleLogger}} instead.
Even trying to force the binding to logback by implementing a static StaticLoggerBinder, as it is suggested in https://stackoverflow.com/questions/11433926/force-slf4j-to-use-logback fails.

It seems the issue was discussed two years ago at http://comments.gmane.org/gmane.comp.java.jbehave.user/2490, but no follow-up was done.

Attached a simplified project that reproduces the issue.

","non-feature containing"
"Maven plugin can't identify Scenario classes in src/test/java I have the JBehave Maven plugin configured with test scope. In 2.0.1, the plugin was able to pick up the Scenario classes from src/test/java, but in 2.1 it fails to. Please try running the attached maven project with different -Djbehave.version settings to reproduce the error.

$ mvn -Djbehave.version=2.0.1 clean integration-test 
...
[INFO] [jbehave:run-scenarios {execution: run-scenarios-listed}]
[INFO] Running scenario binil.scenarios.MyScenario
...

$ mvn -Djbehave.version=2.1 clean integration-test 
...
[INFO] [jbehave:run-scenarios {execution: run-scenarios-listed}]
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to instantiate scenario 'binil.scenarios.MyScenario'

Embedded error: The scenario 'binil.scenarios.MyScenario' could not be instantiated with class loader: [org.jbehave.scenario.ScenarioClassLoader urls=[/Users/binil/work/jbehave-bug-report/target/classes]]","non-feature containing"
"Maven runner documentation has incorrect capitalization (should be camel case) http://jbehave.org/reference/stable/running-scenarios.html

The described configuration is incorrect. The various tags need to be camel cased to work. E.g. {{scenarioIncludes}} instead of {{scenarioincludes}}.","non-feature containing"
"Merge story/steps configuration Story and steps configuration should be merged, maintaining what worked well and removing what did not. 

Criterias for refactor: 
- Elements of the configuration should always have default values and should be overridable singularly, after instantiation. 
- Immutability of configuration can be obtained by decorating a configuration and disabling the use* methods. ImmutableConfiguration decorator should throw an exception when use* method invoked. 
- Default MostUsefulConfiguration should always be available to runners and should not be required as parameters in super() invocations.","feature containing"
"Meta data declared at the scenario level are not reported JBehave version : 4.0.4

When declaring meta-infos into a story, at the _story level_, and also at the _scenario level_, only the _story level_ meta informations appear in the XML report.
_scenario level_ meta-informations are not reported.

Looking into the JBehave source code, i've found that the 
{code:java}
StoryReporter 
{code}
interface provide a 
{code:java}
scenariometa() 
{code}
method.
Thing is : 
{code:java}
StoryReporter.scenariometa()
{code}
 method is invoked by the now deprecated 
{code:java}
org.jbehave.core.embedder.StoryRunner
{code}
 in the 
{code:java}
runCancellable()
{code}
 method (see line 316). 
{code:java}
StoryRunner 
{code}
seems deprecated, and the 
{code:java}
PerformableTree 
{code}
is now preferred and used.
But looking at this 
{code:java}
PerformableTree 
{code}
class, and especially on the 
{code:java}
PerformableTree.PerformableScenario.perform(RunContext context)
{code}
 method (see line 866) , there is no more call to the 
{code:java}
StoryReporter.scenariometa()
{code}
, as it was done in the 
{code:java}
StoryRunner
{code}
.

See the joined sample Maven project to reproduce the issue, and especially the {{README.mediawiki}} for more infos.
","non-feature containing"
"Meta filter on scenario level for 'Story Navigator' There is a meta information filter in 'Story Navigator'. But it works only on *story* level, while meta information is also available on single *scenario* level. So it would be great to filter also by *scenario* meta information.","feature containing"
"Meta of Examples doesn't inherit scenario meta If scenario contains meta and example table, examples doesn't contain meta and meta filters are applied to this scenario, all examples are excluded, because meta is empty, but they should be included if scenario meta matches","non-feature containing"
"Meta parameters only work once per runner According to http://jbehave.org/reference/stable/meta-parametrisation.html 
it should be possible to provide parameter values using the Meta: keyword. 

If two stories are using meta keywords with the same name but different values, one story will fail because the meta parameter is initialized only once per runner. 

see attached example.","non-feature containing"
"Meta tags (and other things) injectable into components Meta tags can be injected into step methods. They can't be injected into step-pojo constructors, nor in any capacity to components that are themselves injectable into step-pojo constructors. 

Workaround people have to do: accept the meta-tag into the step-pojo's step method and hand it to wherever needs. 

In our particular case, Page objects are being made by a DI container, and it would be better separation of concerns to have meta tags injected where they are needed, and not in the steps class (which only passes them on). 

The senior developer in question wishes, in lieu of something better, that StoryRunner.RunContext.Meta was statically available (on a thread local) and that page objects could pull it when they need it. That's a breach of IoC of course, but you get why he wishes for it.","feature containing"
"MetaFilter not using specified EmbedderMonitor *Overview*: MetaFilter is always using the PrintStreamEmbedderMonitor, even when the Embedder is using a different monitor.  This is causing logging messages to be output from the MetaFilter to standard output, even though a different behavior has been set in the Embedder.  For cases where there are many stories and scenarios which are being filtered, then this can cause a great deal of logging messages in standard output that are expected to be directed elsewhere or suppressed.

*Cause*: The cause of this issue is the fact that when the Embedder instantiates the MetaFilters it does not pass the monitor that has been set on the Embedder itself.  The default monitor, when noen is passed in the constructor, for MetaFilter is the PrintStreamEmbedderMonitor.  Which is why it is always being used.

*Fix*: Modify the method _mapStoriesAsPaths_ in the _Embedder_ class to use _new MetaFilter(filter, this.monitor)_.  Thus passing the monitor assigned to the Embedder on to each of the MetaFilters which are created. In the majority of cases this (where the default monitor is used with the Embedder) the behavior will be the same as it is now (since the default monitor is the same for Embedder as it is for MetaFilter).  But when a specific monitor is specified for the Embedder, then it will also be used with the MetaFilter instances.
","non-feature containing"
"MetaFilter should support meta matching logic written in a Groovy Little language example: 
((suite = ""smoke"" | suite = ""regression"") & process = ""booking"") 

Groovy closures (http://groovy.codehaus.org/Quick+Start) would be an effective way to construct an alternate grammar. 

It should be a non-default implementation to allow for backwards compatibility.","feature containing"
"MetaFilters not properly read from the configuration The meta filters configuration of the Maven Mojo is not properly being read and passed as null to the Embedder. 

Solution is use String[] in place of List<String>, as generics are at times not properly handled in Maven 2.","non-feature containing"
"Method useViewGenerator in Configuration does not honour the builder pattern Need to make the method return Configuration","feature containing"
"Methods annotated with AfterStories are not called if a step is causing a RuntimeException The AfterStory/BeforeStory annotations works in this case, so I would expect the same for the AfterStories annotation. 

Here is the setup code: 

{code} 
StoryPathResolver storyPathResolver = new UnderscoredCamelCaseResolver("".story""); 
Class storyClass = this.getClass(); 
Properties viewProperties = new Properties(); 
viewProperties.put(""decorateNonHtml"", ""true""); 
URL codeLocation = CodeLocations.codeLocationFromClass(storyClass); 
Configuration configuration = new MostUsefulConfiguration() 
.useStoryControls(new StoryControls().doDryRun(false).doSkipScenariosAfterFailure(false)) 
.useStoryLoader(new LoadFromClasspath(storyClass.getClassLoader())) 
.useStoryReporterBuilder(new StoryReporterBuilder() 
.withCodeLocation(codeLocation) 
.withDefaultFormats() 
.withViewResources(viewProperties) 
.withFormats(StoryReporterBuilder.Format.CONSOLE, StoryReporterBuilder.Format.TXT, 
StoryReporterBuilder.Format.HTML, StoryReporterBuilder.Format.XML) 
.withFailureTrace(true)) 
.useStoryPathResolver(storyPathResolver) 
.useStepMonitor(new SilentStepMonitor()); 
useConfiguration(configuration); 
configuredEmbedder().embedderControls().doGenerateViewAfterStories(true); 

addSteps(new InstanceStepsFactory(configuration, this, 
new CommonSteps(), 
new UserProfileChecks(), 
new CapConnectionWrapper(), 
new SeleniumWrapper()).createCandidateSteps()); 
{code}","non-feature containing"
"Migrate Web Runner to use Wicket as web application framework Wicket shares the same philosophy as Waffle (embeddable, pure Java, no XML) and has a wide community support. 

From users' point of view the only change would be extend a Wicket Application class to specify configuration and steps instances, instead of a Waffle Registrar. 

A doc page should help in migrating from Registrar to Application class.","feature containing"
"MiniMock should fail unpon unmatched calls The minimock should fail immediately when unspecified call comes in, instead of waiting for verification","feature containing"
"MiniMock should fail upon matched method expecations When specifying method invocation expectations and no method found in the interface to be mocked, MiniMock should fail right away","feature containing"
"Minor change to function parseScenario in RegexStoryParser Problem Statement: 
When the RegexStoryParser parses out a scenario, it attempts to remove the title from the step to get the scenario without title, but the function doesn't account for Scenario:\n before the title. I don't think this will affect anything, and I don't think anything was broken initally, I just noticed as debugging that it didn't strip out the actual title because of the Scenario keyword, newline, and space before it. 

Actual Code: 
RegexStoryParser line 151: 

String scenarioWithoutTitle = removeStart(scenarioAsText, title); 

Recommended Fix: 
String scenarioWithoutTitle = removeStart(scenarioAsText, keywords.scenario() + ""\n "" + title); 

Where ""\n "" can be replaced with whatever new line character is being used plus the space.","feature containing"
"Misprint in class name(HtmlTemplateOu[t]put), resulting in a broken link at JBehave site http://jbehave.org/reference/stable/reporting-stories.html 

HtmlTemplateOutput link points to: 
http://jbehave.org/reference/stable/javadoc/core/org/jbehave/core/reporters/HtmlTemplateOutput.html 

While via google I could find the following: 
http://jbehave.org/reference/stable/javadoc/core/org/jbehave/core/reporters/HtmlTemplateOuput.html","non-feature containing"
"Mocks should be refactorable in common IDEs. I would like my mocks to be refactored when I refactor the classes they're mocking.

One way to do this would be to ""switch on"" expectations and store the method called. So, given a class

private interface MyClass {
doesSomething(int numberOfTimes);
}

our mock setup would look like:

((MyClass)mock.expects()).doesSomething(3);

If we ever switch to generics, we won't even need the cast.","feature containing"
"More control of verbosity of excluded stories by filter Printing of Stories that were excluded by filter is not desirable for projects that have many hundreds of stories. 

Add a verboseFiltering flag in EmbedderControls (defaulting to false) that can be set in the usual ways, Maven/Ant configuration, @UsingEmbedder annotation, via VERBOSE_FILTERING system property (using PropertyBasedEmbedderControls), or programmatically via EmbedderControls.","feature containing"
"More fined-grained control over scope, real hooks/listeners for scope changes for DI container setup to use. It would be nice to compose to one of a number of strategies: 

* Application Scope (Singleton scope in Spring/Guice parlance) 
* New component per Story 
* New component per Scenario 
* New component per Step 

It would be nice to effect this without @Before/AfterStory/Scenario (etc).","feature containing"
"Move step creation concern from Steps to StepCreator Move step creation concern from Steps to StepCreator 

Refactor CandidateSteps interface methods to make clearer their intended use.","feature containing"
"Moved configuration and runner classes to separate packages Leave only main core entry point classes at top-level package.","feature containing"
"Multi-threading in scenarios & example tables We have many stories, and one story has 10-20 scenarios. 
It cost much time to run all of them by serial. 

I know JBehave support multi-threaded story execution capability, could you also support multi-threaded in scenario level and different data in example table?","feature containing"
"Multi-threading is not aware of RunContext.givenStory Multi-threading is not aware of RunContext.givenStory. In case of a story with a GivenStory it will throw: 

Failed to run story org/jbehave/examples/trader/stories/trader_sells_all_stocks.story 
java.lang.RuntimeException: Delayed methods already invoked 
at org.jbehave.core.reporters.ConcurrentStoryReporter.invokeDelayed(ConcurrentStoryReporter.java:286) 

The StoryRunner should invoke the delayed methods according the givenStory flag of the RunContext.","non-feature containing"
"Multi-threading issue with FluentSelenium FluentWebDriverPage should not do it's own ThreadLocal stuff, as it can't be cleared per-story or per-thread in the same way that DelegatingWebDriverProvider can.","non-feature containing"
"Multiline scenario title appears on one line in HTML report Given I have a scenario text 

Scenario : As a Jbehave user I want to be able to 
----------------------------- 
1) Create multiline description 
2) And keep doing it 
3) Forever and ever 

When scenario is executed 
Then HTML report should show it in multiple line as it appears on COnsole","feature containing"
"Multiline scenario title is parsed as empty If the scenario title (i.e. the text that follows the keyword Scenario) is over multiple lines, the text is parsed as empty string.","non-feature containing"
"Multiple And steps are not matched Regression introduced by JBEHAVE-278, whereby when multiple And steps are encountered only the first is matched, while from 
the second is it marked as Pending. 

Cause lies in the fact that JBEHAVE-278 introduced concept of previous step for matching purposes, but this should be the latest non And step.","non-feature containing"
"Multithreaded JUnitStories are running but not running concurrently When running several multithreaded JUnitStories, the tests run in multiple threads as intended but do not run concurrently. This is evident because when they're run and the steps are printed on the screen, all of them are separated by story and the test time isn't any faster than when one thread is run. When I ran the threads example from jbehave.org in multiple threads, I could easily tell all of the steps from the tests were running concurrently because different scenarios from different tests were all jumbled together when the test ran, but this is not the case when I run my tests. 

Is there a specific reason my tests are not running in concurrency even though they are running in multiple threads?","non-feature containing"
"Multithreaded story execution capability EmbedderControls.useThreads(int) (or equivalent annotation property) controls the number of threads that will be used for the multi-thread execution. 

Each story (and all its scenarios) will run in a single thread, while multiple stories can run concurrently.","feature containing"
"NPE during run tests in other languages I have a simple project Jbehave + Thucydides from archetype: net.thucydides:thucydides-jbehave-archetype. 
And I modified class *de.jbehave.AcceptanceTestSuite* to change the locale of the test for other language e.x. German 
{code:lang=java} 
package de.jbehave; 

import net.thucydides.jbehave.ThucydidesJUnitStories; 
import net.thucydides.jbehave.UTF8StoryLoader; 

import java.util.Locale; 

import org.jbehave.core.Embeddable; 
import org.jbehave.core.configuration.Configuration; 
import org.jbehave.core.configuration.Keywords; 
import org.jbehave.core.i18n.LocalizedKeywords; 
import org.jbehave.core.parsers.RegexStoryParser; 

public class AcceptanceTestSuite extends ThucydidesJUnitStories { 

private final Locale DEFAULTSTORYLANGUAGE = new Locale(""de""); 

@Override 
public Configuration configuration() { 
Configuration configuration = super.configuration(); 
Class<? extends Embeddable> embeddableClass = this.getClass(); 

//Set stories and return report to French 
Keywords keywords = new LocalizedKeywords(DEFAULTSTORYLANGUAGE); 
configuration.useKeywords(keywords)// 
.useStoryParser(new RegexStoryParser(keywords)) 
.useStoryLoader(new UTF8StoryLoader()) 
.storyReporterBuilder().withKeywords(keywords); 
return configuration; 
} 

} 
{code} 
Also I modified story file 
{noformat} 

Szenario: Looking up the definition of 'apple' 
Gegeben the user is on the Wikionary home page 
Wenn the user looks up the definition of the word 'apple' 
Dann they should see the definition 'A common, round fruit produced by the tree Malus domestica, cultivated in temperate climates.' 

Szenario: Looking up the definition of 'pear' 
Gegeben the user is on the Wikionary home page 
Wenn the user looks up the definition of the word 'pear' 
Dann they should see the definition 'An edible fruit produced by the pear tree, similar to an apple but elongated towards the stem.' 
{noformat} 
I ran the tests. 
Until now everything looked fine but when I added Exmaples Table in story file: 
{noformat} 

Szenario: Looking up the definition of '<word>' 
Gegeben the user is on the Wikionary home page 
Wenn the user looks up the definition of the word '<word>' 
Dann they should see the definition '<definition>' 
Beispiele: 
| word | definition | 
| apple | A common, round fruit produced by the tree Malus domestica, cultivated in temperate climates. | 

Szenario: Looking up the definition of 'pear' 
Gegeben the user is on the Wikionary home page 
Wenn the user looks up the definition of the word 'pear' 
Dann they should see the definition 'An edible fruit produced by the pear tree, similar to an apple but elongated towards the stem.' 
{noformat} 
Next time NPE occurred: 
{noformat} 
TEST STARTED: Looking up the definition of '<word>' 
-------------------------------------------------------------------- 
Szenario: Looking up the definition of '<word>' 
Beispiele: 
Gegeben the user is on the Wikionary home page 
Wenn the user looks up the definition of the word '<word>' 
Dann they should see the definition '<definition>' 

|word|definition| 
|apple|A common, round fruit produced by the tree Malus domestica, cultivated in 
temperate climates.| 

Beispiel: {word=apple, definition=A common, round fruit produced by the tree Mal 
us domestica, cultivated in temperate climates.} 
Failed to run story de/stories/consult_dictionary/LookupADefinition.story 
java.lang.NullPointerException 
at de.codecentric.jbehave.junit.monitoring.JUnitScenarioReporter.example 
(JUnitScenarioReporter.java:197) 
at org.jbehave.core.reporters.DelegatingStoryReporter.example(Delegating 
StoryReporter.java:91) 
at org.jbehave.core.reporters.ConcurrentStoryReporter.example(Concurrent 
StoryReporter.java:209) 
at org.jbehave.core.embedder.StoryRunner.runScenariosParametrisedByExamp 
les(StoryRunner.java:429) 
at org.jbehave.core.embedder.StoryRunner.runCancellable(StoryRunner.java 
:303) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:220) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:181) 
at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManage 
r.java:262) 
at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManage 
r.java:229) 
at java.util.concurrent.FutureTask.run(FutureTask.java:262) 
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor. 
java:1145) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor 
.java:615) 
at java.lang.Thread.run(Thread.java:744) 
Before storyAfterStories 
{noformat} 

*Workaround* 
Put file https://github.com/jbehave/jbehave-core/blob/master/jbehave-core/src/main/resources/i18n/keywords_de.properties in your project in /src/main/resources/i18n/ with change one line: 
{noformat} 
ExamplesTableRow=Example: 
{noformat}","non-feature containing"
"NPE when executing a scenario with Examples table Prerequisites: jbehave-core:4.0.4

I have the following scenario:
{code}
Meta:
    @group General_Tests

Scenario: 1

Meta:
    @regression
    @testTier 1
    @testType UI
    @layout phone tablet desktop

Given I am on the main application page
Examples:
|PageLink|
|PageLink|
{code}

Metafilter, that I use: {code}groovy: layout==~/.*phone.*/ && !skip{code}
It should filter out all scenarios that don't have @layout phone.
This metafilter is added with useMetaFilters(List<String> metaFilters) method.

NPE is thrown:
{code}
2015-09-29 15:46:29,069 [main] INFO  org.eclipse.jetty.util.log - Logging initialized @11381ms
2015-09-29 15:46:32,799 [main] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - Meta[properties={narrative=Narrative[inOrderTo=,asA=,iWantTo=,soThat=], description=, group=General_Tests, path=Test.story}] excluded by filter 'groovy: layout==~/.*phone.*/ && !skip'
2015-09-29 15:46:33,335 [main] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - Meta[properties={}] excluded by filter 'groovy: layout==~/.*phone.*/ && !skip'
2015-09-29 15:46:33,457 [main] INFO  com.jjconsumer.dte.bdd.log.LoggingStoryReporter - (BeforeStories)
2015-09-29 15:46:33,574 [main] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - Meta[properties={narrative=Narrative[inOrderTo=,asA=,iWantTo=,soThat=], description=, group=General_Tests, path=Test.story}] excluded by filter 'groovy: layout==~/.*phone.*/ && !skip'
2015-09-29 15:46:33,640 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingStoryReporter - (Test.story)
2015-09-29 15:46:33,641 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingStoryReporter - Meta:
2015-09-29 15:46:33,641 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingStoryReporter - @group General_Tests
2015-09-29 15:46:33,661 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingStoryReporter - Scenario: 1
2015-09-29 15:46:33,661 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - Failed to run story Test.story
2015-09-29 15:46:33,662 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - java.lang.NullPointerException
2015-09-29 15:46:33,663 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - at org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:876)
2015-09-29 15:46:33,663 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - at org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:804)
2015-09-29 15:46:33,663 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - at org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:777)
2015-09-29 15:46:33,663 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - at org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:409)
2015-09-29 15:46:33,663 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - at org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:380)
2015-09-29 15:46:33,663 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)
2015-09-29 15:46:33,663 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)
2015-09-29 15:46:33,663 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - at java.util.concurrent.FutureTask.run(FutureTask.java:266)
2015-09-29 15:46:33,664 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
2015-09-29 15:46:33,664 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
2015-09-29 15:46:33,664 [pool-2-thread-1] INFO  com.jjconsumer.dte.bdd.log.LoggingEmbedderMonitor - at java.lang.Thread.run(Thread.java:745)
{code}

The reason of this is in this part of the code inside PerformableTree class:
{code}
if (isParameterisedByExamples(scenario)) {
    ExamplesTable table = scenario.getExamplesTable();
    for (Map<String, String> scenarioParameters : table.getRows()) {
        Meta exampleScenarioMeta = parameterMeta(context, scenarioParameters);
        boolean exampleScenarioAllowed = context.filter().allow(exampleScenarioMeta);
        if (exampleScenarioAllowed) {
            ExamplePerformableScenario exampleScenario = exampleScenario(context, lifecycle, scenario, storyAndScenarioMeta, scenarioParameters);
            performableScenario.addExampleScenario(exampleScenario);
        }
    }
} else { // plain old scenario
    performableScenario.useNormalScenario(normalScenario);
}
{code}
exampleScenarioAllowed = false for this scenario, so performableScenario doesn't have neither exampleStory nor normalScenario.","non-feature containing"
"Named parameter values containing backslash and dollar characters cause side effects When using named parameters and examples table, the named parameter value can cause side effects and wrongly transmitted parameter values if the value itself contains backslash '\' and dollar '$' characters. 

This is because in ExamplesTable#replaceNamedParameters(Map<String, String>) it is used String#replaceAll(String, String). 
According to javadoc, the replaceAll uses regex capturing features, that's why using \ and $ cause side effects.","feature containing"
"Named parameters do not work in conjunction with parameter converters In version 4.0.5, when using the @Named annotation in conjunction with a parameter converter (in this case, comma-separated string -> List converter), the parameter injection fails.  The workaround is to fallback to order-based parameter injection.","non-feature containing"
"Named parameters sorrounded by quotes are not handled properly Wnen using jbehave with named parameters, order is not respected in parameter injection if the named parameters are sorrounded with non-white characters (for example, quotes). 
Here is a simple test: 

{code} 
public class QuoteNamedParametersStory extends JUnitStory { 

public static class QuotNamedParametersSteps { 

@Then(""\""$foo\"" then \""$bar\"""") 
public void otherOrderQuotes(@Named(""bar"") String bar, @Named(""foo"") String foo) { 
assertThat(foo, equalTo(""foo"")); 
assertThat(bar, equalTo(""bar"")); 
} 
} 

@Override 
public Configuration configuration() { 
return new MostUsefulConfiguration().useStoryReporterBuilder(new StoryReporterBuilder().withFormats(Format.CONSOLE).withFailureTrace(true)); 
} 

@Override 
public List<CandidateSteps> candidateSteps() { 
return new InstanceStepsFactory(configuration(), new QuotNamedParametersSteps()).createCandidateSteps(); 
} 
} 
{code} 

And the corresponding quote_named_parameters_story.story: 

{noformat} 
Scenario: quotes on named parameters are problematic... 

Then ""foo"" then ""bar"" 
{noformat} 

I was able to fix it (and pass the above test successfully) by changing {{org.jbehave.core.parsers.RegexPrefixCapturingPatternParser.Parameter}} to: 

{code} 
private class Parameter { 
private final int start; 
private final int end; 
private final String whitespaceIfAny; 
private final String name; 

public Parameter(String pattern, int start, int end, 
String whitespaceIfAny) { 
this.start = start; 
this.end = end; 
this.whitespaceIfAny = whitespaceIfAny; 
this.name = pattern.substring(start + prefix.length(), end - whitespaceIfAny.length()).trim(); 
} 

} 
{code}","non-feature containing"
"Navigator can't support special char Hello ! 

I'm using the navigator report view and I just tried with stories containing special characters in their name like : my-story#1 

I have a problem here with the ""#"" char that have to be converted to %23 in the story path for links to work properly. 

The changes I had to do : 

xref.json : 
- change xref.stories.story.path with # to %23 

navigator.html : 
- change from ng-click=""showStory(performable.story.path)"" to ng-click=""showStory(performable.story.path, performable.story.name)"" 
- change from <td>{{performable.story.path}}</td> to <td>{{performable.story.name}}</td> 

angular-controllers.js : 
- change to $scope.showStory = function(storyPath, storyName) { 
- change to title: storyName, 

This is really quick fix from my side, I don't know if there are impacts elsewhere. 

There may be other char that need to be url encoded. 

Thanks for your interest !","non-feature containing"
"Navigator project needs to be localized Hello there ! 

I'm from France, using 4.x to get steps durations in the JSon result and I've seen Navigator is not localized. 

I think it can be solved in angular-controllers.js line 15 : 

url = url.replace("".story"","".html""); 

Thanks for the help !","feature containing"
"Navigator view not generated in the case of a scenario step failing. With no failures means target/jbehave/view/navigator.html generated. 
With failures means target/jbehave/view/navigator.html generated is missing. 

For some strange reason this is unlike /reports.html. 

It is easy to reproduce - comment out the hack-fix override of run() in EtsyStories. Also make one of the steps fail, before running the suite.","non-feature containing"
"Need really great javadoc for all injectable / configurable classes Thanks to Michael for pointing this out","feature containing"
"Need to be able to set order of steps for matching We have run into some difficulty declaring steps that have similar wording such that the matching was incorrect for some of our scenarios. For example:

We have a line from one of scenarios that looks like this:

And the table.testtable with test_1_id of foo has exactly one test_2_id of bar 

We want this line to match on the following step:

@Given(""the $tableName with $whereColumnName of $whereColumnValue has exactly one $selectColumnName of $selectColumnValue"")

But instead the match is always occuring on this step:

@Given(""the $tableName with $whereColumnName of $whereColumnValue has $selectColumnName of $selectColumnValue"")

where $selectColumnName gets interpreted as ""exactly one test_2_id""

Can we have an annotation that indicates the order by which the matching occurs? That way, the first step in our example would always get compared first to our example input line instead of step two. For example something like this:

@Order(1)
@Given(""the $tableName with $whereColumnName of $whereColumnValue has exactly one $selectColumnName of $selectColumnValue"")

@Order(2)
@Given(""the $tableName with $whereColumnName of $whereColumnValue has $selectColumnName of $selectColumnValue"")","feature containing"
"New syntax for Given with many parameters A given step might look like : 
{code}Given a person (first name) Bruno (last name) Bieth born 2010-01-01 in Tombouctou living in Canada driving 10,000 miles per year{code}

It can be hard to read. Passed a certain amount of parameters I suggest the following syntax :

{code}
Given a person
- First Name : Bruno
- Last Name : Bieth
- Birth date : 2010-01-01
- Birth country : Tombouctou
- Country of residency : Canada
- Miles driven per year : 10,000
{code}

The java code would look like :
{code}
@GivenDetail( ""a person"" )
public void aPerson(
@Named(""First Name"") String firstName, 
@Named(""Last Name"") String lastName, 
@Named(""Birth date"") DateTime birthDate,
@Named(""Birth country"") String birthCountry,
@Named(""Country of residency"") String countryOfResidency,
@Named(""Miles driven per year"") Integer milesPerYear
) { 
person = new Person(firstName,lastName,birthDate,birthCountry,countryOfResidency,milesPerYear);
}
{code}

The factory could use another CandidateSteps instance, say :
{code}
public class DetailedSteps implements CandidateSteps {

private CandidateSteps delegate;
private StepsConfiguration configuration;
private Object instance;

public DetailedSteps(StepsConfiguration configuration, CandidateSteps delegate, Object instance) {
this.configuration = configuration;
this.delegate = delegate;
this.instance = instance;
}

@Override
public CandidateStep[] getSteps() {
return getSteps( instance.getClass() );
}

@Override
public CandidateStep[] getSteps(Class<?> stepsClass) {
List<CandidateStep> steps = new ArrayList<CandidateStep>( Arrays.asList( delegate.getSteps(stepsClass)));

for( Method method : stepsClass.getMethods() ) {
GivenDetail annotation = method.getAnnotation(GivenDetail.class);
if( annotation != null ) {
steps.add( createGivenDetail( method, annotation ) );
}
}

return steps.toArray(new CandidateStep[steps.size()]);
}

private CandidateStep createGivenDetail(final Method method,
GivenDetail annotation) {
return new CandidateStep(annotation.value(), annotation.priority(), StepType.GIVEN, method, instance, new StepPatternBuilder() { 
@Override
public String[] extractGroupNames(String string) {
List<String> names = new ArrayList<String>();
for( Annotation[] annotations : method.getParameterAnnotations() ) {
for( Annotation annotation : annotations ) {
if( annotation instanceof Named ) {
names.add( ((Named)annotation).value() );
}
}
}
return names.toArray(new String[names.size()]);
}

@Override
public Pattern buildPattern(String matchThis) {
String[] groups = extractGroupNames("""");
String pattern = matchThis.replaceAll("" "", ""\\\\s+"" );
for( String group : groups ) {
pattern += ""\\s+-\\s+"" + group.replaceAll( "" "", ""\\\\s+"" ) + ""\\s*:\\s+(.*)"";
}
return Pattern.compile( pattern );
}
},configuration.getParameterConverters(),configuration.getStartingWordsByType());
}

@Override
public List<Step> runAfterScenario() {
return delegate.runAfterScenario();
}

@Override
public List<Step> runAfterStory(boolean embeddedStory) {
return delegate.runAfterStory(embeddedStory);
}

@Override
public List<Step> runBeforeScenario() {
return delegate.runBeforeScenario();
}

@Override
public List<Step> runBeforeStory(boolean embeddedStory) {
return delegate.runBeforeStory(embeddedStory);
}

}
{code}","feature containing"
"Newline escape has the wrong order of \n\r CandidateStep

value.replaceAll(""(\n)|(\r\n)"", System.getProperty(""line.separator""));

must be:
value.replaceAll(""(\n)|(\n\r)"", System.getProperty(""line.separator""));","non-feature containing"
"NoClassDefFound latest jbehave plugin in Jenkins The following error:

{noformat}
Failed to scout org.jbehave.jenkins.JBehavePluginType$DescriptorImpl
java.lang.InstantiationException: java.lang.NoClassDefFoundError: com/thalesgroup/dtkit/metrics/hudson/api/descriptor/TestTypeDescriptor
    at net.java.sezpoz.IndexItem.element(IndexItem.java:146)
    at hudson.ExtensionFinder$Sezpoz.scout(ExtensionFinder.java:663)
    at hudson.ClassicPluginStrategy.findComponents(ClassicPluginStrategy.java:339)
    at hudson.ExtensionList.load(ExtensionList.java:300)
    at hudson.ExtensionList.ensureLoaded(ExtensionList.java:253)
    at hudson.ExtensionList.iterator(ExtensionList.java:143)
    at hudson.ClassicPluginStrategy.findComponents(ClassicPluginStrategy.java:338)
    at hudson.ExtensionList.load(ExtensionList.java:300)
    at hudson.ExtensionList.ensureLoaded(ExtensionList.java:253)
    at hudson.ExtensionList.getComponents(ExtensionList.java:154)
    at hudson.DescriptorExtensionList.load(DescriptorExtensionList.java:182)
    at hudson.ExtensionList.ensureLoaded(ExtensionList.java:253)
    at hudson.ExtensionList.iterator(ExtensionList.java:143)
    at org.jenkinsci.plugins.xunit.AliasInitializer.addAliases(AliasInitializer.java:47)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
    at java.lang.reflect.Method.invoke(Unknown Source)
    at hudson.init.TaskMethodFinder.invoke(TaskMethodFinder.java:105)
    at hudson.init.TaskMethodFinder$TaskImpl.run(TaskMethodFinder.java:169)
    at org.jvnet.hudson.reactor.Reactor.runTask(Reactor.java:282)
    at jenkins.model.Jenkins$7.runTask(Jenkins.java:886)
    at org.jvnet.hudson.reactor.Reactor$2.run(Reactor.java:210)
    at org.jvnet.hudson.reactor.Reactor$Node.run(Reactor.java:117)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
    at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NoClassDefFoundError: com/thalesgroup/dtkit/metrics/hudson/api/descriptor/TestTypeDescriptor
{noformat}

is reported in the jbehave plugin of Jenkins. Other users: http://stackoverflow.com/questions/26861855/jenkins-jbehave-plugin-installation-failed-classnotfoundexception-dtkit-testty are encountering this issue which does not work currently. The plugin is currently built with {{hudson 2.2.0}} which is not compatible with Jenkins anymore.

I created https://github.com/jbehave/jbehave-core/pull/118 to fix this issue.","non-feature containing"
"NoClassDefFoundError in Java7 Compiling with java7u2 results in NoClassDefFoundError for AnnotationProcessorFactory due to java7 incompatible version of maven hpi plugin.","feature containing"
"Normal Scenarios must reset Example Context Normal scenarios must reset example context objects, this prevents re-usage from steps with default retention level (example) when using normal scenarios.

How to reproduce:

Create a feature with two normal scenarios. Store something in context using default retention level (example).

Feature:
As a user
I want to perform an action
So that I can achieve a business goal

Scenario: scenario description
Given a system state
When I do something
And store something in context
Then system is in a different state

Scenario: Second scenario description
Given a system state
When I do something
And store something in context
Then system is in a different state


This is related to JBEHAVE-1172
","non-feature containing"
"NormalPerformableScenario: parent givenStory context not restored after running given stories jbehave-core/src/main/java/org/jbehave/core/embedder/PerformableTree.java

In the perform of the NormalPerformableScenario class when a story has given stories, context.givenStory is set to perform the given stories but is not set back to the original value.

If not mistaken, this could be fixed by adding the following (*bold*):

public static class NormalPerformableScenario extends AbstractPerformableScenario {
    private Scenario scenario;

    public NormalPerformableScenario(Scenario scenario) {
        this.scenario = scenario;
    }

    public void perform(RunContext context) throws InterruptedException {
        if (context.configuration().storyControls().resetStateBeforeScenario()) {
            context.resetState();
        }
        beforeSteps.perform(context);
        if (givenStories.size() > 0) {
            *final boolean parentGivenStory = context.givenStory;*
            context.reporter().givenStories(scenario.getGivenStories());
            for (PerformableStory story : givenStories) {
                context.givenStory = story.givenStory();
                story.perform(context);
            }
            *context.givenStory = parentGivenStory;*
        }
        performRestartableSteps(context);	        
        afterSteps.perform(context);
    }
}
","non-feature containing"
"Norwegian language support out-of-the-box I've added a property file here in ANSI encoding with unix line endings and escaped unicode characters as requested. 
BTW - would be cool if you linked to this tool which does the conversion smoothly: http://www.htmlescape.net/javaescape_tool.html","feature containing"
"Not able to upgrade to selenium-java v2.34.0 or above Starting on v2.34.0 they changed the packaging for the classes: 
- HasInputDevices, Keyboard, Mouse 
They moved it from the org.openqa.selenium to the new org.openqa.selenium.interaction package 

SELENIUM'S CHANGE LOG 
* Moved Mouse, Keyboard and TouchScreen to the interactions package 
where they belong. This has the benefit of also making our build 
files simpler once we delete the original versions which have been 
deprecated. 

All these classes are being used and imported by JBehave's WebDriverPage hence it doesn't compile after the upgrade","non-feature containing"
"Not expected behavior of parametrised tables I try to use parametrised tables in similar way that described here: 
http://jbehave.org/reference/stable/tabular-parameters.html 

I wrote following story: 

Scenario: test 

Given parameters: 
|column1|column2| 
|value1|<values>| 

Examples: 
|<values>| 
|value1| 
|value2| 

Also i tried this version: 

Scenario: test 

Given parameters: 
|column1|column2| 
|value1|<values>| 

Examples: 
|values| 
|value1| 
|value2| 

And this is my step: 

@Given(""parameters: $table"") 
public void readParameters(ExamplesTable table) { 
for (Map<String, String> row : table.getRows()) { 
System.out.println(row.get(""column1"")+"" ""+row.get(""column2"")); 
} 
} 

Expected result: 
Output is: 
key value1 
key value2 

Actually result: 
Output is: 
key <values> 
key <values> 

Also, you can find story and tests in attachments.","non-feature containing"
"NotifyingResponsibilityVerifier ignores the result returned from the listeners After a responsibility method has been invoked the responsibilityVerificationEnding(result, instance) method on the Listener is invoked. This gives the listeners a chance to do a number of things with the result, one of which is to change the result from a success to a fail. 
The NotifyingResponsibilityVerifier currently ignores the result returned from the listener. This is ok as long as you are not using the jUnit Adapter in which case you may get incorrect results when for eg using JMock.","non-feature containing"
"Null meta filters should be ignored in Maven plugin When specifying the meta filters via the Maven plugin, null entries are sometimes passed in, which should be ignored.","feature containing"
"NullPointerException with JUnit 4.12 When using JUnit 4.12 a problem appears when JBehave is trying to build the reporting : 

{quote} 
java.lang.RuntimeException: java.lang.NullPointerException 
at de.codecentric.jbehave.junit.monitoring.JUnitReportingRunner.run(JUnitReportingRunner.java:80) 
at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50) 
at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) 
Caused by: java.lang.NullPointerException 
at de.codecentric.jbehave.junit.monitoring.JUnitScenarioReporter.afterStory(JUnitScenarioReporter.java:114) 
at org.jbehave.core.reporters.DelegatingStoryReporter.afterStory(DelegatingStoryReporter.java:49) 
at org.jbehave.core.reporters.ConcurrentStoryReporter.afterStory(ConcurrentStoryReporter.java:120) 
at org.jbehave.core.embedder.PerformableTree.performBeforeOrAfterStories(PerformableTree.java:399) 
at org.jbehave.core.embedder.StoryManager.performStories(StoryManager.java:102) 
at org.jbehave.core.embedder.StoryManager.runStories(StoryManager.java:93) 
at org.jbehave.core.embedder.StoryManager.runStoriesAsPaths(StoryManager.java:74) 
at org.jbehave.core.embedder.Embedder.runStoriesAsPaths(Embedder.java:204) 
at de.codecentric.jbehave.junit.monitoring.JUnitReportingRunner.run(JUnitReportingRunner.java:78) 
... 6 more 
{quote} 

The nullpointer is caused by following line: 

{quote} 
JunitReportingRunner:171 

private void initRootDescription() { 
rootDescription = Description 
.createSuiteDescription(configurableEmbedder.getClass()); 
rootDescription.getChildren().addAll(storyDescriptions); 
} 
{quote} 

rootDescription.getChildren returns a new array list of children, so doing addAll does not actually add the children to the actual list of Description 
Description class does offer a method addChild, using this method would solve this issue","non-feature containing"
"NumberConverter does not allow Negative BigDecimal values After calling canonicalize() method, the value ends with two negative signs, throwing a NumberFormatException while creating BigDecimal instance.

This is related to https://jbehave.atlassian.net/browse/JBEHAVE-1113","non-feature containing"
"NumberConverter not threadsafe Jeff Caswell's patch applied: 

We have been having a number of issues with story parameter conversion and number format errors in a multithreaded environment. 

This was tracked back to the java.text.NumberFormat instance held by the ParameterConverters NumberConverter inner class. 

The constructor is only run once when a number of stories are launched and the instance is used by all the stories in the run. 

I suspect there may be other issues affecting this, however by converting the NumberFormat to ThreadLocal storage has solved the problem here. 

The patch is pretty much self explanitory, the only aspect that may not immediately seem obvious is that the NumberFormat passed in on the constructor was itself constructed with the users preferred Locale. It is for this reason that I have treated it as the 'preferred format' and cloned it for the thread local copy. Also I did not issue an explicit remove since tests are run as a relatively short lived batch job and I did not feel that there was any reason to worry about an associated memory leak.","non-feature containing"
"NumberConverter should not ignore all non digit characters for BigDecimal type NumberConverter allow values like 'HelloWorld123' to be converter into 123 as BigDecimal. This can lead into wrong data, without user noticing.

There are some non digit characters like dot ('.') and comma (',') that we should allow, in order to ease reading of big numbers like:

1.000.000,12 or 1,000,000.12 depending on the Locale.

https://github.com/rjimgal/jbehave-bigdecimal-converter project demonstrates how '0x1A' is converted into BigDecimal 1, while one could expect NumberConverter to support hex inputs.","non-feature containing"
"NumberFormat instance in ParameterConverters.NumberConverter is not threadsafe I have submitted a pull request for jbehave-core to make NumberFormat threadsafe.","non-feature containing"
"NumberFormatException when trying to convert parameters to BigDecimal with German Locale When using a German localized number with group separators and decimals, a conversion to BigDecimal fails with a {{NumberFormatException}}. For German, group separators are dots, decimal separator is a comma (just the other way round of the US version). 

In the following test class, the first case is green, the second fails with 

{noformat} 
org.jbehave.core.steps.ParameterConverters$ParameterConvertionFailed: 1.000.000,01 
at org.jbehave.core.steps.ParameterConverters$NumberConverter.convertValue(ParameterConverters.java:256) 
at de.westlb.jets.xce.jbehave.tools.NumberFormatTest.jbehaveConverter(NumberFormatTest.java:39) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
at java.lang.reflect.Method.invoke(Method.java:597) 
at org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99) 
... 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) 
Caused by: java.lang.NumberFormatException 
at java.math.BigDecimal.<init>(BigDecimal.java:453) 
at java.math.BigDecimal.<init>(BigDecimal.java:728) 
at org.jbehave.core.steps.ParameterConverters$NumberConverter.convertValue(ParameterConverters.java:247) 
... 21 more 
{noformat} 

Putting a breakpoint in the BigDecimal constructor reveals it is fed a String ""1.000.000.000.00"" which is obviously wrong. I suspect, the ""canonicalization"" of the original String breaks it. 

{code:title=Test.java} 
public class NumberFormatTest { 

private static final BigDecimal EXPECTED = new BigDecimal(""1000000.01""); 
private final String localizedString = ""1.000.000,01""; 
private DecimalFormat germanNumbers; 

@Before 
public void setup() { 
germanNumbers = (DecimalFormat) DecimalFormat 
.getNumberInstance(Locale.GERMAN); 
germanNumbers.setParseBigDecimal(true); 

} 

@Test 
public void plainConverter() throws Exception { 
Number parse = germanNumbers.parse(localizedString); 
assertEquals(EXPECTED, parse); 
} 

@Test 
public void jbehaveConverter() throws Exception { 
ParameterConverters.NumberConverter numberConverter = new ParameterConverters.NumberConverter( 
germanNumbers); 
Object v = numberConverter.convertValue(localizedString, 
BigDecimal.class); 
assertEquals(EXPECTED, v); 

} 
{code}","non-feature containing"
"NumberFormatException when using Transformer for ExampleTable Hi,

So basically this is all that's required to break [this|http://jbehave.org/reference/stable/tabular-parameters.html] (Tabular Parameters) feature https://github.com/RodrigoQuesadaDev/JBehaveIssueAsParametersNumberFormatException/blob/master/src/test/java/com/rodrigodev/example/example_story.story

The problem is caused by the code referenced on JBEHAVE-1031 (StepCreator#isTable).

How to reproduce: https://github.com/RodrigoQuesadaDev/JBehaveIssueAsParametersNumberFormatException

PS: Also, please try to address JBEHAVE-1196 (or at least reply-to/read it) as soon as possible, that's a critical issue that I think should be solved as soon as possible (because it basically gives a misleading feeling of confidence in the current health of the project).

Thanks,
Rodrigo","non-feature containing"
"Of multiple exclusion meta filters only one is evaluated Assuming meta info 
{noformat} 
Meta: 
@environment all 
@skip 
{noformat} 

the following filter may not exclude the scenario, although it should: 

{noformat} 
-environment preview -skip 
{noformat} 

Method {{match}} in {{MetaFilter}} returns immediately when one filter expression does not match. If ""environment"" is tested before ""skip"", {{match}} will return {{false}}, and scenario will not be excluded. The logic should be changed such that {{match}} will return {{true}}, iff any exclusion filter matches. 

The actual order of evaluation depends on the order of property names returned by #getPropertyNames, which appears to be alphabetical. 

{noformat} 
private boolean match(Properties properties, Meta meta) { 
for (Object key : properties.keySet()) { 
String property = (String) properties.get(key); 
for (String metaName : meta.getPropertyNames()) { 
if (key.equals(metaName)) { 
String value = meta.getProperty(metaName); 
if (StringUtils.isBlank(value)) { 
return true; 
} else if (property.contains(""*"")) { 
return value.matches(property.replace(""*"", "".*"")); 
} 
return properties.get(key).equals(value); 
} 
} 
} 
return false; 
} 
{noformat}","non-feature containing"
"Only Parentheses are escaped in DollarStepPatternBuilder DollarStepPatternBuilder escapes only () of all regexp characters leading to failing patterns when applied later or to patterns matching stuff that is not intented.

Other Regexp Chars that should be escaped: []{}?^.*+","non-feature containing"
"Only output broken scenarios Given I have many scenarios, some of which are broken
Given I choose not to output working scenarios
When I run the build
Then I should only see the output from broken scenarios","feature containing"
"Ordering of running stories Are there are any ""official"" way how to set up ordering of running stories? I know that it's not ""BDD way"" but still. We have some initial stories and some close stories on project. Now it's in folders ""aaa_init"" and ""zzz_stop"" and I don't like that way. ","feature containing"
"Our build script appears to be running some behaviours three times each. Are we picking up some AllBehaviours as well as the Behaviours themselves somewhere?","non-feature containing"
"Outcomes table doesn't work with a boolean comparison that is false This outcome: 

outcomes.addOutcome(""Test"", true, equalTo(false)); 

gives this error: 

Error on line 94, column 100 in ftl/jbehave-html-output.ftl Expecting a string, date or number here, Expression value is instead a freemarker.ext.beans.BooleanModel The problematic instruction: ---------- ==> ${value?html} [on line 94, column 98 in ftl/jbehave-html-output.ftl] in user-directive renderOutcomeValue [on line 88, column 41 in ftl/jbehave-html-output.ftl] in user-directive renderOutcomes [on line 100, column 23 in ftl/jbehave-html-output.ftl] in user-directive renderStep [on line 138, column 1 in ftl/jbehave-html-output.ftl] ---------- Java backtrace for programmers: ---------- freemarker.core.NonStringException: ..... 

it works with true/true.","non-feature containing"
"OutcomesTable not being reported Regression due to the introduction of the UUIDExceptionWrapper: the wrapped OutcomesFailed exception is not detected and the OutcomesTable is not reported.","non-feature containing"
"OutcomesTable with date values makes an error in freemarker When using OutcomesTable with some date values to validate, there's a problem with the freemarker plugin. 
Freemarker seems to expect the .ftl file to include the date part to render, as specified in the exception. 
AFAIK, i don't have any control under the ftl generation... 

java.lang.RuntimeException: ftl/jbehave-xml-output.ftl 
at org.jbehave.core.reporters.TemplateableOutput.write(TemplateableOutput.java:182) 
at org.jbehave.core.reporters.TemplateableOutput.afterStory(TemplateableOutput.java:171) 
at org.jbehave.core.reporters.DelegatingStoryReporter.afterStory(DelegatingStoryReporter.java:49) 
at org.jbehave.core.reporters.ConcurrentStoryReporter.afterStory(ConcurrentStoryReporter.java:125) 
at org.jbehave.core.embedder.StoryRunner.runCancellable(StoryRunner.java:316) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:211) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:172) 
at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:229) 
at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201) 
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303) 
at java.util.concurrent.FutureTask.run(FutureTask.java:138) 
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
at java.lang.Thread.run(Thread.java:662) 
Caused by: org.jbehave.core.reporters.FreemarkerProcessor$FreemarkerProcessingFailed: Freemarker failed to process template ftl/jbehave-xml-output.ftl using configuration freemarker.template.Configuration@44f942c4 and data model {story=org.jbehave.core.reporters.TemplateableOutput$OutputStory@488e753c, keywords=org.jbehave.core.reporters.TemplateableOutput$OutputKeywords@b2db5b} 
at org.jbehave.core.reporters.FreemarkerProcessor.process(FreemarkerProcessor.java:25) 
at org.jbehave.core.reporters.TemplateableOutput.write(TemplateableOutput.java:179) 
... 13 more 
Caused by: freemarker.template.TemplateModelException: Can't convert the date to string, because it is not known which parts of the date variable are in use. Use ?date, ?time or ?datetime built-in, or ?string.<format> or ?string(format) built-in with this date. 
at freemarker.core.Environment.formatDate(Environment.java:765) 
at freemarker.core.Expression.getStringValue(Expression.java:105) 
at freemarker.core.Expression.getStringValue(Expression.java:93) 
at freemarker.core.DollarVariable.accept(DollarVariable.java:76) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.MixedContent.accept(MixedContent.java:92) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.IteratorBlock$Context.runLoop(IteratorBlock.java:167) 
at freemarker.core.Environment.visit(Environment.java:417) 
at freemarker.core.IteratorBlock.accept(IteratorBlock.java:102) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.MixedContent.accept(MixedContent.java:92) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.Macro$Context.runMacro(Macro.java:172) 
at freemarker.core.Environment.visit(Environment.java:603) 
at freemarker.core.UnifiedCall.accept(UnifiedCall.java:106) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.ConditionalBlock.accept(ConditionalBlock.java:79) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.MixedContent.accept(MixedContent.java:92) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.Macro$Context.runMacro(Macro.java:172) 
at freemarker.core.Environment.visit(Environment.java:603) 
at freemarker.core.UnifiedCall.accept(UnifiedCall.java:106) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.IteratorBlock$Context.runLoop(IteratorBlock.java:167) 
at freemarker.core.Environment.visit(Environment.java:417) 
at freemarker.core.IteratorBlock.accept(IteratorBlock.java:102) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.MixedContent.accept(MixedContent.java:92) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.IfBlock.accept(IfBlock.java:82) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.MixedContent.accept(MixedContent.java:92) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.IteratorBlock$Context.runLoop(IteratorBlock.java:167) 
at freemarker.core.Environment.visit(Environment.java:417) 
at freemarker.core.IteratorBlock.accept(IteratorBlock.java:102) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.MixedContent.accept(MixedContent.java:92) 
at freemarker.core.Environment.visit(Environment.java:210) 
at freemarker.core.Environment.process(Environment.java:190) 
at freemarker.template.Template.process(Template.java:237) 
at org.jbehave.core.reporters.FreemarkerProcessor.process(FreemarkerProcessor.java:23) 
... 14 more","non-feature containing"
"Output Sauce session id in the format expected by the Sauce CI plugins Pull request by Ross Rowe: 

https://github.com/jbehave/jbehave-web/pull/8","feature containing"
"Output from scenarios with steps is not quite right. I'm getting the output:

Given ""utility scenarios"" from ""the first glyph is displayed on the board""
When the player presses the drop key
Then the glyph should fall to the bottom
When time passes
and the glyph segments should become junk
and the next glyph should appear

This isn't quite right.","non-feature containing"
"Output pending scenarios as well as broken when option to break build on pending is selected Given I have chosen to break the build on pending scenarios
Given I have several scenarios, some of which are pending
When I run the build
Then I should see the pending scenarios in the output","feature containing"
"Parameter value is not propagated from examples table to nested steps of composed step *Given* some parameterized step and another step composed of the first step:

{code}
@Given(""some state with $param"")
public void someStep(String param) {
  // ...
}

@Given(""some another state with $param"")
@Composite(steps = {
""Given some state with <param>""
})
public void composedStep(String param) {}
{code}

*When* JBehave will execute scenario which takes parameter value for composed step from examples table:

{code}
Scenario:

Given another state with <P>

Examples:
| P |
| 1 |
{code}

*Then* someStep(String param) will be called with wrong value ""<P>"" but at the same time composedStep(String param) will be called with correct value ""1"".","non-feature containing"
"ParameterConverters - NumberFormatException exception java.lang.NumberFormatException: multiple points 
at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1084) 
at java.lang.Double.parseDouble(Double.java:510) 
at java.text.DigitList.getDouble(DigitList.java:151) 
at java.text.DecimalFormat.parse(DecimalFormat.java:1303) 
at java.text.NumberFormat.parse(NumberFormat.java:331) 
at org.jbehave.core.steps.ParameterConverters$NumberConverter.convertValue(ParameterConverters.java:231) 
at org.jbehave.core.steps.ParameterConverters.convert(ParameterConverters.java:141) 
at org.jbehave.core.steps.StepCreator.convertParameters(StepCreator.java:198) 
at org.jbehave.core.steps.StepCreator.access$800(StepCreator.java:27) 
at org.jbehave.core.steps.StepCreator$ParameterizedStep.parametriseStep(StepCreator.java:467) 
at org.jbehave.core.steps.StepCreator$ParameterizedStep.perform(StepCreator.java:425) 
at org.jbehave.core.embedder.StoryRunner$FineSoFar.run(StoryRunner.java:436) 
at org.jbehave.core.embedder.StoryRunner.runStepsWhileKeepingState(StoryRunner.java:419) 
at org.jbehave.core.embedder.StoryRunner.runScenarioSteps(StoryRunner.java:384) 
at org.jbehave.core.embedder.StoryRunner.runIt(StoryRunner.java:259) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:181) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:164) 
at org.jbehave.core.embedder.Embedder$EnqueuedStory.call(Embedder.java:620) 
at org.jbehave.core.embedder.Embedder$EnqueuedStory.call(Embedder.java:584) 
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303) 
at java.util.concurrent.FutureTask.run(FutureTask.java:138) 
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
at java.lang.Thread.run(Thread.java:619)","non-feature containing"
"ParameterConverters throwing ConcurrentModificationException java.util.ConcurrentModificationException 
at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:372) 
at java.util.AbstractList$Itr.next(AbstractList.java:343) 
at org.jbehave.core.steps.ParameterConverters.convert(ParameterConverters.java:116) 
at org.jbehave.core.steps.StepCreator.convertParameters(StepCreator.java:198) 
at org.jbehave.core.steps.StepCreator.access$800(StepCreator.java:27) 
at org.jbehave.core.steps.StepCreator$ParameterizedStep.parametriseStep(StepCreator.java:465) 
at org.jbehave.core.steps.StepCreator$ParameterizedStep.perform(StepCreator.java:424) 
at com.foobar.config.ScenarioBasedStoryRunner$FineSoFar.run(ScenarioBasedStoryRunner.java:443) 
at com.foobar.config.ScenarioBasedStoryRunner.runStepsWhileKeepingState(ScenarioBasedStoryRunner.java:429) 
at com.foobar.config.ScenarioBasedStoryRunner.runScenarioSteps(ScenarioBasedStoryRunner.java:393) 
at com.foobar.config.ScenarioBasedStoryRunner.runIt(ScenarioBasedStoryRunner.java:269) 
at com.foobar.config.ScenarioBasedStoryRunner.run(ScenarioBasedStoryRunner.java:185) 
at com.foobar.config.ScenarioBasedStoryRunner.run(ScenarioBasedStoryRunner.java:166) 
at org.jbehave.core.embedder.Embedder$EnqueuedStory.call(Embedder.java:594) 
at org.jbehave.core.embedder.Embedder$EnqueuedStory.call(Embedder.java:558) 
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303) 
at java.util.concurrent.FutureTask.run(FutureTask.java:138) 
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
at java.lang.Thread.run(Thread.java:619)","non-feature containing"
"Parameterised scenarios are skipped when filtered by story meta Scenarios parameterised by examples are skipped if scenario level meta filtering is used. This seems to be a direct result of changes introduced by JBEHAVE-846. 

eg: 
{code:xml} 
<metaFilters> 
<metaFilter>+foo *</metaFilter> 
</metaFilters> 
{code} 

{code} 
Meta: 
@foo bar 

Scenario: 

Given I am a 'Partner' user 

When a 'Business Support' case is created with: 
|name |value | 
|Code |<Code> | 
|Process |<Process> | 
|Sub Process |<Sub Process> | 

Then the case has 1 item in basket 'Partner Team' 

Examples: 
|<Code> |<Process> |<Sub Process> | 
|XYZ |Business Support |Bank Statement Upload | 
{code} 

Execution of the above results in the before and after steps being executed but all scenario steps being skipped. 

Debugging the code shows that the check: 
{code} 
if ( !context.filter.allow(parameterMeta) ){ 
continue; 
} 
{code} 
in the method: 
{code:title=StoryRunner.java} 
private void runScenariosParametrisedByExamples(RunContext context, Scenario scenario, Meta storyAndScenarioMeta) 
throws Throwable { 
ExamplesTable table = scenario.getExamplesTable(); 
reporter.get().beforeExamples(scenario.getSteps(), table); 
Keywords keywords = context.configuration().keywords(); 
for (Map<String, String> scenarioParameters : table.getRows()) { 
Meta parameterMeta = parameterMeta(keywords, scenarioParameters); 
if ( !context.filter.allow(parameterMeta) ){ 
continue; 
} 
reporter.get().example(scenarioParameters); 
if (context.configuration().storyControls().resetStateBeforeScenario()) { 
context.resetState(); 
} 
runBeforeOrAfterScenarioSteps(context, scenario, storyAndScenarioMeta, Stage.BEFORE, ScenarioType.EXAMPLE); 
addMetaParameters(scenarioParameters, storyAndScenarioMeta); 
runGivenStories(scenario.getGivenStories(), scenarioParameters, context); 
runScenarioSteps(context, scenario, scenarioParameters); 
runBeforeOrAfterScenarioSteps(context, scenario, storyAndScenarioMeta, Stage.AFTER, ScenarioType.EXAMPLE); 
} 
reporter.get().afterExamples(); 
} 
{code} 
always passes resulting in 'continue' and the scenario execution being skipped. 

Using the example above, context.filter='+foo *', but because the meta parameter 'foo' is at scenario level and not at examples table level, parameterMeta is empty and the filter.allow() is false resulting in 'continue'.","non-feature containing"
"Parameters surrounded by quotes are not correct in reports When parameters surrounded by quotes - not marked like (( param ))

because parameters will marked if surrounded by spaces only

I think not always parameter surrounded by spaces. problem actual not only for quotes

problem here:
https://github.com/jbehave/jbehave-core/blob/e5bb59651742b7a4a116142b415ad6c8d958399d/jbehave-core/src/main/java/org/jbehave/core/steps/StepCreator.java#L269","non-feature containing"
"Parametrised GivenStories GivenStories could be parametrised, using the same mechanism of the ExamplesTable and the named parameters. 

If a GivenStory path has an anchor with a number, e.g. 

GivenStories: /path/to/precondition.story#{0} 

then the number is assumed to be the row of the ExamplesTable containing the required parameters (if present).","feature containing"
"Parametrised Scenarios with empty Examples shouldn't be run Parametrised Scenarios with empty Examples shouldn't be run

{code}
Given a stock of <symbol> and a <threshold>
When the stock is traded at <price>
Then the alert status should be <status>
 
Examples:     
|symbol|threshold|price|status|
{code}","non-feature containing"
"Parametrised scenarios should use same mechanism as unparametrised Instead of using a special construct for parametrised scenarios the same mechanism could be re-used if the parametrisation work as a kind of macro, ie before the step is parsed. For example: 

Given my color mixing application 
When selecting color ${color1} 
And selecting color ${color2} 
Then the resulting color should be ${result} 

Examples: 
|color1|color2|result| 
|red|green|yellow| 
|blue|green|cyan| 

In this case I would implement the following in Java: 

@Given(""my color mixing application"") 
public void initApplication() {...} 

@When(""selecting color $color"") 
public void selectColor(String color) {...} 

@Then(""the resulting color should be $result"") 
public void checkResult(String result) {...} 

The point here is that I want only one @When alias which both works with and without parametrisation. 

Another benefit of this would be the possibility to parametrise which step is executed and not only the parameters. Altough I'm not sure that this is a good idea, it is certainly powerful. For example: 

Given my color mixing application 
When ${operation1} color ${color1} 
And ${operation2} color ${color2} 
Then the resulting color should be ${result} 

Examples: 
|operation1|operation2|color1|color2|result| 
|selecting|adding|red|green|yellow| 
|selecting|selecting|blue|green|cyan| 


@When(""adding color $color"") 
public void addColor(String color) {...} 


(Using the ant-style ${} is just an idea to keep compability with the old behaviour, but instead this new behaviour could replace the old one with <> for parameters)","feature containing"
"Parametrised step is rendered incorrectly if there is more than 1 parameter and a table When having exemples tables parameter with other parameter table is not transformed in generated reports 

Error comes from StepCreator 
-> stepText = stepText.replace(NEWLINE, PARAMETER_VALUE_NEWLINE); 
witch is done even if there is a table. 

for instance 
Given table MY_TABLE with data: 
|INSTRUMENT |AMOUNT | 
|AUD_NZD |1000 | 

for step 
@Given(""table $table with data: $examples"") 
public void givenTableWithData(String table, ExamplesTable examples) {","non-feature containing"
"Paranamer doesn't support test steps with lambda-expressions inside Let's implement simple step with lambda-expression inside: 

{code} 
import org.jbehave.core.annotations.When; 
import org.jbehave.core.model.ExamplesTable; 

import java.util.List; 
import java.util.stream.Collectors; 

public class SomeSteps { 
@When(""cat eats $species"") 
public void somethingHappens(ExamplesTable speciesTable) { 
List<String> species = speciesTable.getRows().stream().map(r -> r.get(""Name"")).collect(Collectors.toList()); 
for (String s : species) { 
System.out.println(""Cat eat "" + s); 
} 
} 
} 
{code} 

When JBehave tries to read parameter names following exception occurs: 

{code} 
java.lang.ArrayIndexOutOfBoundsException: 19562 
at com.thoughtworks.paranamer.BytecodeReadingParanamer$ClassReader.accept(BytecodeReadingParanamer.java:554) 
at com.thoughtworks.paranamer.BytecodeReadingParanamer$ClassReader.access$200(BytecodeReadingParanamer.java:337) 
at com.thoughtworks.paranamer.BytecodeReadingParanamer.lookupParameterNames(BytecodeReadingParanamer.java:102) 
at com.thoughtworks.paranamer.CachingParanamer.lookupParameterNames(CachingParanamer.java:75) 
at org.jbehave.core.steps.StepCreator.paranamerParameterNames(StepCreator.java:197) 
at org.jbehave.core.steps.StepCreator.parameterNames(StepCreator.java:134) 
at org.jbehave.core.steps.StepCreator.access$900(StepCreator.java:36) 
at org.jbehave.core.steps.StepCreator$ParametrisedStep.parametriseStep(StepCreator.java:637) 
at org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:592) 
at org.jbehave.core.embedder.StoryRunner$FineSoFar.run(StoryRunner.java:535) 
at org.jbehave.core.embedder.StoryRunner.runStepsWhileKeepingState(StoryRunner.java:515) 
at org.jbehave.core.embedder.StoryRunner.runScenarioSteps(StoryRunner.java:479) 
at org.jbehave.core.embedder.StoryRunner.runStepsWithLifecycle(StoryRunner.java:445) 
at org.jbehave.core.embedder.StoryRunner.runCancellable(StoryRunner.java:305) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:220) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:181) 
at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:235) 
at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:207) 
at java.util.concurrent.FutureTask.run(FutureTask.java:266) 
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) 
at java.lang.Thread.run(Thread.java:745) 
{code} 

But if I replace lambda expression with anonymous class, all works fine: 

{code} 
@When(""cat eats $species"") 
public void somethingHappens(ExamplesTable speciesTable) { 
List<String> species = speciesTable.getRows().stream().map(new Function<Map<String, String>, String>() { 
@Override 
public String apply(Map<String, String> row) { 
return row.get(""Name""); 
} 
}).collect(Collectors.toList()); 
for (String s : species) { 
System.out.println(""Cat eat "" + s); 
} 
} 
{code} 

This bug was also reported early for Thucydides: https://java.net/jira/browse/THUCYDIDES-247","non-feature containing"
"Parent story Meta is not passed to given stories *Steps to reproduce*
# Run {{org.jbehave.examples.core.stories.GivenStoriesParametrisedByMeta}}
# Check log:
{code}
Running story org/jbehave/examples/core/stories/given_stories_parametrised_by_meta.story
A story using GivenStories at story level parametrised by meta properties
(org/jbehave/examples/core/stories/given_stories_parametrised_by_meta.story)
Meta:
@assetClass FX
@symbol STK1
@theme parametrisation
@threshold 1.0

Before Story ...
GivenStories:
org/jbehave/examples/core/stories/parametrised.story 


(org/jbehave/examples/core/stories/parametrised.story)
Meta:
@theme parametrisation

Before Given Story ...
Scenario: 
Before Any Scenario ...
Before Normal Scenario with theme: parametrisation
Given the asset class <assetClass>
Given a stock of <symbol> and a <threshold> (PENDING)
After Any Scenario ...
After Normal Scenario with any outcome ...
After Normal Scenario with failed outcome with theme 'parametrisation'.

After Given Story ...

Scenario: A scenario that is executed after the given stories parametrised by meta
Before Any Scenario ...
Before Normal Scenario with theme: parametrisation
When the stock is traded at price 1.1 (FAILED)
(java.lang.NullPointerException)
Then the alert status is ON (NOT PERFORMED)
After Any Scenario ...
After Normal Scenario with any outcome ...
After Normal Scenario with failed outcome with theme 'parametrisation'.

java.lang.NullPointerException
	at org.jbehave.examples.core.steps.TraderSteps.theStockIsTraded(TraderSteps.java:161)
	(reflection-invoke)
	at org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)
	at org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)
...
 ... Browser has been put to rest 


After Story with theme 'parametrisation'.
{code}

*Actual result*: meta from parent story is not passed to given story
*Expected*: meta from parent story is passed to given story

Failed build: https://travis-ci.org/valfirst/jbehave-core/builds/276045812","non-feature containing"
"Parser skips lines from story, if keyword is separated from text without space char. Given aaa bbb ccc 
And<TAB><TAB>ddd eee 
Then fff 

Line staring with ""And"" is skipped if there is no space character between ""And"" and ""ddd"". 

Probable fix: RegexStoryParser.java:239 
""(("" + initialStartingWords + "") (.)*?)\\s*(\\Z|"" + followingStartingWords + ""|\\n"" 
==> 
""(("" + initialStartingWords + "")\\s(.)*?)\\s*(\\Z|"" + followingStartingWords + ""|\\n""","non-feature containing"
"Parsing recursive composite steps fail if the composite steps don't use any parameters Problem Statement: 
When I have a composite step that takes parameters for some of the steps but not others, then the StepCreator doesn't take that into account, and the Matcher throws and IllegalState exception because it has no groups. 

Steps to Reproduce: 
See attached TestCase 

Recommended Change: 
Only two changes in the StepCreator class, matchedParameters method. 
Move the Hashmap creation to the beginning of the method, and put an if statement around the stepMatcher.find() statement. See altered method also attached.","non-feature containing"
"PatternScenarioParser should depend on KeyWords and not Configuration PatternScenarioParser should depend only on the dependency it strictly requires (KeyWords) rather than the whole of the
Configuration. 

The constructor PatternScenarioParser(Configuration) should be deprecated but kept for backward compatibility.","feature containing"
"PatternVariableBuilder can be extremely inefficient in some cases When org.jbehave.core.steps.PatternVariantBuilder#variantsFor is called, the following regex is used - {code} ""(.*?)?(\\{((.*?)(\\|)?)*?\\})(.*)""{code}. 
Matching with this regex can be very lengthy and CPU intensive when there is an unmatched curly bracket for example, like here: 
{code}create entity of type $entityType {set properties $propertyNames to values $propertyValues{code}","feature containing"
"Pending step failures not detected in stories view generation Pending steps should cause a build failure in the view generation, if the FailingUponPendingStep strategy is configured.","non-feature containing"
"Pending step method generation fails with And steps When I run over a scenario with 'and' steps, pending method generation fails. The same scenario without the 'and' steps generates methods without any problem (and is jolly useful). 

The failure happens in 3.3.1 and in 3.4-SNAPSHOT, commit c27f34. 

The failure results from an NPE; JBehave knows the story has failed, but the run times out and then exits with 'pass' from the JUnit POV. Is that the expected behaviour, btw? 

Failing scenario: 

Scenario: When I log in with good credentials after having been redirected to the login page from my intended page, I am redirected to my intended page 

Given I am not logged in 
And I have been redirected from my intended page to the login page 
When I log in with good credentials 
Then I am redirected to my intended page 
And I am logged in 

Console output: 

Scenario: When I log in with good credentials after having been redirected to the login page from my intended page, I am redirected to my intended page 
Given I am not logged in (PENDING) 
And I have been redirected from my intended page to the login page (PENDING) 
When I log in with good credentials (PENDING) 
Then I am redirected to my intended page (PENDING) 
And I am logged in (PENDING) 
Failed to run story package.name.here/login/i_can_log_in_with_correct_credentials.story 
java.lang.NullPointerException 
at org.jbehave.core.steps.PendingStepMethodGenerator.stepStartsWithWord(PendingStepMethodGenerator.java:86) 
at org.jbehave.core.steps.PendingStepMethodGenerator.findStepType(PendingStepMethodGenerator.java:64) 
at org.jbehave.core.steps.PendingStepMethodGenerator.generateMethod(PendingStepMethodGenerator.java:32) 
at org.jbehave.core.embedder.StoryRunner.generatePendingStepMethods(StoryRunner.java:287) 
at org.jbehave.core.embedder.StoryRunner.runScenarioSteps(StoryRunner.java:272) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:170) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:95) 
at org.jbehave.core.embedder.Embedder$EnqueuedStory.call(Embedder.java:686) 
at org.jbehave.core.embedder.Embedder$EnqueuedStory.call(Embedder.java:1) 
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303) 
at java.util.concurrent.FutureTask.run(FutureTask.java:138) 
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) 
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) 
at java.lang.Thread.run(Thread.java:680) 
Story package.name.here/login/i_can_log_in_with_correct_credentials.story has timed out after 61 seconds 
Generating reports view to '/Users/jonathanwoods/Documents/workspaces/main/mobile/target/jbehave' using formats '[stats, console, txt, html, xml]' and view properties '{decorateNonHtml=true}' 
Reports view generated with 5 stories (of which 2 pending) containing 3 scenarios (of which 0 failed and 3 pending)","non-feature containing"
"Pending steps methods leave invalid chars in the method name Pending steps methods remove a few invalid chars from the method name, however the following should be removed as well: 

$ \ / ( ) { } [ ] 

slash/backslash and the different brackets are not allowed, $ is allowed but is reserved for internal identifiers and should not be used normally (IIRC)","non-feature containing"
"Pending steps methods should remove even more characters Following up on JBEHAVE-681, I noticed that even more characters should be removed when creating the method name (e.g. %) 

I have changed the method name filter to use isJavaIdentifierPart and added a unit test to check for all characters","non-feature containing"
"Pending steps optionally break the build Given a scenario with pending steps
Given I choose to break the build on pending steps
When I run the scenario
Then my build should break","feature containing"
"PendingStepMethodGenerator doesn't put a space between ) and { When copying the generated pending step methods I noticed that the space is missing between the opening brace and the first curly bracket for the method definition. 

I think it is more consistent to follow the convention for the example methods as well. 

This appears in the unit tests for PendingStepMethodGeneratorBehaviour as well, so I had to adapt these as well.","feature containing"
"Per-stories lifecycle steps requires same-thread executor service As of version 3.5, JBehave Embedder allows the specification of a custom ExecutorService for the story execution. 

Per-stories lifecycle steps (PerStoriesSeleniumSteps and PerStoriesWebDriverSteps) will require a same-thread executor service, e.g. the one provided by Guava's MoreExecutors.sameThreadExecutor(). 

Javadoc should be updated to make the use aware of this requirements. 

Examples should show how to support it per-stories lifecycle.","feature containing"
"PerformableTree is adding Not Allowed ExamplePerformableScenario instances PerformableTree is adding ExamplePerformableScenario instances that are not allowed due to Meta Filters.

This causes a significant amount of calls to StepFinder.prioritise() method, resulting in a performance degradation, specially when using Levenshtein Distance.

Later they will not be executed.

https://github.com/rjimgal/jbehave4-step-priority project demonstrates this.","non-feature containing"
"PerformableTree is adding empty PerformableScenario instances causing a NPE PerformableTree is adding PerformableScenario instances that do not contain any ExamplePerformableScenario instance, causing later a NPE when trying to perform them, since they are handled like a NormalPerformableScenario.

NPE is thrown at PerformableTree Class line 876.

This regression was introduced by JBEHAVE-1117 (JBehave 4.0.4 version).

Maven project https://github.com/rjimgal/jbehave4-empty-example-scenario demonstrates this.","non-feature containing"
"Plugin execution not covered by lifecycle configuration Generate JBehave project from archetype produces an invalid pom.xml file. 

""Plugin execution not covered by lifecycle configuration: org.jbehave:jbehave-maven-plugin:4.0-beta-4:unpack-view-resources (execution: unpack-view-resources, phase: process-resources)"" 

<plugins> 
<plugin> 
<groupId>org.jbehave</groupId> 
<artifactId>jbehave-maven-plugin</artifactId> 
<version>${jbehave.core.version}</version> 
<executions> 
->>> <execution> 
<id>unpack-view-resources</id> 
<phase>process-resources</phase> 
<goals> 
<goal>unpack-view-resources</goal> 
</goals> 
</execution> 
<execution> 
<id>embeddable-stories</id> 
<phase>integration-test</phase> 
<configuration> 
<includes> 
<include>${embeddables}</include> 
</includes> 
<excludes /> 
<ignoreFailureInStories>true</ignoreFailureInStories> 
<ignoreFailureInView>false</ignoreFailureInView> 
<threads>1</threads> 
<metaFilters> 
<metaFilter></metaFilter> 
</metaFilters> 
</configuration> 
<goals> 
<goal>run-stories-as-embeddables</goal> 
</goals> 
</execution> 
</executions> 
</plugin>","non-feature containing"
"Plugin not available on Eclipse 3.3/Europa After installation of plugin in Eclipse 3.3/Europa without errors, the plugin functionality does not seem to be available. 

Right-clicking on a behaviour class does not offer the ""Verify Behaviour"" option in ""Run As""","non-feature containing"
"Polish language support This task is depend on https://jira.codehaus.org/browse/JBEHAVE-1059 

Polish leywords are there https://github.com/tomaszuss/jbehave-core/blob/master/jbehave-core/src/main/resources/i18n/keywords_pl.properties","feature containing"
"Possibility to substitute steps in templates I added following functionality (currently only in the scenario usable).
We can define Templates which will be substituted in the scenario with the keyword GivenTemplate: someLabel. This is useful if we have many steps which are the same and therefore would be duplicated and we cannot use the parameterized values to fully cover all necessary steps.
The substitution will take place even before the story parsing is fully completed. This means after the story parsing we will have a scenario without knowing that there has been a template.

More concrete example:

Template: Do something in the beginning
Given a step
When we do something
Then something happens

Scenario:
GivenTemplate: Do something in the beginning
When we have done something
Then we can continue with this

Which would be resolved to:

Scenario:
Given a step
When we do something
Then something happens
When we have done something
Then we can continue with this

This would be a very useful functionality for us. Feel free to comment and provide ideas for improvement :)","feature containing"
"PostStoryStatisticsCollector produces incomplete stats with givenstories If we have a story with two scenarios, and one of the scenario with a givenstory, the statistics collector won't report anything at all 

result: 
the respective story...*.stats file is empty 

reason: 
writeData() is never invoked, or only after reset 

{code} 
Scenario: A scenario in which the user can run additional stories as pre-requisites 

GivenStories: path/to/precondition.story 

Given ... // normal scenario steps 


Scenario: Another scenario 

Given ... // normal scenario steps 
{code} 

*update:* just execute the examples/core project and check the stats -> most of the stories have all counters on ""0""","non-feature containing"
"Pre- and postcondition per scenario @BeforeScenario @AfterStory etc. in story description Problem: 
The different ways to define a single scenario and its logic makes it hard to understand test logic. 

Example: 
I have two test suites calles RegistrationProcessStory ond AccountingStory. 

The RegistrationProcessStory is a jbehave story containing logic for test data preparation like BeforeStory, AfterStory and BeforeScenario(onOutcome=Failure) etc. 

The AccountingStory contains similar test data logic. 

A Given statement is something like a BeforeScenario (i.e. @BeforeScenario(uponType = ScenarioType.EXAMPLE)). 

So my problem is, that we have test data preparation logic in a .story file. but we could have another logic hidden in the implementation of a testsuite. (@BeforeScenario) On the other hand, test cleanup logic can't be described in a .story file, but in the TestSuite logic (@AfterScenario, @AfterStory) 

Solution: 
I would like to have an extension to the BDD vocabulary, that enables pre- and postcondition descriptions in a .story file. 

This could be a simple mapping of the annotations to a keyword like: 

Scenario: User is operator by default 
BeforeScenario create user <login> with data <dataentries> 
Given user <login> on login page 
Then ensure operator link is visible 
AfterScenario delete user <login> 

What do you think about the idea? 

Greetings, Olmo","feature containing"
"PrintStreamOutput not threadsafe Field cause needs to be thread local as it is mutable state per story, and stories share instances of PrintStreamOutput","non-feature containing"
"Printing Lifecyle for Steps without Outcomes Fails If a Lifecyle step is creating with a Step value without an outcome, printing the lifecyle fails with NullPointerException.

The issue is with a Steps class in the LifeCycle.java class provides a constructor which can create a Steps object without specifying an outcome. It then assigns the outcome as null to another constructor.

public Steps(List<String> steps) {
			this(null, steps);
}

Therefore, if a Lifecycle is created with a list of steps and without an outcome, the outcomes are initialized to null.

This will cause a problem when the lifecycle is printed using a PrintStreamOutput, in this block in the lifecycle(Lifecycle) method,

public void lifecyle(Lifecycle lifecycle) {
        if (!lifecycle.isEmpty()) {
            print(format(""lifecycleStart"", ""{0}\n"", keywords.lifecycle()));
            if (!lifecycle.getBeforeSteps().isEmpty()) {
                print(format(""lifecycleBeforeStart"", ""{0}\n"", keywords.before()));
                print(lifecycle.getBeforeSteps());
                print(format(""lifecycleBeforeEnd"", """"));
            }
            if (!lifecycle.getAfterSteps().isEmpty()) {
                print(format(""lifecycleAfterStart"", ""{0}\n"", keywords.after()));
               *{color:red} for ( org.jbehave.core.annotations.AfterScenario.Outcome outcome : lifecycle.getOutcomes() ){{color}*
                	print(format(""lifecycleOutcome"", ""{0} {1}\n"", keywords.outcome(), i18n(outcome)));
                	print(lifecycle.getAfterSteps(outcome));
                }
                print(format(""lifecycleAfterEnd"", """"));
            }
            print(format(""lifecycleEnd"", ""\n""));
        }
    }

*Possible Fixes*:
1) Add a null check to lifecycle() method of the PrintStreamOutput class, to skip printing outcomes that are null.

2) If creating a step without an outcome should not be permitted, the contructor for Lifecycle.Steps() without the outcome should be removed and the constructor which accepts Outcome as input should throw an exception if outcome passed in is null.
		","non-feature containing"
"Problem to run TraderAnnotatedPathRunner when running the example from 4.0 branch I got this error: 
{noformat} 
Processing system properties {java.awt.headless=true} 
System property 'java.awt.headless' set to 'true' 
Using controls EmbedderControls[batch=false,skip=false,generateViewAfterStories=true,ignoreFailureInStories=true,ignoreFailureInView=true,verboseFailures=false,verboseFiltering=false,storyTimeoutInSecs=100,threads=1] 
Generating reports view to '/Users/cvgaviao/Development/C4Biz_Projects/JBehave/jbehave-core/examples/trader-annotations/target/jbehave' using formats '[console, txt, html, xml, stats]' and view properties '{defaultFormats=stats, decorateNonHtml=true, viewDirectory=view, decorated=ftl/jbehave-report-decorated.ftl, reports=ftl/jbehave-reports-with-totals.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl}' 
Reports view generated with 0 stories (of which 0 pending) containing 0 scenarios (of which 0 pending) 
org.jbehave.core.io.StoryResourceNotFound: Story path 'parametrised.story' not found by class loader sun.misc.Launcher$AppClassLoader@4eb0a518 
at org.jbehave.core.io.LoadFromClasspath.resourceAsStream(LoadFromClasspath.java:44) 
at org.jbehave.core.io.LoadFromClasspath.loadResourceAsText(LoadFromClasspath.java:29) 
at org.jbehave.core.io.LoadFromClasspath.loadStoryAsText(LoadFromClasspath.java:38) 
at org.jbehave.core.embedder.PerformableTree.storyOfPath(PerformableTree.java:193) 
at org.jbehave.core.embedder.PerformableTree.performableGivenStories(PerformableTree.java:177) 
at org.jbehave.core.embedder.PerformableTree.performableScenario(PerformableTree.java:141) 
at org.jbehave.core.embedder.PerformableTree.performableStory(PerformableTree.java:98) 
at org.jbehave.core.embedder.PerformableTree.addStories(PerformableTree.java:68) 
at org.jbehave.core.embedder.StoryManager.runStories(StoryManager.java:78) 
at org.jbehave.core.embedder.Embedder.runStoriesAsPaths(Embedder.java:203) 
at org.jbehave.core.junit.AnnotatedPathRunner.run(AnnotatedPathRunner.java:80) 
at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50) 
at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) 
{noformat} 

It seems that it's only the relative file lookup that fails.","non-feature containing"
"Problems with jBehave, Maven and Windows I am attempting to use the Maven plugin for jBehave with the project that I have attached. After some help from Mauro on the users mailing list I am left with the following when I run 'mvn integration-test'. 

C:\Workspace\proview>mvn integration-test 
[INFO] Scanning for projects... 
[INFO] ------------------------------------------------------------------------ 
[INFO] Building Maven Quick Start Archetype 
[INFO] task-segment: [integration-test] 
[INFO] ------------------------------------------------------------------------ 
[INFO] [resources:resources {execution: default-resources}] 
[INFO] Using encoding: 'UTF-8' to copy filtered resources. 
Downloading: http://repository.codehaus.org/org/lunivore/tyburn/1.1/tyburn-1.1.pom 
[INFO] Unable to find resource 'org.lunivore:tyburn:pom:1.1' in repository codehaus (http://repository.codehaus.org) 
Downloading: http://repo1.maven.org/maven2/org/lunivore/tyburn/1.1/tyburn-1.1.pom 
[INFO] Unable to find resource 'org.lunivore:tyburn:pom:1.1' in repository central (http://repo1.maven.org/maven2) 
[INFO] [compiler:compile {execution: default-compile}] 
[INFO] Nothing to compile - all classes are up to date 
[INFO] [resources:testResources {execution: default-testResources}] 
[INFO] Using encoding: 'UTF-8' to copy filtered resources. 
[INFO] [compiler:testCompile {execution: default-testCompile}] 
[INFO] Nothing to compile - all classes are up to date 
[INFO] [surefire:test {execution: default-test}] 
[INFO] Surefire report directory: C:\Workspace\proview\target\surefire-reports 

------------------------------------------------------- 
T E S T S 
------------------------------------------------------- 
Running com.electrostandards.prod.AppTest 
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.172 sec 
Running com.electrostandards.prod.ProViewTest 
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec 

Results : 

Tests run: 2, Failures: 0, Errors: 0, Skipped: 0 

[INFO] [jar:jar {execution: default-jar}] 
[INFO] Building jar: C:\Workspace\proview\target\proview-1.0-SNAPSHOT.jar 
[INFO] [jbehave:run-scenarios {execution: run-scenarios-found}] 
[INFO] Running scenario com.electrostandards.prod.scenarios.ProviewStartsInOfflineMode 
[WARNING] Failure in running scenario com.electrostandards.prod.scenarios.ProviewStartsInOfflineMode 
org.jbehave.scenario.errors.ScenarioNotFoundException: Path 'com/electrostandards/prod/scenarios/proview_starts_in_offline_mode.scenario' could not be found by 
classloader [org.jbehave.scenario.ScenarioClassLoader urls=[/C:/Workspace/proview/target/test-classes/, /C:/Workspace/proview/target/classes/, junit-dep-4.4.jar, hamcrest-core-1.1.jar, freemarker-2.3.16.jar, jbehave-core-2.5.8.jar, commons-lang-2.4.jar, commons-collections-3.2.1.jar, commons-io-1.4.jar, swing-worker-1. 
1.jar, filters-2.0.235.jar, swingx-1.6.jar, tyburn-1.1.jar]] 
at org.jbehave.scenario.parser.ClasspathScenarioDefiner.loadInputStreamFor(ClasspathScenarioDefiner.java:60) 
at org.jbehave.scenario.parser.ClasspathScenarioDefiner.loadScenarioDefinitionsFor(ClasspathScenarioDefiner.java:48) 
at org.jbehave.scenario.ScenarioRunner.run(ScenarioRunner.java:39) 
at org.jbehave.scenario.AbstractScenario.runScenario(AbstractScenario.java:75) 
at org.jbehave.scenario.JUnitScenario.runScenario(JUnitScenario.java:54) 
at org.jbehave.mojo.ScenarioRunnerMojo.execute(ScenarioRunnerMojo.java:36) 
at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180) 
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328) 
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138) 
at org.apache.maven.cli.MavenCli.main(MavenCli.java:362) 
at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
at java.lang.reflect.Method.invoke(Method.java:597) 
at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315) 
at org.codehaus.classworlds.Launcher.launch(Launcher.java:255) 
at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430) 
at org.codehaus.classworlds.Launcher.main(Launcher.java:375) 
[INFO] Running scenario com.electrostandards.prod.scenarios.UserConnectsToTarget 
[WARNING] Failure in running scenario com.electrostandards.prod.scenarios.UserConnectsToTarget 
org.jbehave.scenario.errors.ScenarioNotFoundException: Path 'com/electrostandards/prod/scenarios/user_connects_to_target.scenario' could not be found by classlo 
ader [org.jbehave.scenario.ScenarioClassLoader urls=[/C:/Workspace/proview/target/test-classes/, /C:/Workspace/proview/target/classes/, junit-dep-4.4.jar, hamcrest-core-1.1.jar, freemarker-2.3.16.jar, jbehave-core-2.5.8.jar, commons-lang-2.4.jar, commons-collections-3.2.1.jar, commons-io-1.4.jar, swing-worker-1.1.jar, filters-2.0.235.jar, swingx-1.6.jar, tyburn-1.1.jar]] 
at org.jbehave.scenario.parser.ClasspathScenarioDefiner.loadInputStreamFor(ClasspathScenarioDefiner.java:60) 
at org.jbehave.scenario.parser.ClasspathScenarioDefiner.loadScenarioDefinitionsFor(ClasspathScenarioDefiner.java:48) 
at org.jbehave.scenario.ScenarioRunner.run(ScenarioRunner.java:39) 
at org.jbehave.scenario.AbstractScenario.runScenario(AbstractScenario.java:75) 
at org.jbehave.scenario.JUnitScenario.runScenario(JUnitScenario.java:54) 
at org.jbehave.mojo.ScenarioRunnerMojo.execute(ScenarioRunnerMojo.java:36) 
at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180) 
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328) 
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138) 
at org.apache.maven.cli.MavenCli.main(MavenCli.java:362) 
at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
at java.lang.reflect.Method.invoke(Method.java:597) 
at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315) 
at org.codehaus.classworlds.Launcher.launch(Launcher.java:255) 
at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430) 
at org.codehaus.classworlds.Launcher.main(Launcher.java:375) 
[INFO] Running scenario com.electrostandards.prod.scenarios.UserSelectsCommunicationsPort 
[WARNING] Failure in running scenario com.electrostandards.prod.scenarios.UserSelectsCommunicationsPort 
org.jbehave.scenario.errors.ScenarioNotFoundException: Path 'com/electrostandards/prod/scenarios/user_selects_communications_port.scenario' could not be found by classloader [org.jbehave.scenario.ScenarioClassLoader urls=[/C:/Workspace/proview/target/test-classes/, /C:/Workspace/proview/target/classes/, junit-dep-4.4.jar, hamcrest-core-1.1.jar, freemarker-2.3.16.jar, jbehave-core-2.5.8.jar, commons-lang-2.4.jar, commons-collections-3.2.1.jar, commons-io-1.4.jar, swing-worker- 
1.1.jar, filters-2.0.235.jar, swingx-1.6.jar, tyburn-1.1.jar]] 
at org.jbehave.scenario.parser.ClasspathScenarioDefiner.loadInputStreamFor(ClasspathScenarioDefiner.java:60) 
at org.jbehave.scenario.parser.ClasspathScenarioDefiner.loadScenarioDefinitionsFor(ClasspathScenarioDefiner.java:48) 
at org.jbehave.scenario.ScenarioRunner.run(ScenarioRunner.java:39) 
at org.jbehave.scenario.AbstractScenario.runScenario(AbstractScenario.java:75) 
at org.jbehave.scenario.JUnitScenario.runScenario(JUnitScenario.java:54) 
at org.jbehave.mojo.ScenarioRunnerMojo.execute(ScenarioRunnerMojo.java:36) 
at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:490) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:694) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:556) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:535) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:387) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:348) 
at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:180) 
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:328) 
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:138) 
at org.apache.maven.cli.MavenCli.main(MavenCli.java:362) 
at org.apache.maven.cli.compat.CompatibleMain.main(CompatibleMain.java:60) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
at java.lang.reflect.Method.invoke(Method.java:597) 
at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315) 
at org.codehaus.classworlds.Launcher.launch(Launcher.java:255) 
at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430) 
at org.codehaus.classworlds.Launcher.main(Launcher.java:375) 
[INFO] [jbehave:render-reports {execution: render-reports}] 
[INFO] Rendering reports in 'C:\Workspace\proview\target\jbehave-reports' using formats '[txt, html, xml]' and template properties '{renderedDirectory=rendered, 
defaultFormats=stats}' 
[INFO] Rendered reports with 0 scenarios (of which 0 failed) 
[INFO] ------------------------------------------------------------------------ 
[INFO] BUILD SUCCESSFUL 
[INFO] ------------------------------------------------------------------------ 
[INFO] Total time: 15 seconds 
[INFO] Finished at: Fri Jun 04 10:37:51 EDT 2010 
[INFO] Final Memory: 18M/43M 

I can't seem to figure out why jBehave/Maven can't find the classes, they appear to be sitting exactly where jBehave/Maven is looking. Mauro seems to think it may have to do with Windows, but I am not sure at this point. 


Thank you, 

Joe","non-feature containing"
"Project created from jbehave-needle-archetype version 4.1.2 doesn't compile Project created from jbehave-needle-archetype version 4.1.2 doesn't compile

Steps to reprduce:
{code}
mvn archetype:generate -B -DarchetypeGroupId=org.jbehave -DarchetypeArtifactId=jbehave-needle-archetype -DarchetypeVersion=4.1.2 -DgroupId=com.company -DartifactId=someproject -Dversion=1.0-SNAPSHOT -Dpackage=com.company.project

cd someproject

mvn compile

[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.1:compile (default-compile) on project someproject: Compilation failure: Compilation failure:
[ERROR] \tmp\someproject\src\main\java\com\company\project\MyStories.java:[28,43] error: package de.akquinet.jbosscc.needle.injection does not exist
[ERROR]
[ERROR] \tmp\someproject\src\main\java\com\company\project\MyStories.java:[29,44] error: package de.holisticon.toolbox.needle.provider does not exist
{code}

","non-feature containing"
"PropertyWebDriverProvider should allow users to configure each WebDriver instance via a factory method Allow each WebDriver instance to be user-configured by extending a separate method, e.g. createFirefoxDriver().","feature containing"
"Provide @Pending annotation to mark methods that have not yet been implemented As suggested by Jonathan Woods, a @Pending annotation can be used to mark not yet implemented methods, either auto-generated or not.","feature containing"
"Provide Null-Object implementation of monitors A http://en.wikipedia.org/wiki/Null_Object_pattern implementation of monitors has following advantages: 

- provided out-of-box a no-op impl 
- allows easy extensibility 
- allows evolution of methods and signatures, via deprecation","feature containing"
"Provide ParanamerConfiguration An instance of Configuration that uses a CachingParanamer by default.","feature containing"
"Provide StoryManager to manage execution and outcomes of running stories Embedder has become too big as a facade, including all the concurrency management of stories. A StoryManager should be introduced, responsible for the concurrent submission of running stories and their execution monitoring. The individual stories would still be run by the StoryRunner.","feature containing"
"Provide a configurable timeout value for each story running time When running stories that may take a bit longer, e.g. web tests, a timeout value for each story would be useful as opposed to a timeout for all stories together.","feature containing"
"Provide better exception handling when Maven/Ant fails with classloader injected When Maven/Ant execution of a scenario with injected classloader, provide better communication of what is happening.","feature containing"
"Provide default constructor for ParameterConverters To ensure backward compatibility with 4.1, reinstate a default constructor, removed by JBEHAVE-1217.
","non-feature containing"
"Provide default values for KeyWords, when not reading from a I18n bundle Now that the number of keywords has grown, as an alternative to using I18nKeyWords, KeyWords should also provide a default constructor that builds a map of default values for all keywords. These default values should be accessible and usable for those that want to override only part of them.","feature containing"
"Provide more efficient step collection for large projects With a large project where there can be 600 candidate steps, the ByLevenshteinDistance PrioritisingStrategy is very slow, can take 4 seconds to complete the step collection. 
The ByPriorityField is much faster, but is not a practical solution for this size project, as it would be difficult to manage the priority on this number of steps. 

So need a more efficient step collection strategy.","feature containing"
"Provide property-based EmbedderControls An extension of EmbedderControls that allows values to be set via system properties.","feature containing"
"Provide shutdown hook for story cancellation to clean up e.g. open Firefox When the running time of stories exceeds storyTimeoutInSeconds, the Futures get cancelled without cleanup the resources, e.g. the Firefox stays open even though the jvm running the tests stops. 

This is especially bad if the tests are run via a cronjob since the firefox processes accumulate over time slowing down the machine. 

I'm not quite sure how to implement this, the canceled Futures get a CancellationException, to shut down Firefox I think it is necessary to run the @AfterStory or @AfterStories annotated methods plus it would be good to put a stack trace in the report which currently doesn't show up.","feature containing"
"Provide single configuration point for TableTransformers Now there is an ability to set custom {{TableTransformers}} for different components. But there is no way to set {{TableTransformers}} for all components at once.

The goal of this ticket is to provide one single configuration point of {{TableTransformers}} that will be used while parsing both scenario and step level ExamplesTable.","feature containing"
"Provide table row values as converted parameters Currently, ExamplesTable provides the row values as Map<String,String>. 

In most cases, users will need to convert these values. We should provide the row values converted as specified types using the same ParameterConverters defined for the step conversion. 

We should also allow for provision of defaults, both accessing single value and as a table structure.","feature containing"
"Race Condition in StoryManager prevents it waiting for all tasks to be done In waitUntilAllDoneOrFailed() method in StoryManager Class, inside while loop we are iterating a HashMap (runningStories) in a for each loop.

Since we are using a HashMap, order is not guaranteed over time, and thus there's a chance to exit prematurely the while loop, if:

 - There is no in progress task, i.e. all tasks are either done or not started (or marked as that).
 - Last task is done.

This exists the while loop, without waiting for all task to finish.","non-feature containing"
"Refactor NumberConverter to use injectable NumberFormat Refactor NumberConverter to parse numbers using injectable NumberFormat, instead of Number classes' valueOf() methods. 

Locale-specific formats are supported via NumberFormat.getInstance(Locale), while defaulting to NumberFormat.getInstance(). 

Also refactor NumberListConverter to use NumberConverter with provided NumberFormat, again defaulting to NumberFormat.getInstance().","feature containing"
"Refactor StoryLoader to throw runtime exception Story class instantiation throws the usual checked exceptions, which should be digested in a runtime InvalidStoryClassException.

Change is backaward compatible for any user catching Exception.","feature containing"
"Refactor StoryRunner to depend on StoryLoader StoryRunner should use StoryLoader to load stories.","feature containing"
"Regex Stackoverflow error with ExampleTables on Windows Regex Stackoverflow error with ExampleTables on Windows, which partially originate from a JDK bug (StackOverflow with regex alternation like (.|\s)* ). The fix that works for me:

// Avoid alternation by using DOTALL and .* instead of (.|\s)*
PatternScenarioParser.java
private Pattern patternToPullScenarioTableIntoGroupOne() {
KeyWords keywords = configuration.keywords();
String table = keywords.examplesTable();
return compile("".*""+table+""\\s*(.*)"", DOTALL);
}","non-feature containing"
"Regex overflow in using Examples table It's the old Windows regex issue (http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6337993) that raises its head once more, this time in the examples tables. It seems to be related to the number of rows and how similar they are amongst each other. It also seems to be sensitive to the content of the first couple of columns, i.e. if the first and/or second column content differ the problem does not always manifest itself.

Solutions: either refactor regex parsing to not use patterns such as (x|y)* or provide an alternative implementation or parser based on a pluggable regex impl, different from the JDK one.","non-feature containing"
"RegexStoryParser do not parse meta information correctly when Life cycle keyword is present   By the grammar it should be possible to use the Lifecycle keyword after Meta keyword.

{code}
; The story describes a feature via description, narrative and a set of scenarios
Story := Description? Meta? Narrative? GivenStories? Lifecycle? Scenario+ ;
{code}

If the Lifecycle keyword is used after Meta keyword then the meta information are not correctly parsed. 

{panel}
    Meta: @story Story
    Lifecycle:
   Before:
                Given a step before each scenario
                And another before step
                After:
                Given a step after each scenario
                And another after step
                Scenario:
                Given a scenario 
{panel} 

Value for the story will be:
{panel}
Story
Lifecycle: 
Before:

Given a step before each scenario
And another before step
After:

Given a step after each scenario
And another after step
{panel}

Here is a JUnit test:
{code}
    @Test
    public void shouldParseStoryWithMetaAndLifecycle() {
        String wholeStory = ""Meta: @story Story"" + NL +
                ""Lifecycle: "" + NL +
                ""Before:"" + NL + NL +
                ""Given a step before each scenario"" + NL +
                ""And another before step"" + NL +
                ""After:"" + NL + NL +
                ""Given a step after each scenario"" + NL +
                ""And another after step"" + NL +
                ""Scenario:""+ NL +
                ""Given a scenario"";
        Story story = parser.parseStory(wholeStory, storyPath);
        Meta storyMeta = story.getMeta();
        assertThat(storyMeta.getProperty(""story""), equalTo(""Story""));

        List<String> beforeSteps = story.getLifecycle().getBeforeSteps();
        assertThat(beforeSteps.get(0), equalTo(""Given a step before each scenario""));
        assertThat(beforeSteps.get(1), equalTo(""And another before step""));
        List<String> afterSteps = story.getLifecycle().getAfterSteps();
        assertThat(afterSteps.get(0), equalTo(""Given a step after each scenario""));
        assertThat(afterSteps.get(1), equalTo(""And another after step""));
        Scenario scenario = story.getScenarios().get(0);
        List<String> steps = scenario.getSteps();
        assertThat(steps.get(0), equalTo(""Given a scenario""));
    }
{code}

The problem is on the line 314 in RegexStoryParser
{code}
String narrativeOrGivenStories = concatenateWithOr(keywords.narrative(), keywords.givenStories());
{code}

Lifecycle keyword is not included. ","non-feature containing"
"RegexStoryParser doesn't parse correctly with german keywords and nested GivenStories within a scenario Hey,
i recently recognized that the RegexStoryParser doesn't parse correctly with german keywords and nested GivenStories within a scenario. (jbehave-core-4.1)

I think it works well with the english keywords because ""Given"" is part of ""GivenStories.
With the german keywords it's ""Geben"" and ""VorgegebeneStories"".

If you have a Scenario e.g.

{quote}
...
Szenario: Musterszenario
VorgegebeneStories: /some/example/path/vorbedingung.story
Gegeben ist ein Musterschritt
...
{quote}

Then you will get as ScenarioTitle 
{quote}
Musterszenario
VorgegebeneStories: some/example/path/vorbedingung.story
{quote}

and the GivenStories won't be recognized.

As workaround i am currently using a custom LocalizedKeywords where i changed _VorgegebeneStories_ to _GegebeneStories_.

I think the error is happening in line 356 in RegexStoryParser.java
{code}
private Pattern findingScenarioTitle() {
        String startingWords = concatenateWithOr(""\\n"", """", keywords.startingWords());
        return compile(keywords.scenario() + ""((.)*?)\\s*("" + keywords.meta() + ""|"" + startingWords + "").*"", DOTALL);
}
{code}
I would suggest to include GivenStories to the keywords.startingWords, alternatively would work changing the keywords.

Kind Regards
Fabian","non-feature containing"
"Regression: configuration method inherited from JUnitStories class not being overridden When creating a JUnitStories class, the overridden configuration method is no longer executed starting in JBehave 3.9.2. 

I also tested this with 3.9.3, 3.9.5 and 4.0-beta-11 and the issue persists. Only by changing the dependency version in my POM back to 3.9.1 does the method override correctly again. 

I have attached my StoryReporter class, the abstract class where the issue presents when version >= 3.9.2 and an example Embeddable JUnitRunner class that inherits from it. 

MyStoryReporter.class is simply a Reporter that prints information to System.out where every callback prints a line starting with [JBEHAVE] and emits whatever information is available: 

You can run any story file from resources and see that the StoryReporter does not get used unless you are on a version prior to 3.9.2. You can also add a breakpoint in configuration and see that the breakpoint will be hit in 3.9.1 but is never hit in 3.9.2 and later.","non-feature containing"
"Remove ""responsibility"" from the vocabulary It's behaviour all the way down. A behaviour class contains methods that define the behaviour. Sometimes it is useful to think of these as responsibilities - especially when modelling - but other times they are just behaviour (boundary cases, etc.).

Also, the phrase ""responsibility method"" has 8 syllables so it doesn't exactly trip off the tongue.

The StoryRunner work will reuse the method verifiers outside of the core context, which provides even more evidence that the naming was wrong in the first place.","feature containing"
"Remove dependency on javassist by using standard JDK annotation functionality Use of javassist is typically done for access to non-RUNTIME Retention annotations or for annotation parsing over a large set of classes when you don't want to load the class. We don't have those use cases and thus can eliminate the javassist dependency in AnnotationFinder. 

New version of AnnotationFinder is attached that seems to work - I wasn't sure if getAnnotation should look at interfaces and/or superclasses (not needed if we appropriate add the @Inherited to our annotations). 

jbehave-core/pom.xml also changed to remove the dependency.","feature containing"
"Rename I18nKeyWords to LocalizedKeywords for clarity and drop capital W from keyWords where applicable","feature containing"
"Rename RunnableStory to Embeddable and remove redundant methods The name RunnableStory has become outdated and does not reflect the fact that we can run multiple stories or even have access to other Embedder functionality. Embeddable is a more generic name that's better suited. 

The two methods that should remain in Embeddable are: 

void useEmbedder(Embedder); 
void run(); 

The other methods that were previously in RunnableStory can live in abstract implementations, such as ConfigurableEmbedder which JUnitStory extends and allows the configuration of the embedder for execution of a single story.","feature containing"
"Rename StepResult methods for consistency and clarity Some methods in StepResult are not consistent with the reporter methods. 

Rename translatedText(String) -> withParameterValues(String). 

Ensure the parametrisedStep() method falls back on the original step if no parametrised step is provided.","feature containing"
"Rename embeddedStory flag to givenStory in StoryRunner StoryRunner supports running givenStories, so the name of the boolean flag should be renamed to givenStory to avoid confusion with StoryEmbedder.","feature containing"
"Rename failure handling strategies and implement as standalone classes ErrorStrategy and ErrorPendingStrategy are somewhat ambiguous. 

Better to name them FailureStrategy and PendingStepStrategy. 

Their implementations should be refactored to be standalone classes rather than anonymous classes, as it allow for more control on the part of the user to override and extend the strategy.","feature containing"
"Rename run-with-annotated-embedder goal to run-stories-with-annotated-embedder The goal name is inconsistent with the other goal names. For backward compat, we can keep the previous goal name.","feature containing"
"Replace @Named variable annotation by pattern matching of variable names used in step annotation If the {{@Named}} annotation was deprecated, and the {{$variable}} patterns were matched to the steps argument list instead, jBehave would be much more usable.

The {{@Named}} parameter annotations are in essence redundant, and they limit usability of jBehave for two reasons:

1. _The parameter names could be parsed directly from the step scenario instead_. And I wish they were: I (and my testers) have frequently run into the problem of the arguments being in the wrong order. An innocent looking step like
{code}
@Given(""a book $book written by $author"")
@Alias(""$author's book $book"")
public void setBookAndAuthor(@Named(""author"") String author, @Named(""book"") String book) {...}
{code}
can lead to great confusion, with the arguments getting switched. Using the step in an example scenario can increase the confusion, as one can legally write:
{code}
Given a book [author] written by [book]
{code}
Testers and developers alike are also confused that, while {{Given a book Moby Dick written by Herman Melville}} works, {{Given [title] written by [person]}} doesn't (see next point).

2. _they inhibit reusing steps in example scenarios_; either that, or they lead to redundant columns.
An example to illustrate this: given
{code}
@Given(""a stock named $stock"")
public void createStock(@Named(""stock"") String stock)...
{code}
I cannot reuse this step for two colums in an example:
{code}
Scenario: client creates two stocks
Given a stock named [A]
And a stock named [B]

Examples:
|A |B |
|GOOG | AAPL |
{code}","feature containing"
"Report Renderer should be failure aware If a user wants to run through all scenarios/stories and generate a collective view of failure/pending/success the runner needs to be configured to ignore failure. 

The report rendering should be failure aware so that after rendering the build can fail if any failures occurred. 

The Ant and Maven entry points should also allow to skip the rendering via a configurable flag.","feature containing"
"Report embedded status in before/after story events Pass embeddedStory boolean flag to before/afterStory() method in ScenarioReporter. 

The implementors of the reporter would then decide how to use the status flag.

Methods without status flag are deprecated.","feature containing"
"Report files not closed I'm running an embedder as part of another java application. When the execution of the embedder completes I can see files on disk but they are empty (or of small size) and the files are locked open by the process (can't delete them on windows). It appears that the files are only written out when I exit the java process in which the embedder has been started.","non-feature containing"
"Report stying not being generated I am using this report builder definition in a annotation setup as per the JBehave website documentation: 

public static class MyReportBuilder extends StoryReporterBuilder { 
public MyReportBuilder() { 
super(); 
this.withCodeLocation(CodeLocations.codeLocationFromPath(""build/publish/x"")); 
this.withRelativeDirectory(""story-reports""); 
this.withDefaultFormats(); 
this.withFormats(CONSOLE, HTML); 
} 
} 

The reports are being generated in the view directory, however there are no images, css or javascript being generated even though the html refers to them. I've scoured the web site documentation which suggests that they should be and tells you how to turn them off, but not what to do if they are not there.","non-feature containing"
"Reporting Step Documentation JBehave supports step documentation which is a cool feature: If I add a Javadoc comment to the method which implements a step, I can see that comment in the JBehave editor when I use code completion. 

However this information is not integrated in any of the JBehave reports. 

A workaround might be to create a Javadoc for the step classes. 

I would like to suggest that this kind of report is produced by the JBehave StoryReporterBuilder as part of the JBehave's own reports.","feature containing"
"Reports are not showing properly, all are showing as Zero i used an example to create JBehave Scenarios, i fallowed as given in the Jbehave documentation but facing a problem getting report generated. 
i didn't find the solution to get count the scenarios and Steps or testcases. 
is their any configuration i am missing? 
i am attaching all the files used. 
Thank you in Advance.","non-feature containing"
"Reports are outputted to $ANT_HOME/lib instead of target dir As reported by Ben Sullivan, when running scenarios via Ant CLI, the reports are being outputted to $ANT_HOME/lib instead of target dir. 

Problem stems from the fact that the FilePrintStreamFactory uses the 

scenarioClass.getProtectionDomain().getCodeSource().getLocation().getFile(); 

to identify the output dir. The classloading of Ant by default must be setting the code source location to $ANT_HOME/lib. 

Need to find a way to configure Ant classloading or allow explicit setting of the output directory (currently only the entire output file of the print stream is configurable, which makes it pretty useless for running with multiple scenarios).","non-feature containing"
"Reports should support configurable multiple view types Currently, reports view supports only the list view. 

Other view types should be supported, e.g. tree or graph.    

","feature containing"
"ReportsCount is counting files that aren't stories in the story count Problem Statement: 
When running the JBehave tests, the ReportsCount that is output to the JUnit console is counting non-story Reports. 

Example: 
This is what the code currently returns: 
org.jbehave.core.embedder.Embedder$RunningStoriesFailed: Failures in running stories: ReportsCount[stories=9,storiesNotAllowed=0,storiesPending=0,scenarios=1,scenariosFailed=1,scenariosNotAllowed=0,scenariosPending=0,stepsFailed=1] 

Proposed change: 
Change line 121 of the TemplateViewGenerator to use a method that filters out Reports that don't have any scenarios. 

current : int stories = reports.size(); 
proposed: int stories = storyCount(); 

private int storyCount(){ 
int storyCount = 0; 
for (Report report : reports){ 
if (report.getStats().containsKey(""scenarios"")){ 
if (report.getStats().get(""scenarios"") > 0) 
storyCount++; 
} 
} 
return storyCount; 
} 

Results after change: 
org.jbehave.core.embedder.Embedder$RunningStoriesFailed: Failures in running stories: ReportsCount[stories=1,storiesNotAllowed=0,storiesPending=0,scenarios=1,scenariosFailed=1,scenariosNotAllowed=0,scenariosPending=0,stepsFailed=1]","non-feature containing"
"ResolveToPackagedName path resolver is broken on Windows Current implementation of 'org.jbehave.core.reporters.FilePrintStreamFactory.ResolveToPackagedName' is the following: 

{code:java} 
public static class ResolveToPackagedName extends AbstractPathResolver { 

public String resolveName(StoryLocation storyLocation , String extension) { 
String name = storyLocation .getPath().replace('/', '.'); 
if (name .startsWith(""."")) { 
name = name.substring(1); 
} 
return StringUtils.substringBeforeLast( name, ""."") + ""."" + extension ; 
} 

} 
{code} 

In the case StoryLocation is represented by URL: 
{noformat} 
StoryLocation[codeLocation=file:/C:/Users/dpelevin/git/test/build/classes/test/,storyPath=file:/C:/Users/dpelevin/git/test/build/resources/test/stories/test.story,storyPathIsURL=true] 
{noformat} 
we will get name with unescaped ':' characters: 
{noformat} 
C:\Users\dpelevin\git\test\build\classes\jbehave\file:.C:.Users.dpelevin.git.test.build.resources.test.stories.test.stats 
{noformat} 
Such names are not valid on Windows and JBehave fail with: 
{noformat} 
java.io.FileNotFoundException: C:\Users\dpelevin\git\test\build\classes\jbehave\file:.C:.Users.dpelevin.git.test.build.resources.test.stories.test.stats (Syntax error in the file name, directory name, or volume label) 
java.io.FileOutputStream.open(Native Method) 
java.io.FileOutputStream.<init>(FileOutputStream.java:221) 
org.jbehave.core.reporters.FilePrintStreamFactory$FilePrintStream.<init>(FilePrintStreamFactory.java:138) 
org.jbehave.core.reporters.FilePrintStreamFactory.createPrintStream(FilePrintStreamFactory.java:38) 
org.jbehave.core.reporters.Format$9.createStoryReporter(Format.java:108) 
org.jbehave.core.reporters.StoryReporterBuilder.reporterFor(StoryReporterBuilder.java:316) 
org.jbehave.core.reporters.StoryReporterBuilder.build(StoryReporterBuilder.java:292) 
org.jbehave.core.configuration.Configuration.storyReporter(Configuration.java:208) 
org.jbehave.core.embedder.StoryRunner.reporterFor(StoryRunner.java:358), org.jbehave.core.embedder.StoryRunner.runCancellable(StoryRunner.java:235) 
org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:219), org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:180) 
org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:229) 
org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201) 
java.util.concurrent.FutureTask.run(FutureTask.java:262) 
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) 
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) 
java.lang.Thread.run(Thread.java:745) 
{noformat} 

WORKAROUND: 
Use 'org.jbehave.core.reporters.FilePrintStreamFactory.ResolveToSimpleName' instead of 'ResolveToPackagedName'. 

POSSIBLE SOLUTION: 
Use only substring that start from next character after last ':'. In this case we will cut off protocol and disk name, preserving only full path from the disk root. 
Invalid of invalid name: 
{noformat} 
C:\Users\dpelevin\git\test\build\classes\jbehave\file:.C:.Users.dpelevin.git.test.build.resources.test.stories.test.stats 
{noformat} 
we will get valid one: 
{noformat} 
C:\Users\dpelevin\git\test\build\classes\jbehave\.Users.dpelevin.git.test.build.resources.test.stories.test.stats 
{noformat}","non-feature containing"
"ResourceFinder A common requirement is to look resources in scenario steps, either from classpath or from filesystem. 

A utility class that abstracts I/O lower-level code is useful in keeping with DRY principle.","feature containing"
"Review MostUsefulStoryConfiguration defaults Review and update defaults so as to minimise configuration. 

Following defaults have been shown to be more useful: 

StoryPathResolver: new UnderscoredCamelCaseResolver("".story"") 
StoryReporter: new ConsoleOutput()","feature containing"
"Run story-level Given stories only if story contains scenarios Story-level Given stories should be added to run only if story contains scenarios

","feature containing"
"Runner should return non-zero (failure) status if any behaviours failed At the moment it only returns a failure if there's a framework error (like a missing behaviour class).

This makes it harder to use in a batch environment (eg. a build or script).","non-feature containing"
"Runner should use JMock listener by default In particular, for any behaviour classes that implement UsingJMock. There is currently nothing to tell you that mocks _weren't_ verified.

This has already bitten me!

Note: there are not allowed to be any dependencies from core on any of the extensions (otherwise they should become core too).","feature containing"
"Running 1 JBehave Story with GivenStories produces JBehave Report that lists all stories not run (v4.0.2) Running 1 JBehave Story with GivenStories produces JBehave Report that lists all stories not run (v4.0.2)

Steps:
1 Specify and Run 1 JBehave Story in project that has a GivenStories step
2 Specified JBehave Story runs successfully

Expected Behavior
-JBehave Report shows specified JBehave Story ran successfully

Actual Behavior
-JBehave Report shows specified JBehave Story ran successfully
-JBehave Report lists every JBehave Story in the project with a 1 in the excluded column

Running a JBehave Story that doesn't have Given Stories produces expected behaviour.  GivenStories seems to trigger the bug.","non-feature containing"
"Running Jbehave as Junit Test gives error I am trying to run a JBehave user story using following code
package com.joe.steps;
import gherkin.formatter.Format;

import java.util.Arrays; 
import java.util.List; 

import org.jbehave.core.configuration.Configuration;
import org.jbehave.core.configuration.MostUsefulConfiguration;
import org.jbehave.core.io.LoadFromClasspath;
import org.jbehave.core.junit.JUnitStories; 
import org.jbehave.core.reporters.StoryReporterBuilder;
import org.jbehave.core.steps.CandidateSteps;
import org.jbehave.core.steps.InstanceStepsFactory;
import org.junit.Test;

　
 public class ICanToggleACell extends JUnitStories { 
	 
	 @Override
	 public Configuration configuration()
	 {
		 return new MostUsefulConfiguration().useStoryLoader(new LoadFromClasspath(getClass().getClassLoader())).useStoryReporterBuilder(new StoryReporterBuilder());
	 }
	 
	 @Override
	 public List<CandidateSteps> candidateSteps() { 
		 return new InstanceStepsFactory(configuration(), this).createCandidateSteps();}
  
    @Override
    protected List<String> storyPaths() { 
        return Arrays.asList(""com.joe.features/debugPlugIn.story""); 
    } 
    
    @Override
    @Test
    public void run() throws Throwable 
    {    super.run();
    }
}

When I try to run it as Junit Test, it gives following error:'
java.lang.NoClassDefFoundError: org/apache/commons/collections/Transformer at org.jbehave.core.configuration.Configuration.<init>(Configuration.java:117) at org.jbehave.core.configuration.MostUsefulConfiguration.<init>(MostUsefulConfiguration.java:50) at org.jbehave.core.embedder.Embedder.<init>(Embedder.java:36) at org.jbehave.core.embedder.Embedder.<init>(Embedder.java:47) at org.jbehave.core.ConfigurableEmbedder.<init>(ConfigurableEmbedder.java:39) at org.jbehave.core.junit.JUnitStories.<init>(JUnitStories.java:14) at com.joe.steps.ICanToggleACell.<init>(ICanToggleACell.java:17) at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) at java.lang.reflect.Constructor.newInstance(Unknown Source) at org.junit.runners.BlockJUnit4ClassRunner.createTest(BlockJUnit4ClassRunner.java:195) at org.junit.runners.BlockJUnit4ClassRunner$1.runReflectiveCall(BlockJUnit4ClassRunner.java:244) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.BlockJUnit4ClassRunner.methodBlock(BlockJUnit4ClassRunner.java:241) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) at org.junit.runners.ParentRunner.run(ParentRunner.java:309) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)Caused by: java.lang.ClassNotFoundException: org.apache.commons.collections.Transformer at java.net.URLClassLoader.findClass(Unknown Source) at java.lang.ClassLoader.loadClass(Unknown Source) at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source) at java.lang.ClassLoader.loadClass(Unknown Source) ... 29 more","non-feature containing"
"SVN url on website is wrong Is:

svn://svn.jbehave.codehaus.org/jbehave/scm/trunk

Should be:

svn://svn.jbehave.codehaus.org/jbehave/trunk

Could we also add anonymous https etc.?","feature containing"
"Sablecc version is not compatible with jdk 1.4 Reproduce bug by running ""ant sablecc build""

Then
1. Download sablecc version 3.1 
2. Put in lib/extensions
3. Change sablecc target in ant script to use correct jar file and change path to the existing story.scc grammar file
4. Change the package in story.scc
5. rerun ""ant sablecc build""","non-feature containing"
"Same Stacktrace message is repeated for all failed tests in Jenkins plugin test result I am running Jbehave tests as Jenkin's free style project using jbehave-jenkin plugin (v3.8 ). 

Test result getting displayed correctly after the build. 
But, same *Stacktrace* message got displayed for all failed tests in test result. 

Stacktrace of first failed test case is repeated in all the stacktrace of failed test cases. 

Request you to please suggest whether this is known issue or I am doing something wrong ? 

Note - Error message of all failed test cases displayed correctly.","non-feature containing"
"Saucelab implementation for etsy-selenium/ java-spring project in Jbehave tutorial Hi, 

Currently I'm able to see the saucelabs implementation only in etsy-selenium/groovy-pico project in github. 

But could you please implement the same in etsy-selenium/java-spring project also. 

https://github.com/jbehave/jbehave-tutorial/tree/master/etsy-selenium/java-spring 

Please let us know how this is going to be work in SauceLabs for java-spring project with parallel runs.","feature containing"
"Scenario class lookup fails on Windows The lookup of scenario class names via the includes pattern such as '**/scenarios/*.java' fails on Windows because the paths retrieved use '\' as package separators in place of '/'.

Will most likely require the need to normalise paths to use '/'.","non-feature containing"
"Scenario keyword should include any separation char, e.g. "":"" ATM, the pattern parser assumes that the keyword Scenario is followed by a "":"". It is better that any separation char to be part of the keyword configured in Keywords.scenario() so it can be configured and is not hardcorded in the pattern parser.","feature containing"
"Scenario metadata is not broadcast to StoryReporters In JBehave 4.0.5 StoryReporter.scenarioMeta() is not invoked from PerformableTable.PerformableScenario.

The now deprecated StoryRunner does this immediately after ""beforeScenario()""

As a consequence, story reports created with JBehave 4.0.5 do not contain scenario meta information. 
Reports generated by JBehave 3.9.2 are OK.","non-feature containing"
"Scenario metadata overwrite *Overview*
A bug was introduced with the 4.0 release which effects scenario level metadata.  If scenario level metadata is passed into steps as named parameters, then the wrong values are sometimes used. For example, the scenario 3 metadata is passed into the scenario 1 step.

*Details*
It appears that the PerformableStory is constructed, a property map is passed into each PerformableScenario where it is flushed out with Story and Scenario level metadata and then stored with the PerformableScenario for named parameter matching when the scenario is run.  However all PerformableScenarios are sharing the same NamedParameter map passed in from the PerformableStory.  Therefore when each scenario is parsed and the PerformableScenario created, the map is updated which effects all the scenarios.

*Impact*
Test suites that were written against 3.x and use scenario level metadata within their steps fail or report incorrect results when upgrading to JBehave 4.x.


*Fix*
The PerformableScenarios need to create and store a separate copy of the NamedParameter map to that this overwriting does not occur.","non-feature containing"
"Scenario metadata will not populated in JBehave report. We have about 6000+ scenarios automated using JBehave and we have written a failure scenarios rerun mechanism by fetching scenario meta tags from the JBehave report. We were using 3.10 and there wasn't any issue with that. But after upgraded to the 4.x we found that meta info is not populating to the report. 

[JBEHAVE-1188|https://jbehave.atlassian.net/browse/JBEHAVE-1188]
[JBEHAVE-1137|https://jbehave.atlassian.net/browse/JBEHAVE-1137]

The above two bugs are already reported for this issue but those in Medium priority and Open state. 

*Since this feature is highly important and also we cannot downgrade due to usage of latest features, reporting this issue in Highest priority.*","non-feature containing"
"Scenario not being restarted after a RestartingScenarioFailure exception is thrown Since JBehave 4 scenario execution is not restarted after a RestartingScenarioFailure exception, meanwhile Story is properly restarted after a RestartingStoryFailure exception.

I've created a maven project that reproduces this issue:

https://github.com/rjimgal/jbehave4-scenario-restart

JBehave 3.10 is working fine, although storyDurations.props file is not created (also reproduced at given maven project).","non-feature containing"
"Scenario runner form submission should support both GET and POST methods POST is required for executing very long scenarios - and is now the default. 

Can be changed via the drop-down selection next to the ""Run Scenario"" link.","feature containing"
"Scenario runner should report before and after story only once when running given scenarios When running a scenario with given scenarios, i.e. when running scenarios embedded in another scenario, the scenario runner should only report event beforeStory/afterStory once.","feature containing"
"Scenario steps should throw Exception in their signature. For the same reason that should... methods should be able to throw an exception, so should ScenarioSteps. This prevents me having to wrap code that shouldn't be throwing exceptions anyway.","feature containing"
"Scenario title parsed to empty on Windows Windows regex does not properly parse the scenario title, while it works fine on other platforms.","non-feature containing"
"Scenario with nested or recursive example table We have a UI functionality that repeats on many pages (say it is a JSPF component that is reusable, with configurable variation). But it is important to test this on all pages since the functionality is slightly different on each of these pages. 

h2. How we have to code this today: 

Scenario: Food widget in Home page 

Given I am on Home page 
When I enter <food_item> in the menu field 
Then I see <related_food_items> in the dropdown 

Examples: 
|food_item|related_food_items| 
|pizza|""cheese, chicken, bacon""| 
|fruit_salad|""mangoes, strawberry, grapes""| 
|rice|""brown, white, fried""| 

The exact same test will repeat on a different page like below 


Scenario: Food widget in OrderFood page 

Given I am on OrderFood page 
When I enter <food_item> in the menu field 
Then I see <related_food_items> in the dropdown 

Examples: 
|food_item|related_food_items| 
|pizza|""cheese, chicken, bacon""| 
|fruit_salad|""mangoes, strawberry, grapes""| 
|rice|""brown, white, fried""| 


h2. Problem Statement: We want to run a particular scenario with 'examples' over another parametrized value (e.g 'Page' here). 

h2. Proposed solution: foreach meta-tag at scenario level that has processing implications. 

Scenario: 

Meta: 

@foreach Page: Home, OrderFood, CheckStatus, CancelOrder 

Given I am on the <Page> page 
When I enter <food_item> in the menu field 
Then I see <related_food_items> in the dropdown 

Examples: 
|food_item|related_food_items| 
|pizza|""cheese, chicken, bacon""| 
|fruit_salad|""mangoes, strawberry, grapes""| 
|rice|""brown, white, fried""|","feature containing"
"Scenario's in the default package cause NullPointerException I'm playing around with JBehave, and encountered the folloing NullPointerException

Testcase: testScenario(HeyHeyMyMy): Caused an ERROR
null
java.lang.NullPointerException
at org.jbehave.scenario.parser.UnderscoredCamelCaseResolver.resolve(UnderscoredCamelCaseResolver.java:37)
at org.jbehave.scenario.parser.ClasspathScenarioDefiner.loadInputStreamFor(ClasspathScenarioDefiner.java:52)
at org.jbehave.scenario.parser.ClasspathScenarioDefiner.loadScenarioDefinitionsFor(ClasspathScenarioDefiner.java:47)
at org.jbehave.scenario.AbstractScenario.runScenario(AbstractScenario.java:69)
at org.jbehave.scenario.JUnitScenario.runScenario(JUnitScenario.java:49)
at org.jbehave.scenario.JUnitScenario.testScenario(JUnitScenario.java:64)


I've enclosed a patch for you consideration :-)","non-feature containing"
"Scenario-level tag is ignored by meta filter I created the attached project which uses a very simple story with 2 
scenarios. Each scenario has a different author. I would like to run 
the scenario written by author A using 

<metaFilters> 
<metaFilter>+author A</metaFilter> 
</metaFilters> 

but that doesn't run any scenarios. Filtering with -author A works 
fine. Attached project is self-contained and doesn't have any external 
depdendencies. See maven details below. 

Thanks, 
Edgardo 


Please, see further details and Mauro's analysis on: 

http://article.gmane.org/gmane.comp.java.jbehave.user/828","non-feature containing"
"ScenarioReporterBuilder A scenario reporter builder that allows easy instantiation of a delegating scenario reporter for multiple formats, e.g.

{code}
new ScenarioReporterBuilder(new FilePrintStreamFactory(scenarioClass, converter))
.with(CONSOLE)
.with(TXT).with(HTML).with(XML)
.build();
{code}

It should provide a default reporter instance for all formats, but allow for configurability for each format.

It should build by default with STATS format, as this is used by the reporter renderer index, but allow for default formats to be changed.

It should allow for the specification of the report file directory, from the default ""jbehave-reports"".","feature containing"
"Scenarios do not need a description. Constructing scenarios has become more complex than originally envisioned, and they're also being used in GivenScenarios. Because of this they tend to extend ScenarioUsingMiniMock, rather than merely being an instance of it. Therefore, they don't need a description.

This may require some changes to the StoryPrinter, or whatever else uses the Scenario's description.","feature containing"
"Scenarios do not tidy up after themselves if an outcome is not verified correctly. When I run Hellbound and an outcome isn't as expected (eg: I haven't written the bit which turns a glyph into the junk at the bottom after it falls) then a verification exception is thrown. This means that the scenario is never tidied up, which leaves the Swing frame, and queue threads, still running.

We should always tidy up after ourselves.","non-feature containing"
"Scenarios not allowed by filter are not skipped and cause NPEs Only occurs in 4.x during the execution of the PerformableStory.","non-feature containing"
"Screenshot should be taken on every example failure if a scenario has an example table Assume a scenario has a example table with 4 examples 
Lets say the scenario fails for 2nd and 3rd example set. 

The screenshot is taken only after the execution for the last example set. (And in the above case its of no use as the scenario passed with the last example set). 

the screenshot should be taken everytime the scenario failes with a particular example set.","feature containing"
"Screenshots for failing scenarios are taken but not correlated with the story HTML output hyperlink This could well be an issue in core around exceptions being thrown (wrapped by UUIDExceptionWrapper). 

1) Apply the attached patch to Etsy (it makes everything fail). 
2) Run regular build (no saucelabs): mvn clean install 
3) Open Navigator or reports page and click through to the HTML page for the failing story. 
4) Click the screenshot icon (see that it 404s) 
5) Otherwise check the screenshots directory, and observer that it has only one screenshot, instead of one for each failed story.","non-feature containing"
"Selenium (under JBehave control) needs to be able to be instansiable at Story as well as Scenario level Fixed in CL 1599 - SeleniumSteps is deprecated SeleniumStorySteps and SeleniumScenarioSteps are new","feature containing"
"Selenium Grid start scripts for Linux and Windows I generated Selenium Grid Hub/Node scripts for Windows and for Linux to improve ACCESSIBILITY of Windows users to the trader-runner examples. I prepared these scripts but someone still needs to add at least one unit test that actually creates a RemoteWebDriver to localhost:4444/wd/hub in order to test the grid (within the context of JBehave-Web.) 

See complete list of script files located here: 
https://gist.github.com/djangofan/8449305 

All of these scripts are meant to just be dropped into the directory in: 
jbehave-web/examples/trader-runner-selenium 

Cheers.","feature containing"
"SeleniumContextStoryReporter has issues tracking the current Scenario when using GivenStories Given a story with a GivenStories directive such as this 

Scenario: RESET CUSTOMER SEARCH BUTTON SHOULD CLEAR RESULTS 
=========================================================== 
GivenStories: dw/grapevine/stories/customer/search/SearchByFirstAndLastName.story 
When the user clicks on the reset button 
Then all the search input fields should be cleared 

SeleniumContextStoryReporter will lose track of the current scenario and report all steps as belonging to the GivenStories scenario. 

I'm pretty sure this is because it only implements the 'beforeScenario' method. 
It would be useful if it could also implement the 'afterScenario' method and reset the currentScenario correctly","feature containing"
"Separate step matching from step creation in CandidateStep CandidateStep is becoming too big and would benefit from a separation of concern between step matching and creation. 

StepCreator interface should be renamed to StepCollector to better express its function. 

Delegate the step creation concern to a StepCreator class.","feature containing"
"Separate step pattern parsing from the matching The StepPatternBuilder should become a StepPatternParser which produces a StepMatcher, which is turn reponsible for the matching of steps, be it regex-based or otherwise.","feature containing"
"Share immutable state between steps In keeping with a more functional design (to prevent global mutable state) it would be nice to be able have some sort of ""test context"" shared between steps automatically by the test framework. 

I imagine it working something like this: 

@Given(""we have a cat"") 
public void firstStep(TestContext testContext) { 
ImmutableCat cat = new ImmutableCat(""Felix""); 
testContext.put(""cat"", cat); 
} 

@When(""the cat is fed"") 
public void secondStep(TestContext testContext) { 
ImmutableCat cat = testContext.get(""cat""); 
ImmutableFood food = new Food(""Whiskers"", FoodType.Dry); 
ImmutableCat happyCat = cat.feed(food) // Makes cat happy 
testContext.replace(""cat"", happyCat); 
testContext.put(""food"", food); 
} 

@Then(""the cat is happy"") 
public void thirdStep(TestContext testContext) { 
ImmutableCat cat = testContext.get(""cat""); 
assert(cat.getFeels == Feels.Happy, ""Why didn't you feed the Cat?""); 
} 

@Then(""the cat ate dry food"") 
public void fourthStep(TestContext testContext) { 
ImmutableFood food = testContext.get(""food""); 
assert(food.getFoodType == FoodType.Dry, ""The Kitty only likes dry food""); 
} 

Basically as the steps are called the test context builds up the state of the world from the previous step, and passes it to the next step. It would be nice if this happened automatically if, for example, any of the steps have a ""TextContext"" paramater defined. 

By doing this it would avoid the need for global mutable state that can cause side effects between steps. 

Please leave comments if you have any other questions. Feed your kitties. 

Thanks.","feature containing"
"Should be able to have multiple scenarios in a story Should be able to detect multiple scenarios in a story file (split on the first Given?)","feature containing"
"Should be able to title scenarios Given a scenario title before a scenario
When I run the scenario
Then I want to see the same title appear in the output","feature containing"
"Should be able to use JBehave without inheriting from a base class Currently, a JBehave test scenario require inheriting from the base Scenario class. Certain other test frameworks may also require inheritance, but multiple inheritance is not allowed in Java. For this reason, configuration of a delegate Scenario may be preferred. I created a blog entry with the necessary code to accomplish this:
http://blog.davidron.com/2009/12/breaking-jbehave-inheritance-hierarchy.html","feature containing"
"Should not require a space before a new line Currently I have a space after the 'When' line in multiline steps. eg:

Given a grid that looks like <-- there's a space after this line
....
....
....

Should be able to work without the space.","non-feature containing"
"Show as pending in reports view scenarios and stories that contain pending steps or no steps As suggested by Jonathan Woods on user list: 
""It would be useful if 

(i) stories with no steps were reported as pending, and their constituent scenarios too 
(ii) stories with any pending steps were reported as pending, and their constituent scenarios too 
(iii) a run with any pending stories was itself reported as pending, even if it was also regarded as successful 

When I say 'reported as', I mean in the kind of end result you can see at target/jbehave/view/reports.html. In jbehave-trader-example, I tried adding a new story alongside the existing test stories, and of course it was reported, but as successful only - nothing to indicate there's no implementation as suggested in (i) above. 

This kind of behaviour would serve as a flag to keep the implementer honest and maintain the flow of top-down development: you've not implemented x if you've not implemented something x depends on. It would help keep story development and implementation in synch: if I make a modification to a story (or create a whole new story) and JBehave can tell me everywhere that implementation is pending, that's great.""","feature containing"
"Show pending story status in CrossReference Show boolean pending story status next to failed status.","feature containing"
"Show the story path for failing stories at end of batch execution When running TraderAnnotatedPathRunner example without view generation it is a kind difficult to know which stories have fail because what is being printed at console is this: 
{quote} 
Failed to run batch 
org.jbehave.core.embedder.PerformableTree$SomethingHappened@5d2e2355: junit.framework.AssertionFailedError: I failed! 
org.jbehave.core.embedder.PerformableTree$SomethingHappened@328ae1fb: junit.framework.AssertionFailedError: I failed! 
org.jbehave.core.embedder.PerformableTree$SomethingHappened@7dfa0e30: org.jbehave.core.model.OutcomesTable$OutcomesFailed 
org.jbehave.core.embedder.PerformableTree$SomethingHappened@2c7acb6f: junit.framework.AssertionFailedError: I failed! 

{quote} 

So, instead of print the PerformableTree object we should print the Story Path.","feature containing"
"Signal that next step is of different type Consider: 

{code} 
Given something 
And something else 
Then it happened 

or.. 

Given something 
Then it happened 

and.. 

@When(""something"") 
public void something() { 
} 
@When(""something else"") 
public void somethingElse() { 
} 
@Then(""it happened"") 
public void itHappened() { 
} 
{code} 

I'd like to be able to know in something() whether the next step is of a different type or not. 

{code} 
@When(""something"") 
public void something(@Named(""lastOfStepType"") boolean lastOfStepType) { 
} 
{code} 

This is particularly useful for UI interactions (WebDriver etc). 

Given I am have a hat in the cart 
When I purchase with credit card 
And I specify an alternate delivery address 
Then I should see a warning about different addresses 

I might want... 

When I purchase with credit card 

... as a standalone, or with refining AND clauses. In the last of the when lines that's pertinent I may execute the whole set. When in this context feels like a continuation of sorts.","feature containing"
"Single $ without name are allowed The regexp in DollarStepPatternBuilder allows for empty markers in the match?
(\$\w*)(\W|\Z)

should the marker not at least have one (or n) chars of length?","non-feature containing"
"Some of JBehave Jenkins plugin option cannot be used The user cannot un-check ""Stop and set the build to 'failed' status if there are errors when processing a result file"" in the JBehave Jenkins plugin. 
when users un-checks and save, this option restored to be checked","non-feature containing"
"Some template-generated reports are invalid. This bug appered when we started to use scenario level GivenStories keyword in our stories. 

Scenario: ... 
GivenStories: ... 
Given ... 

We use Hudson as CI with jenkins plugin for present reports. Probably, jbehave generates invalid xml, so exception occured(see StackTrace.txt in attachments) on post-build action ""Publish testing tools result report"". 
I investigated generated xml and found some weird things: 
1)missing ""="" between attribute's name and value 
{code:xml} 
<givenStories keyword""GivenStories:""> 
{code} 

2)strange string like 
{code:xml} 
<givenStory >stories/Story_name.story/> 
{code} 

3)escaping missed 
{code:xml} 
<failure>junit.framework.AssertionFailedError: expected <10> but was <1> 
{code} 
instead 
{code:xml} 
<failure>junit.framework.AssertionFailedError: expected &lt;10&gt; but was &lt;1&gt; 
{code} 

4)in two similar stories we have different xml 
first: 
{code:xml} 
<givenStories keyword""GivenStories:""> 
<givenStory >stories/Story_name.story/> 
</givenStories> 
{code} 

second: 
{code:xml} 
<scenario keyword=""Scenario:"" title=""scenario title""> 
<step outcome=""successful""> 
Given given step {0} 
</step> 
{code}","non-feature containing"
"Some unit tests fail on Windows due to cr/lf encoding When building jbehave-core on windows, 2 unit tests fail because the files are compared with cr/lf line endings (this may depend on the git default setting for text files) but the actual test results contain lf line endings only (since the text is never written or read). 

I ignored that until now with skipTests=true, I assume nobody else uses Windows to build jbehave, if you want, I can fix the tests.","non-feature containing"
"Sort out the website for JBehave 2.0

- examples
- full documentation
- download links
etc.","feature containing"
"Spaces in Path breaks LoadFromRelativeFile LoadFromRelativeFile function loadStoryAsTextfails to unescape URLs passed into the constructor that have escaped characters like %20 for a space. As a result, the story files cannot be found. 

Test case snippet follows... add it to StoryLoaderBehaviour.java. Also need to add folder ""foldername has spaces"" to jbehave-core/src/test/java/org/jbehave/core/io/stories/ and copy MyPendingStory.txt into it. Also including revised code snippet for loadStoryAsText function. I didn't immediately see a way to do it without either checked exceptions or deprecated functions (ex UrlDecoder.decode(string)). Not sure if InvalidStoryResource was the right exception to convert to. 

{code:title=StoryLoaderBehaviour.java} 
@Test 
public void shouldLoadStoryFromRelativeFilePathsWithSpace() throws MalformedURLException, URISyntaxException { 
// Given 
String storyPath = ""MyPendingStory.txt""; 
String storyAsText = ""Given my step""; 
java.net.URL url = CodeLocations.codeLocationFromClass(MyPendingStory.class); 
java.io.File folderWithSpacesInName = new java.io.File(url.toURI().getPath() + ""/org/jbehave/core/io/stories/foldername has spaces""); 
java.net.URL urlThatHasEscapedSpaces = folderWithSpacesInName.toURI().toURL(); 
assertThat(folderWithSpacesInName.exists(), is(true)); 

// When 
StoryLoader loader = new LoadFromRelativeFile(urlThatHasEscapedSpaces); 

// Then 
assertThat(loader.loadStoryAsText(storyPath), equalTo(storyAsText)); 
} 
{code} 

{code:title=LoadFromRelativeFile.java} 
public String loadStoryAsText(String storyPath) { 
List<String> traversalPaths = new ArrayList<String>(); 
String locationPath; 
try { 
locationPath = new File(URLDecoder.decode(location.getFile(),""UTF-8"")).getAbsolutePath(); 
} catch (UnsupportedEncodingException e) { 
throw new InvalidStoryResource(storyPath, e); 
} 
for (StoryFilePath traversal : traversals) { 
String filePath = locationPath.replace(traversal.toRemove, traversal.relativePath) + ""/"" + storyPath; 
File file = new File(filePath); 
if (file.exists()) { 
return loadContent(filePath); 
} else { 
traversalPaths.add(filePath); 
} 
} 
throw new StoryResourceNotFound(storyPath, traversalPaths); 
} 
{code}","non-feature containing"
"Spaces in path breaks StoryFinder().findPaths() Constructions like: 
List<String> storyPaths = new StoryFinder().findPaths(codeLocationFromClass(getClass()), ""**/*.story"", ""**/*examples.story""); 
or 
List<String> storyPaths = new StoryFinder().findPaths(codeLocationFromPath(""somePath""), ""**/*.story"", ""**/*examples.story""); 
doesn't work when there are spaces in a path (which are replaced to %20). 

An issue similar to JBEHAVE-389.","non-feature containing"
"Specify a mvn repository for weld-se I've just tried to test the last 3.3 release. And I had to add a repository in my settings.xml: 
http://repository.jboss.org/nexus/content/groups/public-jboss 
for dependendy : 
<dependency> 
<groupId>org.jboss.weld.se</groupId> 
<artifactId>weld-se</artifactId> 
<version>1.1.0.Final</version> 
</dependency> 

in pom.xml of the module jbehave-weld","feature containing"
"Speed up RegexStoryParser by removing leading .* We noticed our jbehave tests taking a long time. Mostly our fault, but also a surprising amount of time spent in Matcher.find() from RegexStoryParser, said the profiler. Who knew? Turns out, that happens when you call find() on long lines and your regex starts with .* , as this guy explains: 
http://www.fasterj.com/articles/regex2.shtml 

So we removed it, and our tests ran a little faster. (We removed it only from the expressions used with find(); we didn't touch the ones using matches().) 

And your tests run a lot faster! 

Unfortunately, I don't know how to prevent regression here. I don't see performance tests, and the behavior didn't change. (You can note how long things take on the continuous integration server, though.) And it's pretty easy to imagine someone coming through and making the regular expressions all look the same. Still, there you have it.","feature containing"
"Spelling does not work in story editor. Spell checking does not ""highlight"" wrong worlds. 
Spelling is enabled in file Preferences.","non-feature containing"
"Split Listener into BehaviourClassListener and MethodListener As much as I hate to use the phrase ""separation of concerns"", the Listener is actually doing two things - behaviour class callbacks and method callbacks.

By splitting the Listener interface in two, the code becomes a lot simpler. For instance the JMockListener is just a MethodListener.","feature containing"
"Spring Security Example (contribution) Attached is a ZIP of a Spring Security example which uses JBehave with Spring-Security, Spring-Test and JUnit (not the JBehave Ant or Maven plugins). This code is meant to go along with the JBehave presentation found at http://www.learnthinkcode.com. 

I (Brian Repko) transfer copyright to JBehave team for this code.","feature containing"
"SpringStepsFactory handles Step instance creation incorrectly causing tests to fail *SpringStepsFactory* handles the Steps instance creation incorrectly as in the code: 

{code:java}
public Object createInstanceOfType(Class<?> type) {
	for (String name : context.getBeanDefinitionNames()) {
		Class<?> beanType = beanType(name);
		if (type.equals(beanType)) {
			return context.getBean(name);
		}
	}
	throw new StepsInstanceNotFound(type, this);
}
{code}

It's iterating through all the bean definitions and then it tries to figure out the bean type magically to support proxied (AOP) bean instances:

{code:java}
private Class<?> beanType(String name) {
	Class<?> type = context.getType(name);
	if (ClassUtils.isCglibProxyClass(type)) {
		return AopProxyUtils.ultimateTargetClass(context.getBean(name));
	}
	return type;
}
{code}

Unfortunately, in case you defined a special bean scope which has some preconditions, for example calling a method which is binding some stuff onto the current thread, the *context.getBean(name)* call simply fails as it's missing in this code.

There is really no need to do this magic but have a simple implementation for creating the step instance, disregarding whether it's a proxy or not:

{code:java}
public Object createInstanceOfType(Class<?> type) {
        try {
            return context.getBean(type);
        } catch (NoSuchBeanDefinitionException e) {
            logger.error(""Bean not found for type: {}"", type, e);
            throw new StepsInstanceNotFound(type, this);
        }
    }
{code}

In this case, we won't run into the issue mentioned above that we are *creating beans* where we *MUST NOT* do anything like that.

Also, consider a prototype scoped bean. The code above creates instances of those classes which is also an incorrect behavior.","non-feature containing"
"SpringStepsFactory should ignore beans with undefined type and that fail instantiation If you use abstract beans the annotation processor blows up. 

I've included a patch. Its basically a try catch around the getBean step. Test data enhanced to recreate problem.","non-feature containing"
"SpringStepsFactory should not try to instantiate abstract beans Spring allows the declaration of abstract beans. These should be identified via their bean type and not instantiated.","feature containing"
"SpringStoryReporterBuilder does not expose all properties in StoryReporterBuilder Here is a patch to start to fix it. I was unsure on other properties... 

https://github.com/jbehave/jbehave-core/pull/10","feature containing"
"Stack Overflow when parsing a scenario with a very long step A StackOverflowError occurs when the PatternScenarioParser parses a very long step in a scenario. This happened to us when writing a Given step that included a long table parameter. 

This seems to be caused by the well-known regex bug in Java (http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6337993). The patternToPullOutSteps method specifies a pattern that contains an alternative wrapped in a star, specifically ""(.|\\s)*"". 

We were able to use the same strategy as that used to fix JBEHAVE-242. 

One note about the included patch: the test we've added to PatternScenarioParserBehaviour, shouldParseStoryWithVeryLongStep, can sometimes pass incorrectly depending on the order in which the tests from that class are run. If shouldParseLongStoryWithKeywordSplitScenarios runs first, our test passes even without the fix applied. We weren't sure what to do about this, but on our machine the tests reliably ran in the order in which they were defined, so we just kept that one higher up in the file. Possibly there are deeper issues to consider here. 

--Moss Collum and Jim Olsen","non-feature containing"
"Stack Traces should be compressible in printed output Reflection has three lines that don't need to be in a stack for a QA engineer to debug with. 

Groovy has three different fragments of stack (4 to 6 lines each) that don't need to be in a stack for a QA engineer to debug with. 

The compression behaviour (off by default) should be configurable via a boolean flag in the StoryReporterBuilder.","feature containing"
"Stack trace overflow when UsingMatchers.either(...) UsingMatchers.either(...) was calling UsingMatchers.either(...) instead of UsingMatchers.or(...)

Doh!","non-feature containing"
"Stack traces not properly formatted on Windows When formatting stack traces, the function uses a PrintStream and toString to get the text for the stack trace, this is converted according to the platform line endings, in Windows, the cr-lf line endings cause the patterns to fail. 
This means for example that the unit test for TemplatableOutput fails in Windows. 
I have added a unit test to check if it an Exception is converted correctly, however this test will fail under Windows only.","non-feature containing"
"StackOverflowError in RegexStoryParser with long scenario titles Recently we started to use JBehave 3.5.1 in my project and since we use it as a way to automate our systems testing we have a need for rather long textual descriptions between the Scenario-keyword and the first Given. Then we run into the problem with long strings and the long known bug in Java RegExp library. I constructed a unit test that reproduces the error and then found a simple fix and some performance enhancement in the RegexStoryParser (patch attached).","non-feature containing"
"Standardize and make file/directory layout configurable The maven plug-in for JBehave works all right, but it should default to standard maven archetype layout for test classes and the JBehave team should come up with a standard on where plain-text scenarios should live, what file extension they should have (to make them discoverable) and then allow that standard to be overridden.

The documentation on the JBehave site should clearly present the standard layout and specify how it can be overridden.

Reporting output should be included in the standard and should by default go where maven reports typically go, in a sub-directory of target.","feature containing"
"Starting words are not updated when keywords are overridden in steps configuration As posted by Cristiano Gavi_o on list, when the steps configuration keywords are overridden post creation, the starting words are not updated.","non-feature containing"
"Statistics ScenarioReporter A scenario reporter that collects statistics which can be displayed on the reports index page.","feature containing"
"Stats are incorrect when executing a story with a given story Execute a story with a given story: 
The given story contains 2 scenarios, where one of them fails 
The acutal story contains only 1 scenario 

*Expected:* The stats look like can be seen from StatsCorrect.png 

*Reveived:* The stats look like can be seen from StatsError.png 

*Cause* can be found in *PostStoryStatisticsCollector*: 

The method writeData uses the output OutputStream to write the properties to the stats file. 
This method is called for both stories: the given and the actual one. 
However the output Outputstream is closed after the first writingData call and therefore cannot write any other data to the stats file. 
Moreover in the afterStory method there is call to add(""scenarioFailed"") for a given story, which also causes wrong stats. This should be commented out. 
It would also be nice to change the access modifier of methods like add, has, .. to public in order to let people easily add their own statistics. 

*Suggestions for closing the bug:* 

{code:title=PostStoryStatisticsCollector.java|borderStyle=solid} 
private boolean isClosed = false; 

private void writeData() { 
if(isClosed){ 
//Recreate outputstream if already closed .... getOutputFile() has to be created also 
output = new FilePrintStreamFactory.FilePrintStream(output.getOutputFile(), false); 
isClosed = false; 
} 

Properties p = new Properties(); 
for(String event : data.keySet()) { 
if (!event.startsWith(""current"")) { 
p.setProperty(event, data.get(event).toString()); 
} 
} 
try { 
p.store(output, this.getClass().getName()); 
} catch (IOException e) { 
e.printStackTrace(); 
} finally { 
//Put close to finally in order to also close the stream in case of an error 
output.close(); 
isClosed = true; 
} 
} 

public void afterStory(boolean givenStory) { 
boolean write = false; 
if (givenStory) { 
this.givenStories--; 
if ( has(""stepsFailed"") ){ 
// What is this used for? --> causes stats error --> at least givenStoryScenarioFailed should be called? 
//add(""scenariosFailed""); 
write = true; 
} 
.... 
} 
} 
{code}","non-feature containing"
"Step Marked as PENDING without preceding FAILED step - silent failure??? In a pull of master today, but using that JBehave-Core with client code, we have a case where the scenario output looks like :- 

Given foo 
When bar 
And I never get to this line (PENDING) 
Then it does not matter about this line (NOT PERFORMED) 

We can 100% assert that ""I never get to this line"" matches a single well defined step, with no sound-alikes. 

We can't see a FAILED line, which is our usual experience with JBehave 

We can see a Selenium screenshot, but we don't know what that pertains to, and it does not show anything that looks like an error. We're not sure why it was produced.","non-feature containing"
"Step failure exception being thrown in PrintStream reporters prevents the delegating reporter from completing PrintStream reporters should not throw any exception upon step failures, since they prevent the delegating reporter from completing the list of all delegate reporters. This may manifest itself as the stats not be being written. 

In general, reporters should not throw any exceptions, as the the failures are handled by the ErrorStrategy. 

If one does want reporters to throw exceptions on failure, one may decorate the reporter with the StepFailureScenarioReporterDecorator.","non-feature containing"
"Step parameters incorrectly marked in the reports The issue occurs only when a step has more than one parameter, and the value of at least one of those parameters is found as a part of another parameter (a parameter value is a substring of another parameter value). 

E.g. 
Step: 
Given a stock of symbol $symbol and a threshold of $threshold 
Step usage: 
Given a stock of symbol *ABC13DEF* and a threshold of *13* 
In the report: 
Given a stock of symbol *ABC13* DEF and a threshold of *13* 

The issue is due to a flawed implementation in StepCreator class, method replaceParameterValue(). We need a more elaborated replace algorithm in order to take into account this kind of special cases. 
Once a parameter is replaced with the value bearing the start/end placeholders, it should become ""locked""; we don't want the next parameter value replacement to replace values into the previous ones. 

Also the replacement of parameters values in step should be driven by parameters values length not by position to avoid partial replacements. (see parametrisedStep() method)","non-feature containing"
"Step parameters should be converted just before the step executes (not when the scenario is parsed) I should be able to use a ParamaterConverter to retrieve an entity from the database, e.g. 

Given an employee called Bob 
When I give Bob a pay rise of 10,000 pounds 
Then Bob forgets about his embarrassing law suit 

{code:title=EmployeeSteps.java|borderStyle=solid} 
@Given(""an employee called $name"") 
public void createEmployee(String name) { 
new EmployeeBuilder().name(name).buildAndSave(); 
} 

@When(""I give $employee a pay rise of $amount pounds"") 
public void givePayRise(Employee employee, Integer amount) { 
employee.increaseSalary(amount); 
} 
{code} 

{code:title=EmployeeConverter.java|borderStyle=solid} 
public class EmployeeConverter implements ParamterConverter { 

EmployeeRepository repo; 

public Object convertValue(String value, Type type) { 
return repo.findByFirstName(value) 
} 
}{code} 

The parameter converter would be simple to implement, but currently won't work without shenanigans because the step arguments are converted when the step is created, and all the steps in a scenario are created up front, before any of them are executed. This means that at the time the parameter converter attempts to retrieve the entity from the database it hasn't been created. 

To get around the problem I've created a LazyCandidateStep class, which only creates the Step in the perform or doNotPerform methods. This isn't ideals however because I also have to override Steps.createCandidateStep. I've attached my workaround as an example.","feature containing"
"Step statistical usage There are number of distributed teams in my project. 
a lot of the action in tests are common, so my suggestion is to have a statistic report for how many times each step is being used (with grouping by scenario, story, package, etc). 

this can also help with maintenance, where step that are not in use at all, can be deleted 

cheers","feature containing"
"StepCreator doesn't support method generics parameters The issue is described here : 
http://www.mail-archive.com/dev@jbehave.codehaus.org/msg09141.html 

There is an example project attached 


*Description* 
The scenario fails because 
""org.jbehave.core.steps.ParameterConverters$ParameterConvertionFailed: No parameter converter for interface java.util.List' 

If i debug, he passes through the StringListConverter, but in the accept method the type is not an instance of ParameterizedType, because in the StepCreator class you use method.getParameterTypes() that doesn't retrieve de generics but the Class type (so java.util.List) 

*Solution* 
StepCreator at line 805 : 
https://github.com/jbehave/jbehave-core/blob/master/jbehave-core/src/main/java/org/jbehave/core/steps/StepCreator.java 

Should be : 
Type[] parameterTypes = method.getGenericParameterTypes(); 

And the Parameter class should receive a Type instead of a Class type","non-feature containing"
"StepPattern to encapsulate both annotated and resolved patterns and report to the StepMonitor Currently, only the resolved regex pattern is reported to the StepMonitor, e.g. 

stepMatchesPattern(String step, boolean matches, String pattern, Method method, Object stepsInstance) 

where is step is: 

matching steps were coded in English to make it easier for people to understand 

the resolved regex pattern is: 

matching\s+steps\s+were\s+coded\s+in\s+(.*)\s+to\s+make\s+it\s+easier\s+for\s+people\s+to\s+understand 

It's also useful to report the annotated pattern: 

matching steps were coded in $language to make it easier for people to understand 

A new StepPattern model class should encapsultate both annotated and resolved patterns, and the method should thus read: 

stepMatchesPattern(String step, boolean matches, StepPattern pattern, Method method, Object stepsInstance)","feature containing"
"Steps are marked as pending after the first ""And"" step When I have complex scenarios with the use of more then one ""And"" step, JBehave only executes the first ""And"" and the others are marked as ""pending"".","non-feature containing"
"Steps class can't depend on a library with <scope>test</scope> in pom.xml In my Steps implementation, I use an external library. In my pom.xml, this is dependency is declared with <scope>test</scope>. jBehave maven plugin is not able to find this library. Please run the attached project as:

$ mvn clean integration-test -Dlib.scope=compile
...
[INFO] Running scenario binil.scenarios.MyScenario
...
[INFO] BUILD SUCCESSFUL
...

$ mvn clean integration-test -Dlib.scope=test 
...
[INFO] [jbehave:run-scenarios {execution: run-scenarios-listed}]
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to instantiate scenario 'binil.scenarios.MyScenario'

Embedded error: The scenario 'binil.scenarios.MyScenario' could not be instantiated with class loader: [org.jbehave.scenario.ScenarioClassLoader urls=[/Users/binil/work/jbehave-bug-report/target/test-classes/, /Users/binil/work/jbehave-bug-report/target/classes]]
org/apache/log4j/Logger
...
$

This forces me to declare the dependency (in my specific case, jetty and dbunit) as <scope>compile</scope> in my pom.xml, which means all users of my project needs to get this library as a transitive dependency. I would like to avoid that.","non-feature containing"
"Steps could benefit from a pre-requisite check An Example: 

PreRequisiteHandler prh = new PreRequisiteHandler() { 
public void preRequisiteCheck(Object instance, Method method) { 
String url = webDriverProvider.get().getCurrentUrl(); 
String urlPart = getUrlPartFromAnnotationOnMethod(method)); 
assertThat(url, contains(urlPart)); 
}}; 

configuration.usePreRequisiteHandler(prh); 

WebDriver assumed page checking, before invoking a step, is one use of a pre-requisite. Ultimately this is a jb-core enhancement, and a jb-web-selenium specialization.","feature containing"
"Steps methods as parameter converters when annotated by @AsParameterConverter Better starting with an example : 

{code} 
Given a series 
- Name : Series 0110 
- NAV : $200 
Given an investor Peter 
When Peter invests 7500 shares in series Series 0110 
Then ... 
{code} 

It would be interesting to have the Steps definition class also able to provide some converters. This is what the code could look like : 
{code} 
@AsParameterConverter 
public Person findByFirstName( String firstName ) { 
return personDao.findByFirstName( firstName ); 
} 

@When(""$person invests $nbShares shares in series $series"" ) 
public void invest(Person person, int nbShares, Series series ) { 

} 
{code} 

I've attached the ParameterConverterStepsFactory as it's getting bigger.","feature containing"
"StepsBehaviour test broken for OpenJDK 7 Unit test StepsBehaviour.shouldReportFailuresInBeforeAndAfterMethods is broken when run on JDK 7 (see stacktrace attached). With JDK 6 this error doesn't occur. 

What actually breaks the test is that methods annotated with @BeforeScenario are picked in different order for the two JDK versions. This is caused by the fact that java.lang.Class.getMethods() returns methods in no particular order as clearly stated in its javadoc and probably its implementation has been changed. 

The question is whether it's enough just to fix the test to enforce the order or this issue affects the framework more deeply and additional measures are needed.","non-feature containing"
"Stories not found if code location paths contains spaces I started a jbehave spring project by using the archetype 
<console> 
mvn archetype:generate -DgroupId=com.mycompany.app -DartifactId=my-webapp -DarchetypeArtifactId=jbehave-spring-archetype -DarchetypeGroupId=org.jbehave -DarchetypeVersion=3.5.3 -Dversion=1.0-SNAPSHOT 
</console> 
If i do that in a parent folder containing spaces in name, no story is found and executed while 
<console> 
mvn clean integration-test 
</console> 

To reproduce the problem independent from parent folder name i change the target path of the project to ""the target"".","non-feature containing"
"Stories should be retrievable from external or remote sources I want to be able to specify my stories in an external or remote source, e.g. a file directory or a wiki. 

The stories resources should then be identifiable via a URL or some such, of which local class path resources are a special case.","feature containing"
"Story Meta not properly parsed when Lifecycle is present.  If Lifecycle is present, it should be not taken into account as Meta. ","non-feature containing"
"Story description doesn't get escaped in XML template jbehave-xml-output.ftl template is missing xml escaping for story descriptions","non-feature containing"
"Story duration time in multi-threading execution mode is higher than normal When running in multi-threading mode, the total is calculated as simply be the sum of each duration. If you have a single thread then it will coincide with the build duration (more or less), but if you use multiple threads it'll be off by a factor which should correspond to the number of threads. 

The additional information of the average duration per thread, the total sum of the story durations divided by the number of threads, should also be available if you are in multi-threading mode.","feature containing"
"Story duration timeout occurs for not started story Some time (useStoryTimeoutInSecs) after starting my tests web browser is closed with warning"" [WARNING] Story com/sample/qa/stories/login.story duration of 101 seconds has exceeded timeout of 100 seconds"". 
No one executed story exceed this time. This is even before ""login.story"" execution. The clue is that the story contains all @Before and @After methods. The story is executed as one of last (stories are independent so this is not a problem). So looks like timer is started for the story not in situation where story execution is started but when @BeforeStories from that story is run for first executed story. 
As a hook I exceeded useStoryTimeoutInSecs very much (for length of all my stories execution), but in that case I am loosing mechanism for verifying story execution time. 
I am using following JBehave versions: 
<jbehave.core.version>4.0-beta-9</jbehave.core.version> 
<jbehave.site.version>3.2</jbehave.site.version>","non-feature containing"
"Story editor does not resolve steps from referenced projects or jars on classpath JBehave Story Editor does not resolve any steps declared in a separate library available on the classpath. 

Raised by Github issue #5: https://github.com/jbehave/jbehave-eclipse/issues/5 
Pull Request in issue #9: https://github.com/jbehave/jbehave-eclipse/pull/9 (includes unit tests)","non-feature containing"
"Story execution continues with steps even of failure of GivenStory In case of sceanrio level given story as follows: 

Meta: 
@storyName my.story 
Scenario: Testing given story failure 
Meta: 
@index 1 
@dummy 
GivenStories: test.story 
Given the given story is successfull 
Then execute then in my.story 


Even when the GivenStory[test.story] fails, the execution continues with the next steps in the calling story[ie my.story]. which should not be the case.","non-feature containing"
"Story execution continues with steps even of failure of GivenStory Story execution continues with steps even of failure of GivenStory. If there are two given stories, if there is a failure in GivenStory1, in console it was showing but executing the second Given story. How to fix this. 
","non-feature containing"
"Story execution not failing-fast when ignoreFailuresInStories=false This is a regression introduced with multi-thread support.","non-feature containing"
"Story meta incorrectly parsed when GivenStories are specified at story level When meta info is mentioned as below, with GivenStories at story level, the value of meta property gets appended with the GivenStories line. 

For example for a story file as below 
Meta: 
@storyName ReuseBitrate 
GivenStories:EndToEnd.story 

Scenario: Verifying ReuseBitrate functionality 
Given Step1 
Then Step2 

The value of @storyName appears with the next line (without quotes) 
""ReuseBitrate 
GivenStories:EndToEnd.story""","non-feature containing"
"Story narratives Given a story file with several scenarios
Given the story has a narrative
When I output the scenarios
Then I should see the narrative","feature containing"
"Story reporter in the XML format does not include the story narrative in the story title XML attribute XML report builder produces a report with a empty ""title"" attribute of the ""story"" elment if the executed story contains a narrative e.g. <story title=""""> 

If the executed story does not contain a narrative then a empty ""title"" attribute is still produced. 

I would expect a story narrative to be contained in the ""title"" attribute if the story provides one or no ""title"" attribute should be provided if the story contains no narrative 

Attached testcase has only been tested on the 3.1.x versions","non-feature containing"
"Story reports not being published via Hudson Plugin When the jBehave/xUnit plugin kicks in after our stories have executed, it fails to copy the reports with the following error: 

{quote} 
[xUnit] [INFO] - Starting to record. 
[xUnit] [INFO] - Processing JBehave-3.x 
[xUnit] [INFO] - [JBehave-3.x] - 3 test report file(s) were found with the pattern '**/jbehave/*.xml' relative to 'C:\bin\hudson\hudson_home\jobs\ConvergencePilotIntegrationTests\workspace' for the testing framework 'JBehave-3.x'. 
[xUnit] [ERROR] - The result file 'C:\bin\hudson\hudson_home\jobs\ConvergencePilotIntegrationTests\workspace\ConvergencePlayerManagementIntegrationTests\target\jbehave\BeforeStories.xml' for the metric 'JBehave' is empty. The result file has been skipped. 
[xUnit] [WARNING] - All test reports are empty. 
[xUnit] [INFO] - Check 'Failed Tests' threshold. 
[xUnit] [INFO] - Check 'Skipped Tests' threshold. 
[xUnit] [INFO] - Setting the build status to SUCCESS 
[xUnit] [INFO] - Stopping recording. 
{quote} 

I have confirmed that all xml files are indeed generated (see attached).","non-feature containing"
"Story titles Given a story with several scenarios
Given the story has a title
When I run the story
Then I should see the title in the output","feature containing"
"StoryFinder should be responsible for finding story paths and runnable stories StoryFinder should be a facade for finding in different guises. 

It should allow the finding of textual story paths from a base search dir using include/exclude patterns. 

It should allow for prefixing all the paths founds with a given prefix - in other to easily created URL-based paths. 

All story paths should be normalised paths with '/' as separator. 

It should allow the finding of java sources and creation of corresponding RunnableStory instances using a given EmbedderClassLoader.","feature containing"
"StoryFinder.findPaths is missing the parameter (URL, List, List) findPaths has 3 parameter variants and is missing (URL, List, List) 
currently the actual implementation uses a String for searchIn and converts the URL to the path if called with an URL, but this may change if other urls than file: should be supported.","feature containing"
"StoryMaps could link back to Story source, or colored (HTMLified) story output. Refer http://screencast.com/t/g55A47cH0x 

Cant click the story name to go anywhere :-(","feature containing"
"StoryMaps view could have more information Refer http://screencast.com/t/g55A47cH0x 

1) Column called ""+author *"" would be better titled ""has author"" 

2) For that column, rather than 'x' in the cells, it would be better with the variance - 'Mauro' in this case.","feature containing"
"StoryParser should look for starting keywords only after a newline In some languages, e.g. Italian, Portuguese and Spanish, the ""And"" keyword is translated as a single letter (""E"" or ""Y"") which makes it possible to find in some textual acronym. If the acronym ends in that letter, the parser will consider it a new step. 

A comprehensive solution would be to require that RegexStoryParser identifies the second occurrence of a keyword in scenario text only if preceded by a newline. 

This solution would also allow users to easily comment out steps prefixing the starting work (on same line with !-- keyword)","feature containing"
"StoryReporter being executed 3 times Hi, 
I'm implementing my own Reporter by extending StoryReporter.

The thing is , each override method being executed 3 times (one after another) before the the execution moves to next method in the execution flow

For example : beforeStory (3 executions) ---> beforeScenario (3 executions) ---> afterScenario (3 executions)


The running file looks like :

{color:#d04437}public abstract class GenericScenario extends JUnitStories {
    //set system time property in order to be appended to the log file
    static {
        SimpleDateFormat dateFormat = new SimpleDateFormat(""dd MMM yyyy - HH:mm:ss"");
        System.setProperty(""systemDate"" , dateFormat.format(new Date()));
    }

    public GenericScenario(){
        Embedder embedder = configuredEmbedder();
        embedder.embedderControls().useStoryTimeouts(PropertiesSingelton.getInstance().getProperty(""timeout""));
        embedder.useTimeoutParsers(new MyParser());
        embedder.configuration().useParameterConverters(
                configuration().parameterConverters().addConverters(
                        new ParameterConverters.EnumConverter()));

        //adding skip support
        configuredEmbedder().useMetaFilters(Arrays.asList(""-skip""));
    }
    public class MyParser implements StoryTimeouts.TimeoutParser{
        public boolean isValid(String timeout) {
            return timeout.matches(""(\\d+)sec"");
        }

        public long asSeconds(String timeout) {
            return Long.parseLong(StringUtils.substringBefore(timeout, ""sec""));
        }
    }

    @Override
    public Configuration configuration(){
        return new MostUsefulConfiguration().useStoryLoader(
                    new LoadFromClasspath(this.getClass()))
                .useStoryReporterBuilder(storyReporter.withDefaultFormats()
                        .withFormats(Format.TXT , Format.CONSOLE )
                        .withReporters(new MyStoryReporter()))
                .useStoryControls(new StoryControls().doSkipScenariosAfterFailure(true));
    }


    StoryReporterBuilder storyReporter = new StoryReporterBuilder() {
        /**
         * The builder is configured to build with the
         * StoryReporterBuilder.Format.STATS as default format. To change
         * the default formats the user can override the method:
         */
        @Override
        public StoryReporterBuilder withDefaultFormats() {
            return withFormats(Format.CONSOLE);
        }
    };

    @Override
    public InjectableStepsFactory stepsFactory(){
        return new InstanceStepsFactory(configuration(), new classes .... );
    }

    @Override
    protected abstract List<String> storyPaths();
}{color}


Any idea how to overcome the issue ?

I've uploaded a simple example project where you reproduce the issue.
Pls see that the Before/After stories is being executed several times , same has happens with the rest methods I'm implementing.

{color:#d04437}Processing system properties {}
Using controls EmbedderControls[batch=false,skip=false,generateViewAfterStories=true,ignoreFailureInStories=false,ignoreFailureInView=false,verboseFailures=false,verboseFiltering=false,storyTimeouts=60,threads=1,failOnStoryTimeout=false]

(BeforeStories)
before ------ BeforeStories
before ------ BeforeStories
before ------ BeforeStories

after ------ 
after ------ 
after ------ 

(AfterStories)
before ------ AfterStories
before ------ AfterStories
before ------ AfterStories

after ------ 
after ------ 
after ------ 
Generating reports view to '/Users/ie54553/Desktop/JbehaveExample/target/jbehave' using formats '[console, txt, console, mystoryreporter, console, txt, console, mystoryreporter, console, txt, console, mystoryreporter]' and view properties '{navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, decorated=ftl/jbehave-report-decorated.ftl, maps=ftl/jbehave-maps.ftl}'
Disconnected from the target VM, address: '127.0.0.1:49948', transport: 'socket'
Reports view generated with 0 stories (of which 0 pending) containing 0 scenarios (of which 0 pending)

Process finished with exit code 0{color}

Thanks","non-feature containing"
"StoryReporter forces me to write non thread safe code The StoryBuilder interface includes the following methods 

void beforeStory(Story story, boolean givenStory); 
void beforeScenario(String scenarioTitle); 
void beforeExamples(List<String> steps, ExamplesTable table); 

Which forces me to store the story and scenario in local variables in order to know exactly which examples are about to be run in my beforeExamples method. This results in a slightly ugly but definately not thread safe StoryBuilder implementation. It also forces me to implement beforeStory() and beforeScenario() when I was actually only interested in beforeExamples() 

If the methods were: 
void beforeStory(Story story, boolean givenStory); 
void beforeScenario(Story story, boolean givenStory, String scenarioTitle); 
void beforeExamples(Story story, boolean givenStory, String scenarioTitle, List<String> steps, ExamplesTable table); 

I would not need to keep track of the current state and my implementation could be Thread safe (and prettier).","feature containing"
"StoryReporter has no afterStep(...) method I discovered that org.jbehave.core.reporters.StoryReporter has no method afterStep(...). 

It seems to have been forgotten, so I created a Jira issue for this.","non-feature containing"
"StoryReporter.beforeStory invoked after story execution when multithreaded With multiple JBehave threads the beforeStory method of a StoryReporter is invoked after the story has been actually performed.

(sample project is available here: https://github.com/csabakoncz/serenity-projects/tree/master/jbehave-multithreaded)

I am using the StoryReporter in single-threaded mode to expose information on the currently executing story to the step implementations. 
This way I can generate meaningful logs/screenshot file names.

Is there any other way to access the Story object in a step implementation that works also in multithreaded mode?","non-feature containing"
"StoryReporter.restartedStory() is printed on a Closed Stream in PrintStreamOutput Class After a Story is restarted, StoryReporter.restartedStory() call is made after StoryReporter.afterStory() is invoked.

This results in a Closed stream for non System.out based OutputStreams. 

As a result of this issue, is not possible to know that Story has been restarted, other than looking the System.out stream.

A Maven project that demostrates this (while debugging!), has been created at https://github.com/rjimgal/jbehave-stream-closed","non-feature containing"
"StoryReporterBuilder code location should be settable from the output directory by Ant tasks and Maven goals The Maven plug-in does not configure a code location on the embedder's {{storyReportBuilder}}, therefore the story reporter will attempt to find story stats files in a directory relative to the current directory, and write the reports relative to the current directory as well. 

Example project structure: 
{noformat} 
/ 
/app 
/app-stories 
{noformat} 

If the {{app-stories}} project uses the JUnit integration to run stories, its output files will correctly be written to {{/app-stories/target/jbehave}}. 
A {{generate-stories-view}} mojo configured in {{app-stories/pom.xml}} will not find those output files and write the {{reports.html}} to the incorrect directory, unless the Maven build is started in the {{app-stories}} module directory. 

For instance, in the root directory: 
{noformat} 
mvn verify -pl :app-stories 
{noformat} 

would search for story output files in /target/jbehave, not find anything, and write an empty {{reports.html}} to /target/jbehave/views. 

Note that the {{unpack-view-resources}} mojo in the same {{pom.xml}} will work correctly, because it uses a different (and correct) way of configuring the output directory. 

Suggestion: 
Use the {{project.build.outputDirectory}} or {{project.build.testOutputDirectory}} properties to derive the story reporter builder code location from within the mojo.","feature containing"
"StoryReporterBuilder does not have an easy way to provide custom StoryReporter(s) I recently wanted to add my own StoryReporter to every story and found it quite difficult. 

It would be great if StoryReporterBuilder could have one of the following methods added 
withStoryReporters(StoryReporter... storyReporters) 
addStoryReporter(StoryReporter storyReporter) 

The only way I could find was to override StoryReporterBuilder.build(String storyPath) and use a DelegatingStoryReporter to include my custom storyReporter(s).","feature containing"
"StoryReporterBuilder fails to parse test results if story has GivenStories In case of story with GivenStories JBehave raport is broken. Although few scenarios has been successfully performed - ""Scenarios"" and ""Steps"" are missing. Duration is improperly set to zero. 

{code:title=Example of problematic story:|borderStyle=solid} 
@author Przemyslaw Kwiecien 
@organization Example Organization Systems Ltd. 

GivenStories: com/sample/qa/stories/functionality1.story#{id06:create_something_with_rates}, 
com/sample/qa/stories/other.story#{id09:full_sample} 

Scenario: Create Something 
. 
. 
. 
{code} 
Report generated with such story is attached as ""jbehaveBrokenReport.jpg"". 
If GivenStories is replaced by corresponding steps report is fine (""jbehaveBrokenReport-withoutGivenStories.jpg""). 
""jbehaveBrokenReport2.jpg"" file shows more errors caused by the same problem. This time more stories were run - duration is totally broken. 

I am using following JBehave versions: 
<jbehave.core.version>4.0-beta-9</jbehave.core.version> 
<jbehave.site.version>3.2</jbehave.site.version> 

{code:java|title=Configuration|borderStyle=solid} 
@Override 
public Configuration configuration() { 
Class<? extends SanityEmbedder> embedderClass = this.getClass(); 
ParameterConverters parameterConverters = new ParameterConverters(); 
ExamplesTableFactory examplesTableFactory = new ExamplesTableFactory(new LocalizedKeywords(), new LoadFromClasspath(embedderClass), parameterConverters); 
parameterConverters.addConverters(new ParameterConverters.DateConverter(new SimpleDateFormat(""yyyy-MM-dd"")), 
new ParameterConverters.ExamplesTableConverter(examplesTableFactory), new ParameterConverters.BooleanConverter(""true"", ""false"")); 

return new MostUsefulConfiguration() 
.useStoryLoader(new LoadFromClasspath(embedderClass.getClassLoader())) 
.useStoryParser(new RegexStoryParser(examplesTableFactory)) 
.useStoryReporterBuilder(new StoryReporterBuilder() 
.withCodeLocation(CodeLocations.codeLocationFromClass(embedderClass)) 
.withDefaultFormats() 
.withFormats(CONSOLE, TXT, HTML, XML) 
.withCrossReference(new CrossReference()) 
.withFailureTrace(true) 
.withFailureTraceCompression(false)) 
.useParameterConverters(parameterConverters) // use custom date pattern 
.useStepPatternParser(new RegexPrefixCapturingPatternParser( 
""$"")) // use '%' instead of '$' to identify parameters - this little devil is optional 
.useStepMonitor(new SilentStepMonitor()) 
.useParameterConverters(parameterConverters); 
} 
{code}","non-feature containing"
"StoryReporterBuilder method names should be more consistent Adopt with* convention for all builder methods that specify the build specification.","feature containing"
"StoryReporterBuilder::withReporters breaks tests. When using storyReporterBuilder.withReporters(new CustomJBehaveStoryReporter()) the build not only somehow passes all the tests but still shows build fails, but also nothing except given stories and after story are executed. For instance the methods afterStep or other methods do not run in the CustomJbehaveStoryReporter. Any help would be much appreciated.
","non-feature containing"
"StoryRunner failure strategy is not set when running before or after stories steps in multiple threads I got following exception when building attached project (mvn clean install): 

------------------------------------------------------------------------------- 
Test set: pl.mmadej.jbehave.JBehaveStoriesTest 
------------------------------------------------------------------------------- 
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.562 sec <<< FAILURE! 
[run_with_no_replacement.story](pl.mmadej.jbehave.JBehaveStoriesTest) Time elapsed: 0.343 sec <<< ERROR! 
org.jbehave.core.embedder.Embedder$RunningStoriesFailed: Failures in running before or after stories steps 
at org.jbehave.core.embedder.Embedder.runStoriesAsPaths(Embedder.java:210) 
at pl.mmadej.jbehave.JBehaveStoriesTest.run(JBehaveStoriesTest.java:99) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 

Please investigate. This error happens with jbehave 3.4. When I'm using 3.3.2 everything looks ok. 
Internally there is NPE in StoryRunner:76 -- currentStrategy.get().handleFailure(storyFailure.get()); 
currentStrategy.get() returns null. 

Please investigate. 
Thanks in advance for your help","non-feature containing"
"StoryRunner methods should use BehaviourListener instead of OutputStream StoryRunner methods should not be coupled to OutputStreams. Use BehaviourListener instead.

The methods using OutputStream should be deprecated in favour of BehaviourListener, with PlainTextScenarioListener as the default impl.

Refactor requires two methods to be added to BehaviourListener interface:

void printReport();
boolean hasBehaviourFailures();","feature containing"
"StoryRunner.runParametrisedScenariosByExamples does not execute the examples after the first failure Currently, the method StoryRunner.runParametrisedScenariosByExamples does not 
check the configuration and whenever a step fails all subsequent examples are 
reported as not performed. 

A simple fix would be to do this before calling the runScenarioSteps method: 

if(context.configuration().storyControls().resetStateBeforeScenario()) { 
context.resetState(); 
} 

Thanks","non-feature containing"
"StringListConverter converts an empty String to a one element List instead of an empty List Given a textual step:
{code}
Then string is ''
{code}

the following test will fail:
{code}
@Then(""string is '$params'"")
public void empty(List<String> params) {
ensureThat(params.isEmpty(), equalTo(true));
}
{code}

A more likely scenario would be a table example:
{code}
Scenario: <Guess> marks as <Mark>
Given the secret r,g,y,b
When I guess [Guess]
Then I should get [Mark]

Examples:
|Guess|Mark|
|c,c,c,c||
|b,c,c,c|m|
{code}
where the first row would fail if Mark were compared to an empty List.","non-feature containing"
"Summary report highlights problem with missing stats files We started to get some false positive results from our tests in our framework (JBehave 3.9.5 and Selenium 2.49.1 and Java 7). The firefox report shows them as having failed, the summary report shows them as not having run (no stats file).  The lack of stats file occurs about one in every 21 tests so out of our current ~200 scripts there are about 10 missing stats files.  What happens then is that if a failure coincides with a missing stats file then a false positive is given and potentially the build passes despite one or more test failures.","non-feature containing"
"Support 'And' after Given, When or Then Should be able to do:

Given <a context>
And <another context>
When <an event>
And <another event>
Then <an outcome>
And <another outcome>","feature containing"
"Support @With annotation Is it possible to support a With tag in scenarios. 

e.g. instead of using the following 

Given a new trade 
and trade price of $15 

the following would read better 

Given a new trade 
With trade price of $15","feature containing"
"Support Android WebDriver in PropertyWebDriverProvider Add android to the browser property of PropertyWebDriverProvider. The android web driver is a remote web driver implementation and requires a url of the web driver application running on the Android device or emulator. 

I have a basic Android web driver implementation I have been using while moving my tests over to JBehave. I have attached my code in case it may be of any use.","feature containing"
"Support AtomicInteger and AtomicLong parameters Atomic variables for multi-threading scenarios.","feature containing"
"Support Guava DirectExecutorService JBehave starting from version 4.1 depends on Google/Guava library in version 19.0
{{SameThreadExecutors}} class in jbehave-core uses a Guava method: {{MoreExecutors.sameThreadExecutor();}} that is deprecated in version 19 and is removed in newer versions.
According to the [MoreExecutors#sameThreadExecutor javadoc:|https://google.github.io/guava/releases/19.0/api/docs/com/google/common/util/concurrent/MoreExecutors.html#sameThreadExecutor()]

{quote}*Deprecated*. Use directExecutor() if you only require an Executor and newDirectExecutorService() if you need a ListeningExecutorService. *This method will be removed in August 2016.*
{quote}

----

The class {{MoreExecutors.sameThreadExecutor();}} should use newest {{MoreExecutors.newDirectExecutorService();}} instead of the deprecated method.","feature containing"
"Support HtmlUnit WebDriver in PropertyWebDriverProvider Add Browser enum HTML to support HtmlUnitWebDriver via value ""html"" for property ""browser"".","feature containing"
"Support Needle as DI and Mocking Framework I want to contribute a JBehave module supporting Needle as DI/Mocking framework (http://needle.spree.de/), similiar to other existing (Guice, Spring, Weld). As a result, one could use Needle inside of JBehave which would ease testing of JEE components. 

My first implementation is already committed to the fork: https://github.com/holisticon/jbehave-core 
Currently it already provides NeedleStepsFactory and I'm working on @UsingNeedle annotation right now.","feature containing"
"Support Spring AnnotationConfigApplicationContext A patch for jbehave-spring that allows for Java (Annotation) based Spring configurations 

Included are examples using annotations based configuration","feature containing"
"Support alternative narrative syntax Support the alternative narrative syntax ""As a, I want to, So that"", supported in core from 3.9 (JBEHAVE-905).","feature containing"
"Support annotated named parameters in Steps methods Currently, steps are matched on the basis of their natural order. 

Non-sequential parameter matching is a pre-requisite to support Scenario Templates (see JBEHAVE-130).","feature containing"
"Support both synchronous and delayed StoryReporter in ConcurrentStoryReporter Currently, the the following is ConcurrentStoryReporter's constructor
{code}
ConcurrentStoryReporter(StoryReporter crossReferencing, StoryReporter delegate, boolean multiThreading)
{code}

I am just restate what is currently implementing.
CrossReference was using StoryReporter mechanic (3.9.x) to report on the duration stats which is only be taken if caller synchronously call the listener's interface when multithread is true (i.e. thread > 1)

I have a feeling that the constructor would be removed since CrossReference was refactored.

I was using the StoryReporter crossReferencing parameter to support real time view of Context / ContextView / ContextStoryReporter.

I hope you explicitly support this feature when removing CrossReference parameter.




","feature containing"
"Support comments in plain-text scenarios It would be nice to have the ability to add comments in the plain-test scenarios. If we add any comments, the parser thinks they are the continuation of the previous line. To have comment support so that all lines preceded by # or -- or whatever get ignored, that would be a nice feature.","feature containing"
"Support composition of steps In order to be more effective in communication and in scenario development 
As a scenario writer 
I want to compose steps using existing steps 

Example: 

{noformat} 
Given <customer> has previously bought a <product> 
{noformat} 

Could be a composition of 
{noformat} 
Given <customer> is logged in 
When they put a <product> in their cart 
And go to checkout 
And pay using their registered card 
And go to the home page 
{noformat} 

Need to think about what options are available for the ""definition"" of the composition. 

Options include: annotations, step concatenation, etc ...","feature containing"
"Support for @Given/@When/@Then annotations in interfaces Right now, this kind of step is not supported. 
{CODE} 
public interface FooBarSteps { 
@Given(""whatever bla bla"") 
void givenWhateverBlaBla(); 

} 

public class FooBarStepsImpl { 
@Override 
public void givenWhateverBlaBla() { 
} 
} 
{CODE} 

The FooBarStepsImpl won't be detected as annotation-bearing class. 

However, I think it'd be great to support them. It would allow JDK Proxies for steps, and would allow separating step interface construction from actual step implementation. 

One example use-case would be making it possible to test, with the same stories, two ""client libraries"" with the same functionality but different APIs, by reimplementing the step classes using each library's API. 

I think the StepsFactory-related changes needed are simple (just take into account also interfaces when exploring methods for annotations), and I've identified also some changes needed in the Steps class. An ongoing, tentative and untested attempt for the required changes in the Steps class is here: 
https://github.com/flozano/jbehave-core/commit/1d7d002f16e7e786797b2240c535bfc0d13d97e0 

Any opinion about this?","feature containing"
"Support for Weld/Context and Dependency Injection framework Provide support for CDI (Context and Dependency Injection) using the Weld reference implementation http://www.seamframework.org/Weld","feature containing"
"Support for accented letters in step pattern placeholder names As it seems JBehave does not support multilanguage for parameter names. 

Unfortunately this Jira is not configured for umlauts, so I cannot paste the text into this ticket. See the first attached screenshot please for how the step looks like with umlauts. 

JBehave does not like the parameter names containing umlauts since they contain non-ASCII characters. 

This applies both to the Eclipse plugin and the core execution. 

Please see the attached screenshots which illustrate the problem. 

Can you please fix that so that umlauts are supported in JBehave parameter names?","feature containing"
"Support for alternative narratives in stories I would like to change the syntax for my scenarios. 

Currently supported syntax is 
In order to 
As A 
I Want 


I would like the ability to use: 

As A 
I Want 
So 

It would be nice to have a place to change the Key words used in the Narratives.","feature containing"
"Support for class-based AOP in step classes in Spring When I add @EnableAspectJAutoProxy in my spring setup, with the bundled steps factory, my step beans can't be found. 

I've done my own steps factory... it assumes the use of a specific type annotation on the step classes, to make it more clear which beans to explore, but that can be removed in a more general case. 

Here it's how it looks like (WIP): 
{CODE} 
public class EnhancedSpringStepFactory extends AbstractStepsFactory { 

private static final Logger LOGGER = LoggerFactory 
.getLogger(EnhancedSpringStepFactory.class); 

private final ApplicationContext context; 

public EnhancedSpringStepFactory(ApplicationContext context, 
Configuration config) { 
super(config); 
this.context = context; 
} 

@Override 
public Object createInstanceOfType(Class<?> type) { 
return context.getBean(type); 
} 

@Override 
protected List<Class<?>> stepsTypes() { 
Set<Class<?>> result = new HashSet<>(); 
Map<String, Object> beans = context.getBeansWithAnnotation(Steps.class); 
for (Map.Entry<String, Object> kv : beans.entrySet()) { 
LOGGER.info(""Possible candidate step class found in bean {}"", 
kv.getKey()); 
final Class<?> target; 
if (AopUtils.isAopProxy(kv.getValue())) { 
LOGGER.info(""Bean {} is an AOP proxy"", kv.getKey()); 

target = AopProxyUtils.ultimateTargetClass(kv.getValue()); 
LOGGER.info(""Extracted class name {} from bean {}"", 
target.getName(), kv.getKey()); 

} else { 
LOGGER.info( 
""Bean {} is directly of type {} (not AOP enveloped)"", 
kv.getKey(), kv.getValue().getClass().getName()); 
target = kv.getValue().getClass(); 
} 
if (hasAnnotatedMethods(target)) { 
if (!result.add(target)) { 
// TODO log sth... scoped 
} 
} else { 
LOGGER.warn( 
""Bean {} did not contain any JBehave annotated methods"", 
kv.getKey()); 
} 
} 

return new LinkedList<>(result); 
} 
} 

{CODE} 

In my case it *seems* to work. I assume that, by returning the underlying target type in the stepTypes() method and not the proxy type, the matching logic of JBehave should work out of the box... 

Do you foresee any problem with this kind of approach? if no, I can try a pull-request ...","feature containing"
"Support for provided-scope dependencies As per discussion http://comments.gmane.org/gmane.comp.java.jbehave.user/1342, JBehave maven plugin never uses provided-scope dependencies. This is a pain for us as we package all libraries in separate modules, so they're always in provided scope. Having all of them explicitly changed to compile scope is way too much work. 

According to the conversation in the thread, the plugin uses requiresDependencyResolution which has scope runtime by default, excluding provided scope. According to MojoApiSpecification (http://maven.apache.org/developers/mojo-api-specification.html) it's just a matter of changing it to for example compile+runtime to have dependencies from other scopes as well.","feature containing"
"Support loading of stories from ODT format As a BA I want to be able to write my story in a ODT format","feature containing"
"Support loading stories from Google Docs As a BA I want to be able to write my story in Google Docs. 
This has the advantage that the stories are in the cloud and multiple stakeholders (BA, developer, ...) work at the same time on the same document. 

By using the Google docs API, a document can be exported to ODT and be delegated to the ODT support in JBehave. 

ATTENTION: the given patch contains also a fix for the class OdfUtils in the module jbehave-odf. The class OdfTextExtractor is used to convert ODT correctly to text.","feature containing"
"Support multiple CandidateSteps instances in Stepdoc generation Make StepdocGenerator contract more generic to support a vararg of CandidateSteps instances, in line with other JBehave services.

Also, add stepdocs for BeforeScenario and AfterScenario steps.","feature containing"
"Support multiple formats of story timeouts Add support for specification of story timeouts via multiple formats.

A simple and readable alpha-numeric format should be supported with formats like: 

* 1d 12h 30m 15s
* 5m 30s
* 50s

A digits format expressing the number of seconds should also be supported (for backward compatibility)  

Other formats could also be added in the future, eg ISO8601. 

Custom formats should also be configurable.","feature containing"
"Support multiple test frameworks Currently, we support JUnit 4.x as the test framework to run scenarios via the @Test annotation. 

We could easily extend support to multiple frameworks - including JUnit 3.8 and TestNG. 

The cleanest approach would be to rename abstract Scenario to JUnitScenario and pull up a Scenario interface. 
Since JUnit 4.x jar includes the 3.8 classes, support for JUnit 3 would simply require extending TestCase and having a run method that starts with ""test"".","feature containing"
"Support named parameters in Steps methods via Paranamer @Named parameters are supported, but what about real parameter names via Paranamer ?

JBEHAVE-173 delivered the Annotation based equiv.","feature containing"
"Support nested composite steps Having {{@Composite}} steps calling other {{@Composite}} steps does not seem to work at all: 
{code:java} 
@Then(""all buttons are enabled"") 
@Composite(steps = { 
""Then all left buttons are enabled"", 
""Then all top buttons are enabled"" } 
) 
public void all() {} 

@Then(""all left buttons are enabled"") 
@Composite(steps = { 
""Then first left button is enabled"", 
""Then second left button is enabled"" } 
) 
public void left() {} 

@Then(""all top buttons are enabled"") 
@Composite(steps = { 
""Then first top button is enabled"", 
""Then second top button is enabled"" } 
) 
public void top() {} 

@Then(""first top button is enabled"") 
public void firstTop() { 
Assert.fail(""Bah""); 
} 
{code} 

In the given scenario neither the substeps will be resolved nor called. So _Then second top button is enabled_ will not be marked as pending and _Then first top button is enabled_ won't fail. 

That's not nice as it might break your steps if you do some refactorings to them. Composite-calls should not need know if they again resolve to Composite steps.","feature containing"
"Support other languages when user creates a ""New Story"" If you create a new story in Eclipse, always the English story template is used. 

But if you write stories in another language you need another template for that other language. 

It would be good if JBehave Eclipse plugin could create a new story according to the language with is configured in Eclipse preferences. 

Of course it is a lot of work translating the example text in all the languages. That could be left in English with just translated keywords for ""given"", ""when"" and so on.","feature containing"
"Support package scanning for annotated Steps classes Add ScanningStepsFactory implementation to retrieve and instantiate Steps classes by scanning configured packages and finding classes containing annotated methods. 

It can used programmatically or via the @UsingSteps annotation. 

Scanning will require optional org.reflections:reflections dependency.","feature containing"
"Support partial named parameter replacement in parameterized steps * Given I have an implemented step:
{code:java}
@Given(""I do something with parameter $parameter"") 
public void doSomething(@Named(""parameter"") String parameter) 
{
    // ...
}
{code}

* And I have a scenario:
{code}
Scenario: Do something
Given I do something with parameter foo-<parameterPart>-bar
Examples:
|parameterPart|
|middle| 
{code}

* Then {{parameterPart}} should be properly replaced by value from the examples
* And {{foo-middle-bar}} value should be passed as {{parameter}} to the step implementation



","feature containing"
"Support synonym for Given The german keyword for Given is 'Gegeben'. 
So if I want to imply a specific date, I have to write\\ 
{{Gegeben heute ist der 15.09.2013}} 

{{Gegeben}} is _suboptimal_ for environmental declarations.\\ 
{{Angenommen heute ist der 15.09.2013}} 
would be far more readable. 

Could JBehave support synonyms for Given? 
{{Given = Assume|Suppose}} 
{{Gegeben = Angenommen|Vorausgesetzt}}","feature containing"
"Support synonyms of step-starting keywords It is generally acceptable that you can describe a business case just using Given/When/Then/And suite. 

However when the scenario you need to write is a long one (say 30 or more steps) I have to accept that the story starts sounding a bit to fade (say made up). It works but you would prefer it to sound more natural. 

I think this could be supported if we improve jBehave to allow defining ""And"" synonyms with exactly the same functionality as the actual ""And""? 

So you can say something like this: 

Given our Payments system supports SWIFT messages 
When a FX transaction message arrives 
And the ""from"" currency is USD 
And the ""to"" currency is GBP 
And the exchange rate is 0.71002 
And the transaction date is the next business day 
And the transaction amount is $200.00 
And the payer account no is 1234567890 
.... 
And +30 others ""when"" steps describing the Foreigner Exchange message 
Then..... 

Someone would say (me included) that if I can say ""With' and ""Having"" are synonyms of ""And"" and rewrite the story like below then it would sound more natural. 

Given our Payments system supports SWIFT messages 
When a FX transaction message arrives 
Having the ""from"" currency as USD 
And the ""to"" currency as GBP 
With an exchange rate of 0.71002 
......","feature containing"
"Surefire cannot recognise jbehave-maven-plugin failures since 4.0.0 Using:
maven-surefire-plugin 2.18.1
jbehave-maven-plugin 4.0.1

I have a jbehave story with 2 scenarios.
If the 1st scenario fails and the 2nd succeeds: surefire fails to recognise the failure and reports success.(!!)
If the 2nd scenario fails and the 1st succeeds: surefire correctly reports the failure.

Previously using  jbehave-maven-plugin 3.9.5, surefire recognised a failure in both cases.
I tested jbehave-maven-plugin 4.0.0 which also has this issue.

I've also tried 2.19.1 of the maven-surefire-plugin without success.","non-feature containing"
"Swedish language support Swedish language file attached.","feature containing"
"Swedish language was incorrect Last submitted Swedish language file was incorrect.","feature containing"
"Table examples include Antony and other Fitnesse / Concordion users would like something along these lines:

Given a user Fred Bloggs with username fbloggs and password Pa55word
When fbloggs logs in with password Pa55word
Then the page should say ""Welcome, Fred Bloggs!""

Other examples include:

name | username | password | attempted | message
--------------------------------------------------------------------------------------------------
Jane Brown | jbrown | F*bble | F*bble | Welcome, Jane Brown
Terri Smith | tsmith | W*bble | w*bble | Incorrect username or password
Terri Smith | tsmith | W*bble | W*bble | Welcome, Terri Smith
Fred Bloggs | fbloggs | Pa55word | Password | Incorrect username or password

where the table headings are the same as the parameters in the various steps.
--

Reckon this could be done, either by using paranamer or by catching the parameter names in the steps (which we don't do at the moment). Shouldn't be too hard. Will look at it over the weekend.","feature containing"
"Table parameters should be formatted as styleable HTML tables Allow table parameters to be formatted as HTML tables and styleable as other tables.","feature containing"
"Table properties may override keywords I would like to specify table header and value separators in the table properties. 

Jbehave 3.1.2 allows me to specify the header/value separators for a story and I must use these values in all scenarios for the story. It would be useful to specify a different separator just for a single scenario, like you can do with the trim option. For example, 

{valueSeparator=!,headerSeparator=%} 

The following email thread triggered this feature request. 
http://thread.gmane.org/gmane.comp.java.jbehave.user/724","feature containing"
"Tables in ODT files are not parsed Hi, 
We are using ODT files to write our stories and we are using tables. The tables are not parsed anymore. I made a patch where I moved from odfdom-java to simple-odf which appear to be the successor. 
I also included the binary odt file I used to test the code","non-feature containing"
"Template-based reporters Currently, most reporters are PrintStream-based and configurable via a set of properties. 

Provide template-based implementations that: 

- build up the report context during the execution 
- generate the report using the context at the end of the execution using a configurable template","feature containing"
"TemplateableOutput does not handle properly parametrised scenarios The output scenario context is reset at every execution of a parametrised scenario, leading to the same scenario being repeated.","non-feature containing"
"TemplateableViewGenerator doesn't close storyDurations FileReader The TemplateableViewGenerator creates a FileReader for reading the ""storyDurations.props"" file but fails to close it afterwards.","non-feature containing"
"Test is passed even if scenario is failed Env: OS X 10.10

Steps:

1. Prepare story with 2 scenarios (Each scenario has table with data). In first scenario should be data which will cause to fail a scenario.
2. Run Jbehave test with Junit annotation @Test

Expected result: Test is failed because one of scenarios is failed.
Actual result: Test is passed.


P.S.
If to swap scenarios - test will be failed. Looks like result is taken from last scenario.","non-feature containing"
"Test run with Eclipse but no with maven I want to integrate Jbehave with maven and have a lot of trouble. I attach a sample with an example. The Story pass if I run as Junit test in eclipse, but when I try with maven fail. 

Is a classloader problem. The exception is: 
org.springframework.beans.factory.BeanDefinitionStoreException: IOException pars 
ing XML document from class path resource [applicationContext.xml]; nested excep 
tion is java.io.FileNotFoundException: class path resource [applicationContext.x 
ml] cannot be opened because it does not exist 

But to fix this I must pass ALL dependencies to the plugin. 


I hope there is a solution to this. Thanks.","non-feature containing"
"Test run with Eclipse but no with maven I want to integrate Jbehave with maven and have a lot of troubles. I attach a sample with an example. The Story pass if I run as Junit test in eclipse, but when I try with maven fail. 

Is a classloader problem. The exception is: 
org.springframework.beans.factory.BeanDefinitionStoreException: IOException pars 
ing XML document from class path resource [applicationContext.xml]; nested excep 
tion is java.io.FileNotFoundException: class path resource [applicationContext.x 
ml] cannot be opened because it does not exist 

But to fix this I must pass ALL dependencies to the plugin. 


I hope there is a solution to this. Thanks.","non-feature containing"
"Tests do not fail when Spring context fails to load When the creation of the Spring context fails, because resources cannot be found, beans cannot be created or some other configuration issue, the tests is not run but the result does not reflect this properly. Therefore Maven and Jenkins think tests are successful which gives a false positive. When nobody looks at the logs, nobody will see there is actually an error. 

Cloned JBehave repo and fixed issue in: https://github.com/diversit/jbehave-core/commit/275f609a8faf2dfb2ee4feaa1be0351accbd9992","non-feature containing"
"The method StoryManager.waitUntilAllDoneOrFailed(BatchFailures) can cancel un-started stories I run several stories in parallel using the default multi-threaded Embedder.executorService and configure it with EmbedderControls.threads > 1 
Sometimes the JBEHAVE ends and no scenario (but before- and after- scenario) of my stories was even started. It is not repeatable, sometims it goes good. 
I founded out, that the method StoryManager.waitUntilAllDoneOrFailed fails, if there are ONLY stories, which are already SUBMITTED, but not yet really STARTED. The method StoryManager.waitUntilAllDoneOrFailed doesn't consider them while is defining, whether all stories are done or not. However waitUntilAllDoneOrFailed cancells them later. 

The success or failure of stories depend therefore on the race condition of starting the stories and waitUntilAllDoneOrFailed.","non-feature containing"
"The option to leave a browser window open at the end of a run. For PerStoryWebDriverSteps (and others), it would be nice to obey and option (command line or other) to NOT close the browser frame on failure. 

Developers like to run single stories at a time, and want to be able to debug when a failure happens. A failing screen-shot is one thing, but having the actual browser open is better still.","feature containing"
"The sourceDirectory property of the jbehave-maven-plugin is read-only in maven 2.2.1 Modifying the sourceDirectory and testSourceDirectory properties works as expected under Maven 3 but a error occurs under Maven 2.2.1 ""ERROR: Cannot override read-only parameter: sourceDirectory in goal: jbehave:run-stories-as-paths"" 

Upgrading to Maven 3 is currently not a option as this was discovered by a CI build running in Hudson and it does not support Maven 3 as a project type.","non-feature containing"
"There are are unpredictable amount of stories executed For the same story finder, with the same include property, for large amount of story files JBehave test runner execute different amount of stories. 
For the large amount of stories (we have 800 now) test runner could run 800, 600, 400 and other unpredictable amount of tests.
Test runner is configured to be single threaded. Stories are loaded from classpath.

Consider original and fixed StoryManager class which executes all stories returned by story finder.","non-feature containing"
"There is no @And annotation The grammer definition details the availability of a @And notation. However, no annotation exists. 
This may seem trivial, but in real terms it is fundamental blocker to writing clear scenarios.","non-feature containing"
"Throw exception if ParameterConverters cannot convert to the desired type. Currently if ParameterConverters can't convert to the desired type, it just returns the parameter as a string. This then falls over in some unrelated code later in the process when it can't call the step because of mismatching parameter types. To aid in debugging this, it should throw an Exception detailing the type that it can't convert to, so it can be caught early.","feature containing"
"Throwing a pending exception in a story component fails the story. We should be able to throw pending exceptions from new story components that haven't been defined yet.","non-feature containing"
"Title before ""Scenario"" ends up as package name When I run a story that has a comment as the first line of the text, the jbehave/xunit display in Jenkins takes the comment as test name and misses the story file name. 

{{!-- comment 

Scenario: User visits home page 

!-- a very simple test 

Given user is on Home page 
Then Home page is shown 
}} 

the resulting path is then (root)/!-- comment/User visits home page","non-feature containing"
"Too many columns in an example table give IndexOutOfBoundsException When writing an example table that contains a vertical bar in a value, I got an IndexOutOfBoundsException 
This somehow hangs the execution of the scenario, the log only says ""BeforeStories"" and never gets to start the story, but the Firefox from Selenium stays open. 

It would be better if a proper error message or warning is printed and the story is marked as failed or not executed. 

A preliminary test to show the error is this, I'll look a bit further into the problem maybe tomorrow. 

{noformat} 
@Test 
public void shouldCatchErrorWrongNumberOfColumns() { 
String tableWithWrongColumn = ""|a|b|\n|a|b|c|\n""; 
ExamplesTable table = new ExamplesTable(tableWithWrongColumn); 
} 
{noformat}","non-feature containing"
"Total exclusion of excluded stories from reports Consider - mvn clean install -Dmeta.filter=""groovy: color == 'xxx'"" 

================================== 
Some of the output will be : 
================================== 
(BeforeStories) 

[INFO] Running story etsy_browse.story 
Browse Etsy.com 
(etsy_browse.story) 
Meta: 
@category browsing 
@color red 

[INFO] Meta[properties={narrative=Narrative[inOrderTo=show the browsing cart functionality,asA=user,iWantTo=browse in a gallery], color=red, description=Browse Etsy.com, category=browsing, path=etsy_browse.story}] excluded by filter 'groovy: color == 'xxx'' 
[INFO] Meta[properties={givenStories=, narrative=Narrative[inOrderTo=show the browsing cart functionality,asA=user,iWantTo=browse in a gallery], color=red, examplesTable=, description=Browse Etsy.com, category=browsing, path=etsy_browse.story, title=Browsing around the site for items}] excluded by filter 'groovy: color == 'xxx'' 
groovy: color == 'xxx' 

[INFO] Running story etsy_cart.story 
ShoppingCart functionality for Etsy.com 
(etsy_cart.story) 
Meta: 
@category basic 
@color blue 

[INFO] Meta[properties={narrative=Narrative[inOrderTo=show the basic cart functionality,asA=user,iWantTo=add and remove items from the cart], color=blue, description=ShoppingCart functionality for Etsy.com, category=basic, path=etsy_cart.story}] excluded by filter 'groovy: color == 'xxx'' 
[INFO] Meta[properties={givenStories=, narrative=Narrative[inOrderTo=show the basic cart functionality,asA=user,iWantTo=add and remove items from the cart], color=blue, examplesTable=, description=ShoppingCart functionality for Etsy.com, category=basic, path=etsy_cart.story, title=Item can be added to cart}] excluded by filter 'groovy: color == 'xxx'' 
[INFO] Meta[properties={givenStories=, narrative=Narrative[inOrderTo=show the basic cart functionality,asA=user,iWantTo=add and remove items from the cart], color=blue, examplesTable=, description=ShoppingCart functionality for Etsy.com, category=basic, path=etsy_cart.story, title=Item can be removed from cart}] excluded by filter 'groovy: color == 'xxx'' 
groovy: color == 'xxx' 

[INFO] Running story etsy_pending.story 
Pending Etsy.com stories 
(etsy_pending.story) 
Meta: 
@category development 

[INFO] Meta[properties={narrative=Narrative[inOrderTo=allow stories to written before they're implemented,asA=user,iWantTo=allow pending stories], description=Pending Etsy.com stories, category=development, path=etsy_pending.story}] excluded by filter 'groovy: color == 'xxx'' 
[INFO] Meta[properties={givenStories=, narrative=Narrative[inOrderTo=allow stories to written before they're implemented,asA=user,iWantTo=allow pending stories], examplesTable=, description=Pending Etsy.com stories, category=development, path=etsy_pending.story, title=Functionality not yet implemented}] excluded by filter 'groovy: color == 'xxx'' 
groovy: color == 'xxx' 

[INFO] Running story etsy_search.story 
Search Etsy.com by sub category 
(etsy_search.story) 
Meta: 
@category advanced 
@color red 

[INFO] Meta[properties={narrative=Narrative[inOrderTo=show the advance cart functionality,asA=user,iWantTo=search for an item in a sub category], color=red, description=Search Etsy.com by sub category, category=advanced, path=etsy_search.story}] excluded by filter 'groovy: color == 'xxx'' 
[INFO] Meta[properties={givenStories=, narrative=Narrative[inOrderTo=show the advance cart functionality,asA=user,iWantTo=search for an item in a sub category], color=red, examplesTable=, description=Search Etsy.com by sub category, category=advanced, path=etsy_search.story, title=Advanced Search for a hat}] excluded by filter 'groovy: color == 'xxx'' 
[INFO] Meta[properties={givenStories=, narrative=Narrative[inOrderTo=show the advance cart functionality,asA=user,iWantTo=search for an item in a sub category], color=red, examplesTable=, description=Search Etsy.com by sub category, category=advanced, path=etsy_search.story, title=Advanced Search for a ring}] excluded by filter 'groovy: color == 'xxx'' 
groovy: color == 'xxx' 


(AfterStories) 

========================================= 
It would be better if the output were: 
========================================= 

(BeforeStories) 

4 tests excluded because of filter. 

(AfterStories) 

========== 

Not just for console output but it would be much better if the vestige XML, HTML, .stats files were gone too.","feature containing"
"Total report didn't count correcty for scenario with given scenario Problem in this place:
org.jbehave.core.reporters.PostStoryStatisticsCollector:126
{code}
    	boolean write = false;
        if (givenStory) {
            this.givenStories--;
           * if ( has(""stepsFailed"") ){*
            	add(""scenariosFailed"");
            	write = true;
            }
        }
{code}
*Steps to reproduce:*
Story with 2 scenarios, both GivenStory and first scenario failed.
When second scenario's GivenStory finished, it will find ""scenariosFailed"" in ""data"" object (from previous scenario) and close output file with stats.
*Actual result:*
All next results wont write in story's file and Total report will be incorrect (but html file show real log, because execution will be continue)","non-feature containing"
"Translating keywords in the Eclipse plugin Depending on the JBehave version someone uses, the keywords are different, especially if another language is used. 

For instance it used to be ""GegebeneStories"" in JBehave 3.7.4, but now it is ""VorgegebeneStories"". 

The JBehave Eclipse plugin uses JBehave 3.7.4 nationalization resource files. But you cannot assume that the user is using that JBehave version. 

A solution would be if the user can translate the keywords himself in the Eclipse preferences according to the JBehave version he uses. 

For instance I could change the value from ""GegebeneStories"" to ""VorgegebeneStories"" in the Eclipse preferences since I use JBehave 3.8.","feature containing"
"Two Minute Intro for JBehave needs some work The Two Minute intro is out of date and quite poor. Needs a good update before release","feature containing"
"Typo in jbehave-spring-archetype causes malformed pom.xml </jbehave.sitee.version> -> </jbehave.site.version>","non-feature containing"
"URL-based StoryLoader As a story developer, I want to load stories via URLs, not necessarily in the classpath. 

This can be used, e.g. to retrieve stories from wikis.","feature containing"
"Unable to cast value from ExamplesTable to primitive types {code}
boolean replaceNamedParameters = true;
int trades = table.getRowAsParameters(0, replaceNamedParameters).valueAs(""trades"", int.class);
{code}
fails with exception:
{code}
Caused by: java.lang.ClassCastException: Cannot cast java.lang.Integer to int
	at java.lang.Class.cast(Class.java:3369) ~[?:1.8.0_45]
	at org.jbehave.core.steps.ConvertedParameters.convert(ConvertedParameters.java:48) ~[classes/:?]
	at org.jbehave.core.steps.ConvertedParameters.valueAs(ConvertedParameters.java:37) ~[classes/:?]
...
{code}","non-feature containing"
"Unable to locate stories running from CLI an executable jar built from Eclipse We are trying to execute the JBehave test project from command line 
after exporting it as executable jar from Eclipse. We are facing same 
issues as JBEHAVE-729. 

Just to mention, it works fine when we run the same from Eclipse directly, having issues while running from command line as executable jar.","non-feature containing"
"Unable to read excel from classpath using jxl I am unable to read excel using jxl from classpath however the same code is working fine with standalone code. 
Excel is placed in src/main/resources/test.xls 

Workbook workbook = null; InputStream stream =this.getClass().getClassLoader().getResourceAsStream(""test.xls""); workbook = Workbook.getWorkbook(stream); Sheet sheet = workbook.getSheet(0); Cell a1 = sheet.getCell(0,0); 


However if I use the file system path as 
workbook = Workbook.getWorkbook(new File(""src/main/resources/test.xls "")); 
I am able to read in jbehave. 

Is this an issue with Jbehave since standalone code works in both the ways.","non-feature containing"
"Unable to resolve dependencies using ANT When following [1] to resolve dependencies using ANT, the following error occurs: 

copy-dependencies: 
[artifact:pom] Downloading: org/jbehave/jbehave/3.9/jbehave-3.9.pom from reposit 
ory atlassian at http://maven.atlassian.com/public 
[artifact:pom] Transferring 0K from atlassian 
[artifact:pom] [WARNING] *** CHECKSUM FAILED - Checksum failed on download: loca 
l = '81ffbd1712afe8cdf138b570c0fc9934742c33c1'; remote = '<html> 
[artifact:pom] <head><title>301' - RETRYING 
[artifact:pom] Downloading: org/jbehave/jbehave/3.9/jbehave-3.9.pom from reposit 
ory atlassian at http://maven.atlassian.com/public 
[artifact:pom] Transferring 0K from atlassian 
[artifact:pom] [WARNING] *** CHECKSUM FAILED - Checksum failed on download: loca 
l = '81ffbd1712afe8cdf138b570c0fc9934742c33c1'; remote = '<html> 
[artifact:pom] <head><title>301' - IGNORING 
[artifact:pom] An error has occurred while processing the Maven artifact tasks. 
[artifact:pom] Diagnosis: 
[artifact:pom] 
[artifact:pom] Unable to initialize POM pom.xml: Cannot find parent: org.jbehave 
:jbehave for project: null:jbehave-distribution:pom:null for project null:jbehav 
e-distribution:pom:null 
[artifact:pom] Not a v4.0.0 POM. for project org.jbehave:jbehave at C:\<PATH>\.m2\repository\org\jbehave\jbehave\3.9\jbehave-3.9.pom 
[artifact:pom] 

Having a look at the corresponding POM file discovers: 
<html> 
<head><title>301 Moved Permanently</title></head> 
<body bgcolor=""white""> 
<center><h1>301 Moved Permanently</h1></center> 
<hr><center>nginx</center> 
</body> 
</html> 

The reason for this is, that the distributed settings.xml refers to an outdated URL at the Atlassian repo! 

When changing the URLs in the settings.xml 
from: http://maven.atlassian.com/public 
to: https://maven.atlassian.com/content/groups/public/ 
...the issue is resolved. 

This issue has been tested and can be reproduced for jbehave-distribution 3.9, 3.9.3 and 4.0-beta-9. 

[1] http://jbehave.org/reference/stable/dependencies.html","non-feature containing"
"Unable to retrieve JBehave-core 3.5.3 from the codehaus maven repository We use Nexus as a repository manager and we are unable to retrieve the JBehave-core 3.5.3 core from codehaus, Nexus returns ""The server has not found anything matching the request URI"" 

I have also tried retrieving other JBehave related artefacts, such as javaDoc and get the same error.","non-feature containing"
"Unable to run jbehave-tutorial. NoClassDefFoundError (FluentWebDriver) occurs NoClassDefFoundError when running etsy-web-runner from the jbehave-tutorial package. See attached. 

Repro Steps 
# jbehave-tutorial> git clone https://github.com/jbehave/jbehave-tutorial.git . 
# jbehave-tutorial> mvn clean install -s settings.xml -Pcodehaus,web-runner 
# jbehave-tutorial\etsy-web-runner> mvn jetty:run-war -s ../settings.xml -Pcodehaus,web-runner 
# visit http://localhost:8080/etsy-stories-runner/","non-feature containing"
"Unable to use parametrised steps and parametrised ExamplesTable within one scenario Current example in documentation (http://jbehave.org/reference/stable/tabular-parameters.html):
{code}
Given that Larry has done <trades> trades
Then the traders activity is: 
|name|trades|
|Larry|<trades>|
|Moe|1000|
|Curly|2000|
 
Examples:
|<trades>|
|3000|
|5000|
{code}

Sample implementation:
{code}
@Given(""that Larry has done $tr trades"")
public void theTraderActivityIs(@Named(""tr"") int tr)
{
    System.out.println(tr);
}

@Then(""the traders activity is: $table"")
public void theTraderActivityIs(ExamplesTable table)
{
    boolean replaceNamedParameters = true;
    int trades = table.getRowAsParameters(0, replaceNamedParameters).valueAs(""trades"", int.class);
    System.out.println(trades);
}
{code}

It fails at the first step with exception:
{code}
Caused by: java.text.ParseException: Unparseable number: ""<trades>""
	at java.text.NumberFormat.parse(NumberFormat.java:385) ~[?:1.8.0_45]
	at org.jbehave.core.steps.ParameterConverters$NumberConverter.convertValue(ParameterConverters.java:245) ~[classes/:?]
...
{code}

----

Changing scenario to 
{code}
Given that Larry has done <trades> trades
Then the traders activity is: 
|name|trades|
|Larry|<trades>|
|Moe|1000|
|Curly|2000|
 
Examples:
|trades|
|3000|
|5000|
{code}

It fails at the second step with exception:
{code}
java.text.ParseException: Unparseable number: ""<3000>""
	at java.text.NumberFormat.parse(NumberFormat.java:385) ~[?:1.8.0_45]
	at org.jbehave.core.steps.ParameterConverters$NumberConverter.convertValue(ParameterConverters.java:245) ~[classes/:?]
...
{code}

----

Changing scenario to
{code}
Given that Larry has done <trades> trades
Then the traders activity is: 
|name|trades|
|Larry|trades|
|Moe|1000|
|Curly|2000|
 
Examples:
|trades|
|3000|
|5000|
{code}

It fails with exception:
{code}
Caused by: java.lang.ClassCastException: Cannot cast java.lang.Integer to int
	at java.lang.Class.cast(Class.java:3369) ~[?:1.8.0_45]
	at org.jbehave.core.steps.ConvertedParameters.convert(ConvertedParameters.java:48) ~[classes/:?]
...
{code}
But it's an another bug.

----

So my proposal.
- To make syntax consistent use the following scenario format, for example:
{code}
Given that Larry has done <trades> trades
Then the traders activity is: 
|name|trades|
|Larry|<trades>|
|Moe|1000|
|Curly|2000|
 
Examples:
|trades|
|3000|
|5000|
{code}
- Fix the exception thrown in this scenario","non-feature containing"
"Unarchived files are empty Regression introduced when moving to commons-compress. The test only verified the existence of the file, not its content as well, as it should.","non-feature containing"
"UnderscoredToCapitalized incorrectly resolves names with the extension in the name Correct behavior: 
Given story files such as {{/com/sample/story/test_story.story}} which is translated to the report {{com.sample.story.test_story.story}}.
When the UnderscoredToCapitalized resolver attempts to resolve the name
Then the result is {{Test Story}}.

Current behavior:
{{/com/sample/story/test_story.story}} is resolved to {{Sample}}.","non-feature containing"
"Underscores in step parameters unsupported since JBehave 3.9 Starting with JBehave 3.9 underscores are no longer supported in step parameters. 

Eg. the following step annotation used to work with JBehave 3.8 and before, but results in a pending step when using 3.9 and 3.9.1: 
@Given(""a step containing an underscore in a parameter $test_param"") 

This must be related to JBEHAVE-957 and JBEHAVE-974","non-feature containing"
"Undoable steps Sometimes when we set up a context or cause an event to happen, it's nice to clean up any changes so that we don't affect other tests running.

No idea how to make the undoable work, but doesn't stop me wanting it!","feature containing"
"Unit-test runners should decorate Exceptions a bit more clearly Somewhere deep down in the runScenario logic, you could benefit from a try/catch(Throwable)/wrap-rethrow

The wrapping exception could add textual information on the step that is failing. Catch throwable because you're not just catching AssertionErrors, you're catching Selenium timeouts.","feature containing"
"Update JBehave Needle to support latest version of Needle4J 2.3 Needle Mock Dependency Framework reinvented itself and changed to a company-independent Needle4J framework. Along with package renaming, the project became a top level maven-central project. 

This change should be adopted in the jbehave-needle in order to support latest needle version (2.3).","feature containing"
"Update Maven goals to be compatible with Maven 3 Maven 3 requires explicit annotation @requiresDependencyResolution to resolve dependencies in AbstractEmbedderMojo.","feature containing"
"Update fluent-selenium to most recent version 1.10 and refactor FluentWebDriverPage to work with this versions' FluentWebDriver Users cannot use any versions of fluent-selenium that are greater than 1.7.1 who make use of the class FluentWebDriverPage in package org.jbehave.web.selenium. 

In version 1.8 of fluent-selenium they consolidated the implementation and interface of FluentWebDriver. 

The next release of jBehave Web Selenium should update fluent-selenium to most recent version 1.10 and refactor FluentWebDriverPage to work with this versions' FluentWebDriver","feature containing"
"Update toString() to show the system based values During the tests execution, when calling EmbedderMonitor.usingControls(EmbedderControls embedderControls) using PropertyBasedEmbedderControls the users must view the values in use, based on system values, rather than the object values. 

Please see the pull request at https://github.com/jbehave/jbehave-core/pull/68","feature containing"
"Upgrade Selenium version I am using Jbehave web 3.5.5 with Selenium 3.26.0 which in turn support till Mozilla v16. 
Could you please upgrade Jbehave web to support latest selenium webdriver and Mozilla versions.","feature containing"
"Upgrade Story Navigator to new XRef Storynavigator no longer generated step documentation in 4.0 ? 

Alos, the xref.getStepMonitor() seems to be deprecated ? Has anything changed ?","feature containing"
"Upgrade dependencies to support JDK 8 Upgrade any dependencies to support JDK 8.","feature containing"
"Upgrade to Apache Commons Collections v4.0 from v3.2.1 Java 5 End of Life is Oct 2009 (http://www.oracle.com/technetwork/java/eol-135779.html). I propose to start JBehave migration to Java 6.To make this process smooth I suggest to update JBehave dependencies to the latest available ones and compatible with Java 5. 
Now JBehave uses 
{code:xml}
<groupId>commons-collections</groupId>
<artifactId>commons-collections</artifactId>
<version>3.2.1</version>
{code}
I propose to upgrade it to [Apache Commons Collections 4.0|https://commons.apache.org/proper/commons-collections/release_4_0.html] ([Version 4.1|https://commons.apache.org/proper/commons-collections/release_4_1.html] is also available, but it requires Java 6)","feature containing"
"Upgrade to Apache Commons Lang v3.1 from v2.6 Java 5 End of Life is Oct 2009 (http://www.oracle.com/technetwork/java/eol-135779.html). I propose to start JBehave migration to Java 6.To make this process smooth I suggest to update JBehave dependencies to the latest available ones and compatible with Java 5. 
Now JBehave uses
{code:xml}
<groupId>commons-lang</groupId>
<artifactId>commons-lang</artifactId>
<version>2.6</version>
{code}
I propose to upgrade it to [Apache Commons Lang 3.1|https://commons.apache.org/proper/commons-lang/release-notes/RELEASE-NOTES-3.1.txt] ( The next [version 3.2|https://commons.apache.org/proper/commons-lang/release-history.html] requires Java 6)","feature containing"
"Upgrade to use SyntaxHighlighter 3 for reports Amongst other things it does not use Flash and IE would stop winging.","feature containing"
"Usage web page for JMock extension There should be a quickstart page and an example with UsingJMock","feature containing"
"Use ParametisedStep in StepMonitors When using a ParameterisedStep it makes sense to pass to the stepMonitor the value of the ParamterisedStep and not stepAsString. This enables the actual substituted values visible when monitoring running tests. 

For example, instead of the LocalFrameContextView showing: 

""Given the username is <name>"" 

It would be better if it showed: 

""Given the username is (bob)"" 

It is clear from the intent that this is the value being used and that it has been replaced during runtime. 

A patch file for StepCreator.java will be attached to this JIRA shortly. 

-=david=-","feature containing"
"Use commons-compress for ZipFileArchiver http://commons.apache.org/compress/","feature containing"
"Use local Nexus for deploying releases and snapshots Releases and snapshots should use local Nexus instance.

This will allow to work around https://issues.jenkins-ci.org/browse/JENKINS-13637","feature containing"
"Use more flexible ""Consumer extends"" for list of step instances. In my project i want to pass a List of InjectableStep (which is a marker interface). 
But i cannot pass my List<? super InjectableStep> or even List to the constructor of InstanceStepsFactory. It always calls the Ctor with the Object... parameter till I use the workaround and cast my List to List. I don't think that someone will provide a step implementationclass which is derived from java.util.List so the downside of a cast needed in this rare situation is very small. 

See http://stackoverflow.com/a/252860/1325574 for further details of the ""Producer Extends Consumer Super"" idea. 

See also https://github.com/jbehave/jbehave-core/pull/47","feature containing"
"Use more than one event in a scenario You know how a Context lets you have several Givens? And an Outcome lets you have several Expectations?

Wouldn't it be great if you could have several Events, too? So I could do:

Given a Tetris game is started with a 5 x 10 board
And the shape factory produces a T shape, then an S shape
When the shape is rotated left
And the shape is rotated left
And the shape is moved right
And the shape is dropped (producing a new shape)
And the shape is moved left
And the shape is dropped
Then the lowest line should collapse
And the score should be 18.

So I can reuse all the movement events in every test, eg: for checking when games finish, checking multiple simultaneous line collapses work, etc.","feature containing"
"Use of PageFactory (WebDriver idiom) can access LazyWebDriver instance, but required extended interfaces like JavascriptExecutor makeNonLazy() should be protected, so it can be called by subclasses.","non-feature containing"
"Use of String.toUpper/LowerCase() should be locale-aware In Turkish, there are two letters in order to symbolize English's I. They are I and &#304; (I with dot). Lower case of ""I"" is ""&#305;"" (i without dot) and lower case of ""&#304;"" (I with dot) is ""i"". Users from different nations may encounter with this kind of problems, which come to surface when using String.toUpper/LowerCase(). The solution is to use String.toUpper/LowerCase(Locale), while defaulting to Locale.getDefault() if none specified. 

String.toLowerCase() is currently used in: 

- StoryReporterBuilder.formatNames(boolean): should use the locale specified in the LocalizedKeywords to retrieve the name lower case. If not specified, it defaults to Locale.getDefault(). 
- UnderscoredCamelCaseResolver: should provide a constructor to inject a non-default Locale 

String.toUpperCase() is currently used in: 

- PropertyWebDriverProvider: should provide a protected method usingLocale() which can be overridden use the desired Locale.","feature containing"
"Use of constant or expression in step priority results in missing step candidates The code for parsing the priority attribute of the JBehave annotations assumes that the value is an integer literal. When it encounters a value that is a constant or expression, it stops parsing the file and any steps that appear after the problematic one are missed. 

I don't think there's an easy way to evaluate the priority in these cases without involving the java compiler, but an improvement would be to use the default priority (or none at all) and at least parse the rest of the steps in the file.","non-feature containing"
"Using GivenScenarios causes failed tests to be forgotten We have multiple related scenarios within the same JBehave script. This seems to be supported functionality but a major issue came to light earlier: using GivenScenarios at the start of a later scenario will cause any failed scenarios thus far to be forgotten. For example: 

"""" 
Story: Test showing that using a given scenario skews the overall result 

Scenario: Fail 

GivenScenarios: com/example/sandpit/jbehave/noop 
Given I do nothing 
Then I fail 

Scenario: Succeed 

GivenScenarios: com/example/sandpit/jbehave/noop 
Given I do nothing 
Then I pass 
"""" 

The JUnit result for running a scenario with the above script is a pass, even though the ""I fail"" step threw an exception. If you remove the GivenScenarios line from the Succeed case then the JUnit result is a fail. 

Attached is an Eclipse project that demonstrates this. This is a major issue for us: we run the JBehave tests from our build farm in an automated process. This bug would give us the green light for the whole build despite tests failing.","non-feature containing"
"UsingMatchers.nothing() This should ensure that you can explicitly stub a method with no arguments, when there exists a method of the same name which takes arguments.","feature containing"
"UsingSteps: ""packages"" overrides ""instances"" 
{code:java}
 */
@RunWith(AnnotatedPathRunner.class)
@UsingPaths(searchIn = ""src/test/resources"", excludes = {""**/*.story.exclude""}, includes = ""**/*.story"")
@UsingSteps(
        packages = {""com.example.candidatesteps""},
        instances = {com.example.JBehaveHooks.class}
)
@UsingEmbedder(storyTimeouts = ""900"", generateViewAfterStories = false)
@Configure(parameterConverters = {BooleanParameterConverter.class})
public class JBehaveRunner {
{code}

With this in place, before and after hooks defined in JBehaveHooks will not be run.
The issue lies in AnnotationBuilder#buildStepsFactory:

{code:java}

			List<Class<Object>> stepsClasses = finder.getAnnotatedClasses(
					UsingSteps.class, Object.class, ""instances"");
			if (!stepsClasses.isEmpty()) {
				for (Class<Object> stepsClass : stepsClasses) {
					stepsInstances.add(instanceOf(Object.class, stepsClass));
				}
				factory = new InstanceStepsFactory(configuration,
						stepsInstances);
			}
			List<String> packages = finder.getAnnotatedValues(UsingSteps.class,
					String.class, ""packages"");
			if (!packages.isEmpty()) {
				String matchingNames = finder.getAnnotatedValue(UsingSteps.class,
						String.class, ""matchingNames"");
				String notMatchingNames = finder.getAnnotatedValue(UsingSteps.class,
						String.class, ""notMatchingNames"");
				factory = new ScanningStepsFactory(configuration,
						packages.toArray(new String[packages.size()]))
						.matchingNames(matchingNames).notMatchingNames(notMatchingNames);
			}
{code}

As you can see, the var factory is overwritten, if packages is defined in the annotation UsingSteps.","non-feature containing"
"Velocity code generator for story A velocity-based implementation of CodeGenerator which generates events/givens/outcomes classes for a given story.","feature containing"
"VisitingScenarioInvoker does not reset state between scenarios VisitingScenarioInvoker has a ""beforeEvent"" flag which is set to true after a scenario's event is called.

Unfortunately it never gets set to false again, so the setup in the outcome of the second scenario is never called.

I'd like refactor this piece of code so that the invoker only ever sets up the outcome. There can then be a verifier which does the outcome checking, and no need for the ""beforeEvent"" flag to exist. This will also mean that the ScenarioUsingMiniMock no longer needs to pass the visitor to ""context, outcome, event, outcome"" but can simply do ""context, outcome, event"" for any visitor irrespective of that visitor's implementation.

The environment will also need resetting / recreating between scenarios, but that's pretty simple.","non-feature containing"
"Visitor is not an appropriate pattern to use, and should be removed. Most of the places where it's being used it can be replaced with a Narrator, using narrateTo instead of accept.","feature containing"
"We should be able to mock classes. Currently JBehave throws an error if an attempt to mock a class, rather than an interface, is made.

The ability to mock classes means that users don't have to create interfaces artificially. In many instances, where a default implementation of a class exists (eg: repositories, file handlers, etc.) there will only ever be one implementation outside of the behaviours.","feature containing"
"Web Runner results leak between invocations Take a story that passes: 

{noformat} 
Scenario: 
Given a threshold of 10.0 
When the stock is traded at 5.0 
Then the alert status should be OFF 
When the stock is traded at 11.0 
Then the alert status should be ON 
{noformat} 

Confirm it passes. Change it so that it does not pass. In this case, change 5.0 to 888. The re-run. 

Note that it fails as expected. 

Change it back to the 'passing' grammar again, and re-run. 

Note that it apparently fails. Any repeated clicking of the 'run' button shows the failed results again and again :-(","non-feature containing"
"WebDriverProvider#takeScreenshot() should return a boolean to say if the screenshot has been taken As not all WebDrivers support taking screenshots (ie instances of TakesScreenshot) it's useful for the takeScreenshot() method to return a boolean value to inform when the underlying WebDriver supports screenshots.","feature containing"
"WebRunner FindSteps should allow auto-completion of step patterns As noted on the users' list, it'd useful for the WebRunner to allow auto-completion of step pattern in the FindSteps page. 

Add an 'Explore' section where a user can start typing any part of a step pattern and get shown a list of patterns that are annotated in the candidate steps classes. 

Once a pattern has been chosen, the method (and class) can also be shown. 

Note that exploring the step pattern is different from matching the textual step. A given textual step can be matched by multiple step pattern.","feature containing"
"WebRunner should be responsible for all running functionality (sync and async) WebRunner should use the StoryManager (created by the Embedder) all the running concerns. 

In should allow both synchronous running (via Run Story, which waits for output) and asynchronous running (via Submit Story, which does not wait and delegates outputs to View Story). 

WebQueue functionality of asynchronous running is now redundant. WebQueue module should be removed.","feature containing"
"WebRunner should manage the run context of multiple stories A web interface to: 

- submit in background multiple stories 
- check their status 
- view their results","feature containing"
"Website generation NPE website:
[exec] ./content/architecture.textile -> ./output/architecture.textile
[exec] ./content/development.textile -> ./output/development.textile
[exec] ./content/docs.textile -> ./output/docs.textile
[exec] ./content/download.textile -> ./output/download.textile
[exec] ./content/eclipse.png -> ./output/eclipse.png
[exec] ./content/eclipse_feature.png -> ./output/eclipse_feature.png
[exec] ./content/eclipse_install.png -> ./output/eclipse_install.png
[exec] ./content/getting-started.textile -> ./output/getting-started.textile
[exec] ./content/how-to-contribute.textile -> ./output/how-to-contribute.textile
[exec] ./content/how-to-use-with-jmock.textile -> ./output/how-to-use-with-jmock.textile
[exec] ./content/idea.png -> ./output/idea.png
[exec] ./content/idea_plugins.png -> ./output/idea_plugins.png
[exec] ./content/index.textile -> ./output/index.textile
[exec] ./content/jbehave.css -> ./output/jbehave.css
[exec] ./content/license.textile -> ./output/license.textile
[exec] ./content/logo.gif -> ./output/logo.gif
[exec] ./content/mailing-lists.textile -> ./output/mailing-lists.textile
[exec] ./content/minimock.textile -> ./output/minimock.textile
[exec] skinner.rb:122:in `add_class': undefined method `attributes' for nil:NilClass (NoMethodError)
[exec] from skinner.rb:113:in `skin_content_file'
[exec] from skinner.rb:87:in `skin_content'
[exec] from skinner.rb:82:in `each'
[exec] from skinner.rb:82:in `skin_content'
[exec] from skinner.rb:136:in `build_site'
[exec] from skinner.rb:141
[exec] Result: 1
[copy] Copying 18 files to /Users/cv/src/jbehave/delete_me/1.0-SNAPSHOT/website","non-feature containing"
"Website generator doesn't work with new buildmaster (0.9.x) sitespec.rb was using the old api for buildmaster, which didn't use cotta when passing files around. The attached patch fixes it, but you need to upgrade your buildmaster version (using RubyGems).","non-feature containing"
"Weird behaviour when stories are cancelled I discovered that sometimes JBehave does not break the build in our CI system when some of the stories hang (and are cancelled because of the timeout). While trying to reproduce the issue, I saw many many different outcomes of the build including a build success when stories timed out (which makes them failed to me). 
Unfortunately not for all the cases I have a reproducible case but two of the issues I can reproduce. 

Sources for the test project: https://github.com/dimas/jbehave-cancellation-issue 

Issues it can demonstrate: 
h3. Behave aborts the whole story so scenarios past the cancelled one are not even visible in the report 
This happens even despite doFailOnStoryTimeout(false) and doIgnoreFailureInStories(true) which to me should guarantee all scenarios to be processed before failing. 
If in the Test class constructor you set .useStoryTimeoutInSecs(1)), then it will kill the very first scenario and there is no signs of the second one to be present. The target/jbehave/view/reports.html report will look like 

Scenarios: Total=1, Successful=0, Pending=0, Failed=1 

The target/jbehave/view/reports.html shows just 

{code} 
Scenario: slow and failing test 
Given a default state 
When I do something slow (FAILED) 
java.lang.InterruptedException: sleep interrupted 
STORY CANCELLED (DURATION 2 s) 
{code} 

No second scenario 

h3. JBehave may report cancelled scenarios as successful. 

Change .useStoryTimeoutInSecs to 2. The target/jbehave/view/reports.html report will look like 

Scenarios: Total=2, Successful=1, Pending=1, Failed=1 

Which seem to be just wrong given that target/jbehave/view/test.test.html shows: 

{code} 
Scenario: slow and failing test 
Given a default state 
When I do something slow 
Then nothing should happen (FAILED) 
java.lang.InterruptedException: sleep interrupted 

Scenario: scenario description 
STORY CANCELLED (DURATION 3 s) 
{code} 

So I see on failed scenario and one cancelled but which of them JBehave thinks is successful? 

Overall, it feels like the outcome hugely depends on what exact moment time out has expired. Which should not be like that. 

I would expect as a correct behaviour that cancelled scenario should be always treated as failed (definitely not successful) and all the scenarios after it should be processed but not invoked given that story timeout has expired but at least reported in full. Maybe all the steps should be listed as skipped/pending/something else. But they all should be present. 
Or otherwise if first scenario in each story files, lots of scenarios just disappear from the report without any traces...","non-feature containing"
"When @Named parameter matches name in Example table, it might be injected for steps that do not reference it When a step with @Named parameters is used in a scenario that uses an Example table for SOME of its steps, but for this specific step is given some explicit value, then IF the parameter name is not fully surrounded with whitespace AND it matches a name from the Examples table, then the given value is ignored. Instead, the value from the Examples table is injected. 

If the parameter name is unrelated to anything in the Examples table, then all is fine, even when the parameter is not fully surrounded with whitespace. 

(This is slightly related to http://jira.codehaus.org/browse/JBEHAVE-646) 

For example, all fine: 

{code} 
@Given(""I have <a> and <b>"") 
public void givenAAndB(@Named(""a"") String myA, @Named(""b"") String myB) { 
assertThat(myA).isEqualTo(""this""); 
assertThat(myB).isEqualTo(""that""); 
} 

@When(""I do <a>"") 
public void whenIDoA(@Named(""a"") String myA) { 
assertThat(myA).isEqualTo(""this""); 
} 

@Then(""I see <b>"") 
public void thenISeeB(@Named(""b"") String myB) { 
assertThat(myB).isEqualTo(""that""); 
} 

// $x not surrounded by all whitespace, but ""x"" NOT known in Examples table: all fine 
@When(""I did '$x'"") 
public void whenIDidX(@Named(""x"") String myX) { 
assertThat(myX).isEqualTo(""foo""); 
} 
{code} 

...but wrong: 

{code} 
// $b not surrounded by all whitespace, and ""b"" also known in Examples table 
@Then(""I saw '$b'"") 
public void thenISawB(@Named(""b"") String myB) { 
// Will fail: is assigned ""that"" from Examples table instead 
assertThat(myB).isEqualTo(""bar""); 
} 
{code} 

...when used with: 

{code} 
Given I have <a> and <b> 
When I did 'foo' 
And I do <a> 
Then I see <b> 
And I saw 'bar' 


Examples: 

| a| b| 
|this|that| 
{code}","non-feature containing"
"When aliasing a step method with table parameter and without, the parameter is not correctly processed if both are used in the same scenario I have a step method aliased like this (to be able to use the step with table parameters and explicitly as well) 

{noformat} 
@Then(""title is \""$title\"""") 
@Alias(""title is <title>"") 
public void thenTitleIs(@Named(""title"") final String title) { 
logger.debug(""thenTitleIsTable(""+title+"")""); 
} 
{noformat} 

when I now use the steps 

{noformat} 
... 
Then title is <title> 
... 
Then title is ""some other title"" 
{noformat} 

the 2nd step gets the variable set from the first step 
when the steps are defined in 2 different methods, the behavior is as expected.","non-feature containing"
"When and Then annotations, normalise whitespace When matching story to Java method, whitespace should be normalized, deleting leading and trailing spaces and collapsing other consecutive whitespace to a single space.

@When("" leading space"")
@When(""trailing space"")
@When(""many    spaces   between   text"")

Using patterns, e.g ""{you|the user|} click{s|} the button"" can become error prone when whitespace is significant.

You may need a way to disable the new feature, in the event that users stories relied on whitespace to differentiate.

Thank you, Hank
 
","feature containing"
"When step have 2 parameters and one of them is in tabular form then it isn't presented as table in story's HTML report For example we have an following Given: 

Given the cat with following parameters in tabular form 
|Color|Height|Weight| 
|Brown|20cm |7Kg | 

where cat is parameter and table is parameter, as a result table data will not being converted to table in HTML report. 


My research shows that issue related to \n replacement in StepCreator.java method: 
{code} 
private String replaceParameterValue(String stepText, int position, Type[] types, String[] parameters) { 
Type type = types[position]; 
String value = parameters[position]; 
if (value != null) { 
if ( isTable(type)){ 
stepText = stepText.replace(value, PARAMETER_TABLE_START + value + PARAMETER_TABLE_END); 
} else { 
stepText = stepText.replace(value, PARAMETER_VALUE_START + value + PARAMETER_VALUE_END) 
.replace(""\n"", PARAMETER_VALUE_NEWLINE); 
} 
} 
return stepText; 
} 
{code}","non-feature containing"
"When story has multiple failed scenarios, only one screenshot is created When story has multiple failed scenarios, only one screenshot is created. Problem is StoryRunner holds first failure for the rest of the story. WebDriverScreenshotOnFailure then generates all screenshots from the same GUID and writing them them all into the same file.","non-feature containing"
"When using GivenStories: the normal scenario is not excecuted When running a scenario with GivenStories, only the story in the file specified in the givenstories are run. Not the main story?","non-feature containing"
"When using PerScenarioWebDriverSteps.java and GivenStories then occurs DelegateWebDriverNotFound exception When I use as life cycle steps PerScenarioWebDriverSteps and try to execute scenario which has GivenStories section then occurs DelegateWebDriverNotFound. 

What happens during executions: 
1. Firefox blank window is opened (for top level scenario?) 
2. Another firefox windows is opened and executes scenario from GivenStories section then this window is closed. 
3. Exceptions occurs. 

How to reproduce: 
1. Checkout examples etsy-selenium/java-spring 
2. Updated etsy-selenium/java-spring/src/main/resources/etsy-steps.xml with file provided in attachment. 
3. Add stories provided in attachment. 
4. Run stories with: 
mvn clean install -Dmeta.filter=""+givenstories"" 

Expected: 
Each scenario successfully executed in new firefox window. 
Actual: 
Failing top-level scenario. 

Console output: 
Given I am on etsy.com (FAILED) 
(org.jbehave.web.selenium.DelegatingWebDriverProvider$DelegateWebDriverNotFound: WebDriver has not been found for this thread. 
Please verify you are using the correct WebDriverProvider, with the appropriate credentials if using remote access, e.g. to SauceLabs: -DSAUCE_USERNAME=xxxxxx -DSAUCE_ACCESS_KEY=xxx-xxxx-xxxx-xxxx-xxx ) 
When I want to browse through a treasury gallery (NOT PERFORMED) 
When I want to buy something from etsy.com (NOT PERFORMED) 
When I want to browse the treasury (NOT PERFORMED) 
When I choose the first treasury gallery (NOT PERFORMED) 
!-- We don't care for the results, just the gallery 
Then results will be displayed in the gallery (NOT PERFORMED) 
org.jbehave.web.selenium.PerScenarioWebDriverSteps.afterScenario() (FAILED) 
(org.jbehave.core.failures.BeforeOrAfterFailed: Method afterScenario (annotated with @AfterScenario in class org.jbehave.web.selenium.PerScenarioWebDriverSteps) failed: java.lang.NullPointerException) 

org.jbehave.core.failures.BeforeOrAfterFailed: Method afterScenario (annotated with @AfterScenario in class org.jbehave.web.selenium.PerScenarioWebDriverSteps) failed: java.lang.NullPointerException 
at org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:447) 
at org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.doNotPerform(StepCreator.java:460) 
at org.jbehave.core.embedder.StoryRunner$SomethingHappened.run(StoryRunner.java:509) 

[WARNING] Failed to run story etsy_browse_with_givenStories.story 
org.jbehave.web.selenium.DelegatingWebDriverProvider$DelegateWebDriverNotFound: WebDriver has not been found for this thread. 
Please verify you are using the correct WebDriverProvider, with the appropriate credentials if using remote access, e.g. to SauceLabs: -DSAUCE_USERNAME=xxxxxx -DSAUCE_ACCESS_KEY=xxx-xxxx-xxxx-xxxx-xxx 
at org.jbehave.web.selenium.DelegatingWebDriverProvider.get(DelegatingWebDriverProvider.java:24) 
at org.jbehave.web.selenium.WebDriverPage.get(WebDriverPage.java:36) 
at org.jbehave.tutorials.etsy.pages.Home.go(Home.java:18) 
at org.jbehave.tutorials.etsy.steps.EtsyDotComSteps.homepageOnEtsyDotCom(EtsyDotComSteps.java:52) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
at java.lang.reflect.Method.invoke(Method.java:597) 
at org.jbehave.core.steps.StepCreator$ParameterisedStep.perform(StepCreator.java:537) 
at org.jbehave.core.embedder.StoryRunner$FineSoFar.run(StoryRunner.java:474) 
at org.jbehave.core.embedder.StoryRunner.runStepsWhileKeepingState(StoryRunner.java:454) 
at org.jbehave.core.embedder.StoryRunner.runScenarioSteps(StoryRunner.java:418) 
at org.jbehave.core.embedder.StoryRunner.runCancellable(StoryRunner.java:293) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:211) 
at org.jbehave.core.embedder.StoryRunner.run(StoryRunner.java:172) 
at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:229) 
at org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:201) 
at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303) 
at java.util.concurrent.FutureTask.run(FutureTask.java:138) 
at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:253) 
at com.google.common.util.concurrent.AbstractListeningExecutorService.submit(AbstractListeningExecutorService.java:56) 
at com.google.common.util.concurrent.AbstractListeningExecutorService.submit(AbstractListeningExecutorService.java:41) 
at org.jbehave.core.embedder.StoryManager.submit(StoryManager.java:198) 
at org.jbehave.core.embedder.StoryManager.runningStory(StoryManager.java:132) 
at org.jbehave.core.embedder.StoryManager.filterRunning(StoryManager.java:116) 
at org.jbehave.core.embedder.StoryManager.runningStoriesAsPaths(StoryManager.java:101) 
at org.jbehave.core.embedder.StoryManager.runStories(StoryManager.java:78) 
at org.jbehave.core.embedder.Embedder.runStoriesAsPaths(Embedder.java:202) 
at org.jbehave.core.junit.JUnitStories.run(JUnitStories.java:20) 
at org.jbehave.core.embedder.Embedder.runAsEmbeddables(Embedder.java:122) 
at org.jbehave.mojo.RunStoriesAsEmbeddables.execute(RunStoriesAsEmbeddables.java:18) 
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101) 
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209) 
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) 
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) 
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84) 
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59) 
at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183) 
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161) 
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320) 
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156) 
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537) 
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196) 
at org.apache.maven.cli.MavenCli.main(MavenCli.java:141) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
at java.lang.reflect.Method.invoke(Method.java:597) 
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290) 
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230) 
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409) 
at org.codehaus.plexus.classworlds 


Additional info: 
Double execution of scenario included in GivenStories is connected to JBEHAVE-789","non-feature containing"
"When using scenario level GivenStories no report is written When using scenario level given stories like so:

{noformat}
Meta:

Narrative:
As a user
I want to perform an action
So that I can achieve a business goal

Scenario: scenario description
GivenStories: GivenTestStory.story
Given there is something wrong
{noformat}


then no report for the story is written. Using a debugger and placing a break point in TemplatebleOutput.afterStory(boolean) one can see, that the method is called four times, once for BeforeStories and AfterStories, and twice for the executing story both times, the boolean parameter givenStory is true leading to no report being written.

Attached you find a small maven test project that reproduces the error. After executing JunitStoriesTest one would expect a ""TestStory.html"" in the jbehave output folder, yet none is created. After removing the GivenStories line, everything works as expected.","non-feature containing"
"White space not preserved in HTML report for failed outcomes When an outcome fails due to excess white space in the expected string, the HTML report does not display the excess white space, making it difficult to see where the difference lies. 

Proposed changes to jbehave-core.css: add {code:css}white-space: pre-wrap;{code} to {code:css}.outcomes table{code} and {code:css}.parameter table th, td{code}

{code:css}
.outcomes table {
    border: 1px solid;
    margin-top: 12px;
    margin-left: 12px;
    white-space: pre-wrap;
}

.parameter table th, td {
    text-align: center;
    padding-left: 5px;
    padding-right: 5px;
    border-left: 1px solid;
    white-space: pre-wrap;	
}
{code}","non-feature containing"
"Wrap runtime exceptions as MojoFailureException to avoid FATAL outcome Runtime exceptions cause mvn to report outcome as FATAL errors which does not play well with some CI systems. 

Wrap them as MojoFailureException.","feature containing"
"Writing stories in plain English, with words convertible to boolean Provide an enum to allow story writers to write natural prose, while developers can enjoy getting booleans ""for free"". 

Quoting from the javadoc.. 

Example of use. Given the following candidate step: 

{code} 
@Given(""a stock of symbol $symbol $withThreshold a threshold"") 
public void aStock(String symbol, BooleanWord withThreshold) { 
stock = new Stock(symbol).withThreshold(withThreshold.toBoolean()); 
} 
{code} 

.. it is then possible to write the following scenarios: 

{code} 
Scenario: a stock with threshold 

Given a stock of symbol AAA with a threshold 
When .. 
Then .. 

Scenario: a stock with no threshold 

Given a stock of symbol AAA without a threshold 
When .. 
Then .. 
{code} 

Please note that this depends on JBEHAVE-1075. 

It would be nice if we could find an elegant way to internationalise the enum constants. 
One where there is only one enum constant for each boolean word, and the translations are kept in an external file. Any ideas?","feature containing"
"Wrong colorisation in HTML report if a step contains a word that is equal to a value from example table When values from example table are populated into scenario they are shown in different color. The problem is that if a step contains a word equal to a value from the table it's also shown in that color which might be confusing (see screenshot attached). 

To reproduce this I just modified the claims_with_null_calendar.story from trader examples as shown on the screenshot.","non-feature containing"
"Wrong encoding in reports running from JUnit (maven failsafe or surefire plugin, not dedicated jebhave maven plugin) on Windows With -Dfile.encoding=UTF-8 FreeMaker still is using and rendering html report with cp1250 encoding, output log from maven install command: 

... 
(stories/sample.story) 
Scenario: Przyk&#322;adowy scenariusz numer 1 &#347;&#380;_&#322; 
Given Given co&#347;tam&#378;&#322;_&#347; (PENDING) 
When By&#322;_&#347;&#380;&#378;&#324;&#346;&#260; (PENDING) 
Then G&#380;eg&#380;_&#322;k&#261; (PENDING) 
@Given(""Given co\u0139\u203Atam\u0139\u015F\u0139\u201A\u0102\u0142\u0139\u203A"") 
... 
Generating reports view to 'e:\Jenkins\jobs\jbehave-encoding-test\workspace\target\jbehave' using formats '[console, txt, html, stats]' and view properties ' 

Unknown macro: {defaultFormats=stats, decorateNonHtml=true, viewDirectory=view, decorated=ftl/jbehave-report-decorated.ftl, reports=ftl/jbehave-reports-with-totals.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl} 
' 
[encoding-test] DEBUG Could not find template in cache, creating new one; id=[ftl/jbehave-report-decorated.ftl[pl_PL,Cp1250,parsed] ] 
[encoding-test] DEBUG Compiling FreeMarker template ftl/jbehave-report-decorated.ftl[pl_PL,Cp1250,parsed] from jar:file:/C:/.m2/repository/org/jbehave/jbehave-core/3.4.4/jbehave-core-3.4.4.jar!/ftl/jbehave-report-decorated.ftl 
[encoding-test] DEBUG Could not find template in cache, creating new one; id=[ftl/sh.ftl[pl_PL,Cp1250,parsed] ]","non-feature containing"
"XML Scenario Reporter A scenario reporter that outputs in XML format for machine-readable purposes.","feature containing"
"XML Scenario reporter doesn't always include a closing story xml tag When running the trader example, the story org/jbehave/examples/trader/stories/failure_followed_by_given_stories.story 
generates an invalid XML file by not including a final closing ""story"" tag. Attached is the generated invalid XML file.","non-feature containing"
"XML format is broken when story is cancelled When the story is cancelled due to for example story timeout, XML reporter generates broken XML - just misses </scenario> end tag. 

Part of malformed report: 
{code} 
<step outcome=""successful"">And the <parameter>Param</parameter> smth happened</step> 
</scenario> 
<scenario keyword=""Scenario:"" title=""test Scenario1""> 
<step outcome=""successful"">Given the user is on the index page</step> 
<step outcome=""successful"">And <parameter>1&apos;st</parameter> column width is <parameter>4U</parameter></step> 
<cancelled keyword=""STORY CANCELLED"" durationKeyword=""DURATION"" durationInSecs=""301""/> 
</story> 
{code}","non-feature containing"
"XML reporter creates invalid xml for stories with narrative in 4.x branch In stories with narrative, the normal XML reporter creates invalid xml in 4.x since the narrative tag comes before the story tag. 
The shortest story example to show the issue is this: 
{code} 
Narrative: 
In order to xxx 
As a xxx 
I want to xxx 

Scenario: xxx 
{code} 

(the story was initially reported for JBEHAVE-853 by Zihao Yu, but this issue was more relative to version issues, since it works with 3.7.3, so I decided to create a new issue mentioning 4.x directly)","non-feature containing"
"XmlTemplateOuput is misspelled XmlTemplateOuput is misspelled, I wonder if this can be renamed without breaking current user code.","non-feature containing"
"add @Documented annotation to Given, When, Then classes Hi, 

We would like to have a java doc containing annotated strings with test steps. 
AFAIK, it's enough to add a @Documented annotation to Given, When, Then..","feature containing"
"afterStory not reported for AfterStories when multithreaded When specifying a thread count larger than one, the afterStory notification is not sent to StoryReporters for the ""AfterStories"" meta-story.

This affects among others Serenity, which is generating the reports in this step (https://github.com/serenity-bdd/serenity-jbehave/issues/89).

I created a sample project based on the JBehave examples: https://github.com/csabakoncz/serenity-projects/tree/master/jbehave-multithreaded

If one issues ""mvn test -Dthreadcount=2"" then there is no ""afterStory"" line following ""beforeStory: AfterStories"". (In the single-threaded case it is there)","non-feature containing"
"ant copy-depedencies improvements I have 3 suggestions for improvements of the ant copy-dependencies process (or 2 suggestions and one question= 

- update maven-ant-tasks to the current version (2.1.3) 
- the maven-ant-tasks jar shouldn't be in lib (since it is not a dependency of jbehave) maybe if should be in a subdir ant 
- is it intentional that the binary distribution doesn't contain any binaries? It just downloads the jbehave jars along with the dependencies.","feature containing"
"browser not closing when done by @AfterStories PerStoriesWebDriverSteps has a before and after stories. If there's a WebDriver thrown exception (a derivative of RuntimeE), then the @AfterStores annotated method is not called ..... and as such the browser frame is not closed.","non-feature containing"
"build.xml may not work due to user rights and can change users {ant.home}/lib Hi, 

The shipped build.xml of jbehave 3.1.2 has two targets: setup and copy-dependencies. The second one depends on the first one, but under certain circumstances the setup task may fail, which will make the copy-dependencies fail. For example if someone has a globally installed ant version (in case of ubuntu apt-get install ant). 

~/Desktop/jbehave-3.1.2/lib % ant 
Buildfile: /home/zsolt/Desktop/jbehave-3.1.2/lib/build.xml 

setup: 
[copy] Copying 1 file to /usr/share/ant/lib 

BUILD FAILED 
/home/zsolt/Desktop/jbehave-3.1.2/lib/build.xml:9: Failed to copy /home/zsolt/Desktop/jbehave-3.1.2/lib/maven-ant-tasks-2.1.0.jar to /usr/share/ant/lib/maven-ant-tasks-2.1.0.jar due to java.io.FileNotFoundException /usr/share/ant/lib/maven-ant-tasks-2.1.0.jar (Permission denied) 


Additionally I don't really like that the setup tasks changes the content of my {ant.home/lib} folder, because I might have the latest version (currently 2.1.1) of maven-ant-tasks for some reasons, but the build.xml of jbehave removes it and replaces it with an older version (2.1.0) 

After removing the dependency between the setup and copy-dependencies tasks I was able to download the libraries of jbehave. 

Cheers, 
Zsolt","non-feature containing"
"codeLocationFromPath breaks for paths with spaces I discovered this in the Guice examples, but it's not a problem limited to Guice. Take this code that searches for stories: 

new StoryFinder().findPaths( CodeLocations.codeLocationFromPath( ""resources"" ).getFile(), asList( ""**/*.story"" ), null ); 

If the ""resources"" folder resides in a base path that contains a space, the StoryFinder will fail to locate the stories. This is because codeLocationFromPath() uses a java.net.URL object under-the-hood to URL encode the path, converting spaces to %20. Thus, jBehave will look here: 

c:\jbehave\folder%20with%20spaces\resources 

for stories located here: 

c:\jbehave\folder with spaces\resources 

This is also a problem for reports. If relative paths are used in any form, when jBehave converts them to full paths, the paths are URL-encoded. This in turn causes our Hudson builds to fail because it cannot locate the reports. 

The workaround for this is to not use CodeLocations to locate stories, and to use a Hudson project with no spaces, but jBehave really should support paths with spaces. This occurs on both Windows and Linux.","non-feature containing"
"consecutive parameters in string using ordered parameters breaks non-deterministically using a string like ""some text $limit $status some text"" where the parameters are consecutive, separated only by a string sometimes breaks when running the step, but doesn't break every time. 

It breaks such that the second parameter is concatenated to the first parameter. For example if the string passed to the step is ""some text 1 open some text"" then the $limit parameter is ""1 open"" instead of ""1"" given that the method signature is someMethod(String limit, String status). 

When running the test multiple times it only breaks sometimes.","non-feature containing"
"create two minute intro to minimock put together minimock web page based on jbehave tutorial.","feature containing"
"decorated txt reports get broken if the text contains <script></script> tags When text reports contains script tags (the closing </script> to be exact), the decorator breaks since the browser parses the script tags before the CDATA xml tag. 

E.g. if you have a step like: 

{quote} 
When I enter <script>test();</script> 
Then something else 
{quote} 

the resulting _txt.html file looks like this: 

{quote} 
<script type=""syntaxhighlighter"" class=""brush: text""><![CDATA[ 
When I enter <script>test();</script> 
Then something else 
]]></script> 
{quote} 

the browser will stop parsing the script tag at the first </script>. 

the fix changes the CDATA tag to html encoding if the text contains </script>, in all other cases wrapping the text in CDATA is correct.","non-feature containing"
"default report location determined by location of jbehave jar StoryReporterBuilder has an instance field outputLocationClass which is, by default, defined to be the StoryReporterBuilder.class object. This is then passed into a StoryLocation object as part of a FilePrintStreamFactory constructor. StoryLocation uses the class object to convert to a URL. Thus we are using the location of jar as the default reporting location. 

StoryLocation should just take a URL in its constructor, not a class. 

StoryReporterBuilder should have either use the outputDirectory.toURI().toURL() as the URL to pass in or setup a default of new File(""."") (current working directory) in order to pass into StoryLocation. outputLocationClass should be removed.","non-feature containing"
"doSkipScenariosAfterFailure do not catch failure in @BeforeStory Steps to reproduce bug:
1) Editing project configuration - set doSkipScenariosAfterFailure(true)
2) Run Story that has a failure in @BeforeStory

h3. Wxpected output:
Scenarios will not run, since Before Story has failed

h3. Actual output:
Scenarios run anyway, even if @BeforeStory has failed","non-feature containing"
"dynamic selection of input data I am using ""Examples:"" to in put data for the JBehave scenarios. 

eg: Examples: 
/stories/test_1.table 

I have test_1.table and test_2.table. I need to select tset_1.table or test_2.table according to a condition. How it can be possible in JBehave?","feature containing"
"empty lines in example tables should be ignored I tried to improve the layout of an example table in one story by adding newlines before each comment line (to improve the legibility a bit), 

however it turns out that an empty line in the table gives a list of empty parameters in the examples (e.g. ||| when you have 2 parameters). 

I think it would be better if empty lines are ignored, unless I'm missing something. 

If that is ok, I can write a patch.","feature containing"
"error with tab character in comments When we write scenarios, we use tab character to aline columns of tabulars. 
The problem appears when such step is commented (entirely or partially) by prefixing each step line by ""!-- "". 

The problem comes from the tab characters used in step tabular. 
The result is that next uncommented step is recognized pending, and thus scenario fails. 

If tab characters are replaced by spaces, the problem disappears. 

I set this bug critical and not major because in our case we really need this bugfix.","non-feature containing"
"files in jbehave-core/src/test/java/org/jbehave/core/reporters/reports/* are not used the files in jbehave-core/src/test/java/org/jbehave/core/reporters/reports/* are empty and are not used-","feature containing"
"getRowAsParameters returns wrond data when rows have similar names getRowAsParameters(rowNumber, true) returns incorrect data in case previous row already has value matching current. 

Example:
Then Do smth with following tables:
|field       |value                 |
|tableNumber |<key>|
|tableNumber2|<keyForTable2>|

Examples:
|key|keyForTable2|
|1   |2   |

actual result:
tableNumber = '1'
tableNumber2 = '1keyForTable2' (because it replaced 'key' in String 'keyForTable2' with actual data of 'key' (1)","non-feature containing"
"hhgh ncg","non-feature containing"
"html template report contains encoded html tags the template html report contains a few encoded html tags where the actual tag would be correct (span for parameters), this is probably due to the changes for JBEHAVE-802.","non-feature containing"
"if include instruction are alone, then the included steps are ignored. Hello, 
In my stories, some scenarios are factored in included files with no parameters. It is just a simple way to avoiding duplicates steps. Examples use case : share between 'create' and 'update' stories. 

When the include instruction are alone 
Then Jbehave doesnt execute the steps of included file 

When the include instruction is followed by simple a comment 
Then Jbehave execute the included steps 


Regards, 
Thomas Montembault 



Example : 
--------- 

Fail : 
Sc�nario: Tester les champs d'�dition 
Etant donn� les Histoires: stories/personne/include/personneEdit.include 

Succes : 

Sc�nario: Tester les champs d'�dition 
Etant donn� les Histoires: stories/personne/include/personneEdit.include 
!-- Un commentaire pour permettre prise en charge du sc�nario inclu 

personneEdit.include 
-------------------- 

Sc�nario: Test Trigramme 
Quand l'utilisateur saisit '' dans le champ 'Trigramme' 
Quand l'utilisateur clique sur le bouton 'enregistrer' 
Alors la page doit afficher un message de validation '""Trigramme"": Une donn�e est requise.' 
Quand l'utilisateur saisit '_txt(2)' dans le champ 'Trigramme' 
Quand l'utilisateur clique sur le bouton 'enregistrer' 
Alors la page doit afficher un message de validation '""Trigramme"": La donn�e doit comporter au moins 3 caract�res.' 
Quand l'utilisateur saisit '_txt(4)' dans le champ 'Trigramme' 
Quand l'utilisateur clique sur le bouton 'enregistrer' 
Alors la page doit afficher un message de validation '""Trigramme"": La donn�e a plus que les 3 caract�res maximum autoris�s.' 
Quand l'utilisateur saisit '_txt(3)' dans le champ 'Trigramme' 

... idem pour tout les champs de saisies","non-feature containing"
"images/failing_screenshot.png missing? (Duplicating issue that I filed here: https://github.com/jbehave/jbehave-web/issues/15) 

In commit [f6a545fcd280da73d854ce91e3d2f8693f510e32|https://github.com/jbehave/jbehave-web/commit/f6a545fcd280da73d854ce91e3d2f8693f510e32] a reference to {{images/failing_screenshot.png}} was added, however I don't see a corresponding commit in https://github.com/jbehave/jbehave-site/tree/master/site-resources/src/main/resources/images? 

Futhermore I don't quite understand why the screenshot itself isn't inlined by default. There is a link to the correct screenshot, but the 'thumbnail image' isn't found. How about: 

{code} 
<img src=\""../screenshots/failed-scenario-{3}.png\"" alt=\""failing screenshot\""/> 
{code} 
instead of 
{code} 
<a color=\""black\"" href=\""../screenshots/failed-scenario-{3}.png\""><img src=\""images/failing_screenshot.png\"" alt=\""failing screenshot\""/></a> 
{code} 

We are only talking about the 'failed' case here so it's not like the complete report is littered with screenshots (assuming of course your tests succeed most of the time :wink:) 

Lastly, as a workaround you can use this format instead if you want to have inline images: 

{code} 
public class MyWebDriverHtmlOutput extends HtmlOutput { 

public static final org.jbehave.core.reporters.Format MY_WEB_DRIVER_HTML = new MyWebDriverHtmlFormat(); 

public MyWebDriverHtmlOutput(PrintStream output, Keywords keywords) { 
super(output, failedPatternProperties(), keywords); 
} 

private static Properties failedPatternProperties() { 
Properties properties = new Properties(); 
properties.put(""failed"", 
""<div class=\""step failed\"">{0} <span class=\""keyword failed\"">({1})</span><br/>"" + 
""<span class=\""message failed\"">{2}</span><br/>"" + 
""<img src=\""../screenshots/failed-scenario-{3}.png\"" alt=\""failing screenshot\""/></div>\n""); 
return properties; 
} 

private static class MyWebDriverHtmlFormat extends org.jbehave.core.reporters.Format { 

public MyWebDriverHtmlFormat() { 
super(""HTML""); 
} 

@Override 
public StoryReporter createStoryReporter(FilePrintStreamFactory factory, StoryReporterBuilder storyReporterBuilder) { 
factory.useConfiguration(storyReporterBuilder.fileConfiguration(""html"")); 
return new MyWebDriverHtmlOutput(factory.createPrintStream(), storyReporterBuilder.keywords()) 
.doReportFailureTrace(storyReporterBuilder.reportFailureTrace()) 
.doCompressFailureTrace(storyReporterBuilder.compressFailureTrace()); 
} 
} 
} 
{code}","non-feature containing"
"isTable() does not consider parametric types extending ExamplesTable A bit of context first: we have created a custom ExamplesTable implementation that has a generic argument, and it lets us do the following:

{code}
Given the following users exist:
| username | realName | dateOfBirth |
| dojoe        | John Doe | 1988.04.12  |
{code}

And then have it like this in Java:

{code}
class User {
    private String userName;
    private String realName;
    private LocalDate dateOfBirth;
}
...
@Given
public void givenTheFollowingUsersExist(SmartTable<User> users) {
    for(User user : users) {
        ...
    }
}
{code}

So we spare some boilerplate by inferring column names from the field names of the type parameter (User in this case) and standardize our tables on our entity model. This is implemented as a ParameterConverter and we're using it quite happily already.

However, there's a bit of code in StepCreator, that's preventing us from having our custom table nicely formatted in HTML - even though it extends ExamplesTable:

{code}
    private boolean isTable(Type type) {
        return type instanceof Class && ((Class<?>) type).isAssignableFrom(ExamplesTable.class);
    }
{code}

I'm proposing a simple change so that table detection works with ParameterizedTypes as well.","feature containing"
"issue dddd","non-feature containing"
"it is not possible to comment a scenario with !-- If you write a scenario with parameter see example, and comment the next scenario with !--. Then the previous when doesn't work. 

Example: This will not work 

Scenario: example 
When using profiles 
|profile| 
|WEBSOCKET 1 | 

!-- Scenario: xxx 

The scenario example will not work, because he think that !-- Scenario: xxx is a parameter. 

But if you comment something else like (!-- example comment) after the example scenario. It will work correct. 

Example: This will work 

Scenario: example 
When using profiles 
|profile| 
|WEBSOCKET 1 | 

!-- example comment","non-feature containing"
"jBehave WebSite needs a facelifting Need to update jBehave website using the template engine from BuildMaster for easy website updating","feature containing"
"jBehave needs an IntelliJ Plugin In order for jBehave to get mass adoption, ide plugins are required. We should begin work on both IntelliJ and Eclipse plugins.","feature containing"
"jBehave should be more intelligent/flexible with regards to prioritisation of steps BDD's strength relies on being able to write fluent scenarios. jBehave's support for this is very good, but there is still room for improvement. For example a typical scenario might read... 

{quote} 
Scenario: Schedule Patient Discharge 

Given a medical patient called Bob Holness who is not medically fit 
When I change Bob's state to medically fit 
And select a discharge time of tomorrow morning 
And select a discharge complexity of 3 
{color:red}Then Bob's discharge schedule should be displayed on the ward board{color} 
{quote} 

Now in a related scenario let's say I want to cancel while rescheduling a discharge... 

Scenario: Cancel Rescheduling Patient Discharge 

{quote} 
Given a medical patient called Bob Holness who already has a discharge schedule 
When I reiterate that Bob's state is medically fit 
And select a discharge time of tomorrow morning 
And cancel the discharge schedule 
{color:red}Then Bob's *old* discharge schedule should be displayed on the ward board{color} 
{quote} 

The underlying implementation of assserting Bob's actual discharge schedule is the same, but I want to emphasise *the expression of intent* through use of words such as old, new, still, etc. 

jBehave partially supports this through aliases 

{code:title=MySteps.java|borderStyle=solid} 
@Then('''$patient discharge schedule should be displayed on the ward board''') 
@Aliases(values=['''$patient old discharge schedule should be displayed on the ward board''']) 
public void assertDischargeScheduleOnWardPage(Patient patient) { 
wardBoardPage.assertDischargeSchedule(patient) 
} 
{code} 

The trouble is that the above fails because of the way in which jBehave matches and prioritises steps. Both ""Then"" and ""Alias"" steps will match the sentence 
""Bob's old discharge schedule should be displayed on the ward board"", but ""Then"" will be prioritised based on it's declaration order, causing the value ""Bob's old"" to be passed to the PatientParameterConverter. Since no patient exists with the name ""Bob's old"", the parameter converter will return null and the test fails. 

Currently the workaround is to reword the steps slightly to prevent both of them matching... 

{quote}Then {color:red}""{color}Bob's{color:red}""{color} discharge schedule should be displayed on the ward board 
Then {color:red}""{color}Bob's{color:red}""{color} old discharge schedule should be displayed on the ward board{quote} 

or 

{quote}Then Bob's discharge schedule should be displayed on the ward board 
Then Bob's old discharge schedule should {color:red}now{color} be displayed on the ward board{quote} 

but both are inferior to the original. A nicer (and fairly easy) solution would be to base this priortisation on similarity with the string step, using something like the Levenshtein distance. Harder, but better yet would be to make the prioritsation configurable. 

I've attached the first solution (with lots of printlns so you can see how well the prioriisation works).","feature containing"
"jBehave should have an Ant Task Create an Ant Task","feature containing"
"jbehave-core / jbehave-jenkins-plugin cannot compile package Reduce to trival since I didnt know you could get the hpi from http://search.maven.org/#search|ga|1|jbehave-jenkins-plugin 

A user cannot compile jbehave-core / jbehave-jenkins-plugin project using mvn package 

Steps to reproduce on windows OS: 
- download or clone master jbehave-core 
- Open cmd.exe 
- CD into the jbehave-jenkins-plugin directory 
- run the following 
{code} 
mvn package 
{code} 

when running these are the initial results on master: 
{code} 
C:\Users\qateam\Downloads\jbehave-core-master\jbehave-jenkins-plugin>mvn package -U 
[INFO] Scanning for projects... 
[INFO] 
[INFO] ------------------------------------------------------------------------ 
[INFO] Building JBehave Jenkins Plugin 3.9-SNAPSHOT 
[INFO] ------------------------------------------------------------------------ 
Downloading: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-install-plugin/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-install-plugin/maven-metadata.xml (592 B at 1.5 KB/sec) 
Downloading: http://repo.maven.apache.org/maven2/org/kohsuke/access-modifier-checker/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/kohsuke/access-modifier-checker/maven-metadata.xml (364 B at 3.1 KB/sec) 
Downloading: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-deploy-plugin/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-deploy-plugin/maven-metadata.xml (678 B at 5.8 KB/sec) 
Downloading: http://repo.maven.apache.org/maven2/org/jenkins-ci/plugins/xunit/1.62/xunit-1.62.pom 
[WARNING] The POM for org.jenkins-ci.plugins:xunit:jar:1.62 is missing, no dependency information available 
Downloading: http://maven.glassfish.org/content/groups/public/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloading: https://nexus.codehaus.org/content/repositories/snapshots/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloading: http://repo.maven.apache.org/maven2/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloading: http://download.java.net/maven/2/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/kohsuke/stapler/stapler/maven-metadata.xml (705 B at 6.8 KB/sec) 
Downloaded: http://download.java.net/maven/2/org/kohsuke/stapler/stapler/maven-metadata.xml (5 KB at 12.3 KB/sec) 
[WARNING] Could not transfer metadata org.kohsuke.stapler:stapler/maven-metadata.xml from/to m.g.o-public (http://maven.glassfish.org/content/groups/p 
ublic/): hostname in certificate didn't match: <maven.glassfish.org> != <maven.java.net> OR <maven.java.net> 
Downloading: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave-core/3.9-SNAPSHOT/maven-metadata.xml 
Downloaded: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave-core/3.9-SNAPSHOT/maven-metadata.xml (2 KB at 3.9 KB/sec) 
Downloading: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave/3.9-SNAPSHOT/maven-metadata.xml 
Downloaded: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave/3.9-SNAPSHOT/maven-metadata.xml (593 B at 3.4 KB/sec) 
Downloading: http://repo.maven.apache.org/maven2/org/jenkins-ci/plugins/xunit/1.62/xunit-1.62.jar 
[INFO] ------------------------------------------------------------------------ 
[INFO] BUILD FAILURE 
[INFO] ------------------------------------------------------------------------ 
[INFO] Total time: 4.410s 
[INFO] Finished at: Sun Nov 03 20:33:01 EST 2013 
[INFO] Final Memory: 15M/224M 
[INFO] ------------------------------------------------------------------------ 
[ERROR] Failed to execute goal on project jbehave-jenkins-plugin: Could not resolve dependencies for project org.jbehave:jbehave-jenkins-plugin:hpi:3. 
9-SNAPSHOT: Could not find artifact org.jenkins-ci.plugins:xunit:jar:1.62 in central (http://repo.maven.apache.org/maven2) -> [Help 1] 
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch. 
[ERROR] Re-run Maven using the -X switch to enable full debug logging. 
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles: 
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException 
{code} 

- add the jenkins xunit repository to the pom to fix above problem 
{code} 
<repositories> 
<repository> 
<id>jenkins-releases</id> 
<url>http://repo.jenkins-ci.org/releases/</url> 
</repository> 
</repositories> 
{code} 

- run the following 
{code} 
mvn package -U 
{code} 

after running with the specified repository for jenkins xUnit I get the following error: 
{code} 
C:\Users\qateam\Downloads\jbehave-core-master\jbehave-jenkins-plugin>mvn package -U 
[INFO] Scanning for projects... 
[INFO] 
[INFO] ------------------------------------------------------------------------ 
[INFO] Building JBehave Jenkins Plugin 3.9-SNAPSHOT 
[INFO] ------------------------------------------------------------------------ 
Downloading: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-install-plugin/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-install-plugin/maven-metadata.xml (592 B at 1.1 KB/sec) 
Downloading: http://repo.maven.apache.org/maven2/org/kohsuke/access-modifier-checker/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/kohsuke/access-modifier-checker/maven-metadata.xml (364 B at 1.7 KB/sec) 
Downloading: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-deploy-plugin/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-deploy-plugin/maven-metadata.xml (678 B at 3.0 KB/sec) 
Downloading: http://maven.glassfish.org/content/groups/public/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloading: http://repo.maven.apache.org/maven2/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloading: http://repo.jenkins-ci.org/releases/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloading: https://nexus.codehaus.org/content/repositories/snapshots/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/kohsuke/stapler/stapler/maven-metadata.xml (705 B at 3.3 KB/sec) 
Downloading: http://download.java.net/maven/2/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloaded: http://download.java.net/maven/2/org/kohsuke/stapler/stapler/maven-metadata.xml (5 KB at 10.2 KB/sec) 
Downloaded: http://repo.jenkins-ci.org/releases/org/kohsuke/stapler/stapler/maven-metadata.xml (2 KB at 1.9 KB/sec) 
[WARNING] Could not transfer metadata org.kohsuke.stapler:stapler/maven-metadata.xml from/to m.g.o-public (http://maven.glassfish.org/content/groups/p 
ublic/): hostname in certificate didn't match: <maven.glassfish.org> != <maven.java.net> OR <maven.java.net> 
Downloading: http://repo.jenkins-ci.org/releases/org/jbehave/jbehave-core/3.9-SNAPSHOT/maven-metadata.xml 
Downloading: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave-core/3.9-SNAPSHOT/maven-metadata.xml 
Downloaded: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave-core/3.9-SNAPSHOT/maven-metadata.xml (2 KB at 3.7 KB/sec) 
Downloading: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave/3.9-SNAPSHOT/maven-metadata.xml 
Downloading: http://repo.jenkins-ci.org/releases/org/jbehave/jbehave/3.9-SNAPSHOT/maven-metadata.xml 
Downloaded: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave/3.9-SNAPSHOT/maven-metadata.xml (593 B at 3.2 KB/sec) 
[INFO] 
[INFO] --- maven-resources-plugin:2.5:resources (default-resources) @ jbehave-jenkins-plugin --- 
[debug] execute contextualize 
[INFO] Using 'UTF-8' encoding to copy filtered resources. 
[INFO] Copying 2 resources 
[INFO] Copying 0 resource 
[INFO] 
[INFO] --- maven-compiler-plugin:2.3.2:compile (default-compile) @ jbehave-jenkins-plugin --- 
[INFO] Compiling 4 source files to C:\Users\qateam\Downloads\jbehave-core-master\jbehave-jenkins-plugin\target\classes 
[INFO] 
[INFO] --- access-modifier-checker:1.4:enforce (default-enforce) @ jbehave-jenkins-plugin --- 
Downloading: http://repo.maven.apache.org/maven2/org/jenkins-ci/annotation-indexer/1.4/annotation-indexer-1.4.pom 
[WARNING] The POM for org.jenkins-ci:annotation-indexer:jar:1.4 is missing, no dependency information available 
Downloading: http://repo.maven.apache.org/maven2/org/jenkins-ci/annotation-indexer/1.4/annotation-indexer-1.4.jar 
[INFO] ------------------------------------------------------------------------ 
[INFO] BUILD FAILURE 
[INFO] ------------------------------------------------------------------------ 
[INFO] Total time: 6.718s 
[INFO] Finished at: Sun Nov 03 20:41:54 EST 2013 
[INFO] Final Memory: 25M/359M 
[INFO] ------------------------------------------------------------------------ 
[ERROR] Failed to execute goal org.kohsuke:access-modifier-checker:1.4:enforce (default-enforce) on project jbehave-jenkins-plugin: Execution default- 
enforce of goal org.kohsuke:access-modifier-checker:1.4:enforce failed: Plugin org.kohsuke:access-modifier-checker:1.4 or one of its dependencies coul 
d not be resolved: Could not find artifact org.jenkins-ci:annotation-indexer:jar:1.4 in central (http://repo.maven.apache.org/maven2) -> [Help 1] 
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch. 
[ERROR] Re-run Maven using the -X switch to enable full debug logging. 
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles: 
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginResolutionException 
{code} 

- so I added the dependency for jenkins annotation-indexer to the pom to fix above problem 
{code} 
<dependency> 
<groupId>org.jenkins-ci</groupId> 
<artifactId>annotation-indexer</artifactId> 
<version>1.4</version> 
</dependency> 
{code} 

- run the following 
{code} 
mvn package -U 
{code} 

after running with the specified dependency for jenkins annotation-indexer I get the following error: 
{code} 
C:\Users\qateam\Downloads\jbehave-core-master\jbehave-jenkins-plugin>mvn package -U 
[INFO] Scanning for projects... 
[INFO] 
[INFO] ------------------------------------------------------------------------ 
[INFO] Building JBehave Jenkins Plugin 3.9-SNAPSHOT 
[INFO] ------------------------------------------------------------------------ 
Downloading: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-install-plugin/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-install-plugin/maven-metadata.xml (592 B at 1.5 KB/sec) 
Downloading: http://repo.maven.apache.org/maven2/org/kohsuke/access-modifier-checker/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/kohsuke/access-modifier-checker/maven-metadata.xml (364 B at 2.6 KB/sec) 
Downloading: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-deploy-plugin/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/apache/maven/plugins/maven-deploy-plugin/maven-metadata.xml (678 B at 4.8 KB/sec) 
Downloading: http://repo.jenkins-ci.org/releases/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloading: http://maven.glassfish.org/content/groups/public/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloading: https://nexus.codehaus.org/content/repositories/snapshots/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloading: http://repo.maven.apache.org/maven2/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloaded: http://repo.maven.apache.org/maven2/org/kohsuke/stapler/stapler/maven-metadata.xml (705 B at 6.6 KB/sec) 
Downloading: http://download.java.net/maven/2/org/kohsuke/stapler/stapler/maven-metadata.xml 
Downloaded: http://repo.jenkins-ci.org/releases/org/kohsuke/stapler/stapler/maven-metadata.xml (2 KB at 6.9 KB/sec) 
Downloaded: http://download.java.net/maven/2/org/kohsuke/stapler/stapler/maven-metadata.xml (5 KB at 13.7 KB/sec) 
[WARNING] Could not transfer metadata org.kohsuke.stapler:stapler/maven-metadata.xml from/to m.g.o-public (http://maven.glassfish.org/content/groups/p 
ublic/): hostname in certificate didn't match: <maven.glassfish.org> != <maven.java.net> OR <maven.java.net> 
Downloading: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave-core/3.9-SNAPSHOT/maven-metadata.xml 
Downloading: http://repo.jenkins-ci.org/releases/org/jbehave/jbehave-core/3.9-SNAPSHOT/maven-metadata.xml 
Downloaded: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave-core/3.9-SNAPSHOT/maven-metadata.xml (2 KB at 3.9 KB/sec) 
Downloading: http://repo.jenkins-ci.org/releases/org/jbehave/jbehave/3.9-SNAPSHOT/maven-metadata.xml 
Downloading: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave/3.9-SNAPSHOT/maven-metadata.xml 
Downloaded: https://nexus.codehaus.org/content/repositories/snapshots/org/jbehave/jbehave/3.9-SNAPSHOT/maven-metadata.xml (593 B at 2.9 KB/sec) 
[INFO] 
[INFO] --- maven-resources-plugin:2.5:resources (default-resources) @ jbehave-jenkins-plugin --- 
[debug] execute contextualize 
[INFO] Using 'UTF-8' encoding to copy filtered resources. 
[INFO] Copying 2 resources 
[INFO] Copying 0 resource 
[INFO] 
[INFO] --- maven-compiler-plugin:2.3.2:compile (default-compile) @ jbehave-jenkins-plugin --- 
[INFO] Nothing to compile - all classes are up to date 
[INFO] 
[INFO] --- access-modifier-checker:1.4:enforce (default-enforce) @ jbehave-jenkins-plugin --- 
Downloading: http://repo.maven.apache.org/maven2/org/jenkins-ci/annotation-indexer/1.4/annotation-indexer-1.4.jar 
[INFO] ------------------------------------------------------------------------ 
[INFO] BUILD FAILURE 
[INFO] ------------------------------------------------------------------------ 
[INFO] Total time: 4.789s 
[INFO] Finished at: Sun Nov 03 20:46:08 EST 2013 
[INFO] Final Memory: 20M/355M 
[INFO] ------------------------------------------------------------------------ 
[ERROR] Failed to execute goal org.kohsuke:access-modifier-checker:1.4:enforce (default-enforce) on project jbehave-jenkins-plugin: Execution default- 
enforce of goal org.kohsuke:access-modifier-checker:1.4:enforce failed: Plugin org.kohsuke:access-modifier-checker:1.4 or one of its dependencies coul 
d not be resolved: Could not find artifact org.jenkins-ci:annotation-indexer:jar:1.4 in central (http://repo.maven.apache.org/maven2) -> [Help 1] 
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch. 
[ERROR] Re-run Maven using the -X switch to enable full debug logging. 
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles: 
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginResolutionException 
{code} 

Stuck here. Just trying to build the hpi to put into jenkins... 

Using java version 
{code} 
C:\Users\qateam\Downloads\jbehave-core-master\jbehave-jenkins-plugin>java -version 
java version ""1.7.0_40"" 
Java(TM) SE Runtime Environment (build 1.7.0_40-b43) 
Java HotSpot(TM) 64-Bit Server VM (build 24.0-b56, mixed mode) 
{code} 

Using maven version 
{code} 
C:\Users\qateam\Downloads\jbehave-core-master\jbehave-jenkins-plugin>mvn --version 
Apache Maven 3.1.0 (893ca28a1da9d5f51ac03827af98bb730128f9f2; 2013-06-27 22:15:32-0400) 
Maven home: C:\apache-maven-3.1.0 
Java version: 1.7.0_40, vendor: Oracle Corporation 
Java home: C:\java\jdk7\jre 
Default locale: en_US, platform encoding: Cp1252 
OS name: ""windows 7"", version: ""6.1"", arch: ""amd64"", family: ""windows"" 
{code}","non-feature containing"
"jbehave-maven-plugin ignoring execution when trying to execute a package on a maven project with jbehave and jbehave-maven-plugin configured Maven fails to execute the jbehave goal. This is regardless of weather I execute it with in Eclipse or on the commandline. 

However if I issue the following command on the command line the jbehave-maven-plugin is executed and runs the acceptance tests: 
mvn clean package org.jbehave:jbehave-maven-plugin:3.3.2:run-stories-as-embeddables 

The command I use in Eclipse is: 
jbehave:run-stories-as-embeddables 

I have configured the jbehave plugin: 

{noformat} 
<plugins> 
<plugin> 
<groupId>org.apache.maven.plugins</groupId> 
<artifactId>maven-compiler-plugin</artifactId> 
<configuration> 
<source>1.6</source> 
<target>1.6</target> 
</configuration> 
</plugin> 

<plugin> 
<groupId>org.jbehave</groupId> 
<artifactId>jbehave-maven-plugin</artifactId> 
<version>3.3.2</version> 

<configuration> 
<scope>test</scope> 
<includes> 
<include>**/*.java</include> 
</includes> 

<metaFilters> 
<metaFilter>+author *</metaFilter> 
<metaFilter>-skip</metaFilter> 
</metaFilters> 
<systemProperties> 
<property> 
<name>java.awt.headless</name> 
<value>true</value> 
</property> 
</systemProperties> 
<ignoreFailureInStories>true</ignoreFailureInStories> 
<ignoreFailureInView>false</ignoreFailureInView> 
</configuration> 

<executions> 
<execution> 
<id>run-stories-as-embeddables</id> 
<phase>test</phase> 
<goals> 
<goal>run-stories-as-embeddables</goal> 
</goals> 

</execution> 
</executions> 
</plugin> 
</plugins> 
{noformat} 

Thanks 
Gavin","non-feature containing"
"jbehave-needle-archetype doesn't compile in version 4.1.3 - missing dependencies jbehave-needle-archetype doesn't compile in version 4.1.3
there are missing some dependencies there

Steps to reproduce:

{code}
mvn archetype:generate -DgroupId=org.test -DartifactId=jbehave-needle-test -DarchetypeGroupId=org.jbehave -DarchetypeArtifactId=jbehave-needle-archetype -DarchetypeVersion=4.1.3 -DinteractiveMode=false

cd jbehave-needle-test

mvn compile

[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.1:compile (default-compile) on project jbehave-needle-test: Compilation failure: Compilation failure:
[ERROR] \tmp\jbehave-needle-test\src\main\java\org\test\MyStories.java:[28,43] error: package de.akquinet.jbosscc.needle.injection does not exist
[ERROR]
[ERROR] \tmp\jbehave-needle-test\src\main\java\org\test\MyStories.java:[29,44] error: package de.holisticon.toolbox.needle.provider does not exist
[ERROR]
[ERROR] \tmp\jbehave-needle-test\src\main\java\org\test\MyStories.java:[62,52] error: no suitable constructor found for ExamplesTableFactory(LocalizedKeywords,LoadFromClasspath,ParameterConverters)
{code}","non-feature containing"
"jbehave-osgi build fails When cloning jbehave-osgi from github 'mvn clean install -P bundles' 
fails with the following error: 

[ERROR] Failed to execute goal on project org.jbehave.osgi.core: Could not resolve dependencies for project org.jbehave.osgi:org.jbehave.osgi.core:bundle:1.0.0-SNAPSHOT: Could not find artifact org.jbehave:jbehave-core:jar:4.0-SNAPSHOT -> [Help 1] 

After adding an appropriate snapshot repository the build fails with the following error: 

[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project org.jbehave.osgi.core: Compilation failure: Compilation failure: 
[ERROR] /other/dev/java/osgi/github/jbehave-osgi/jbehave-osgi-bundles/org.jbehave.osgi.core/src/main/java/org/jbehave/osgi/core/io/LoadFromBundleClasspath.java:[24,30] classLoader has private access in org.jbehave.core.io.LoadFromClasspath 
[ERROR] /other/dev/java/osgi/github/jbehave-osgi/jbehave-osgi-bundles/org.jbehave.osgi.core/src/main/java/org/jbehave/osgi/core/io/LoadFromBundleClasspath.java:[26,59] classLoader has private access in org.jbehave.core.io.LoadFromClasspath 
[ERROR] /other/dev/java/osgi/github/jbehave-osgi/jbehave-osgi-bundles/org.jbehave.osgi.core/src/main/java/org/jbehave/osgi/core/embedder/EmbedderOsgi.java:[18,17] no suitable constructor found for Embedder(org.jbehave.core.embedder.StoryMapper,org.jbehave.core.embedder.PerformableTree,org.jbehave.core.embedder.PrintStreamEmbedderMonitor,org.jbehave.osgi.core.configuration.ConfigurationOsgi) 
[ERROR] constructor org.jbehave.core.embedder.Embedder.Embedder(org.jbehave.core.embedder.StoryMapper,org.jbehave.core.embedder.PerformableTree,org.jbehave.core.embedder.EmbedderMonitor) is not applicable 
[ERROR] (actual and formal argument lists differ in length) 
[ERROR] constructor org.jbehave.core.embedder.Embedder.Embedder() is not applicable 
[ERROR] (actual and formal argument lists differ in length) 
[ERROR] -> [Help 1] 
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch. 
[ERROR] Re-run Maven using the -X switch to enable full debug logging. 
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles: 
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException 
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command 
[ERROR] mvn <goals> -rf :org.jbehave.osgi.core","non-feature containing"
"jbehave-web-selenium fails with firefox 13.0.1 Selenium 2.21.0 included in web-3.5.3 fails to start Firefox 13.0.1, please update to 2.24.1 

this even affects the unit tests for jbehave-web-3.5.3 themselves","non-feature containing"
"jenkins and hudson plugins are almost identical (pom, name and package-path are the only differences), this could be merged The files for jbehave-jenkins-plugin and jbehave-hudson-plugin are identical except for the pom, the name in a few places and the package-path for the java files. This could be merged into one ci plugin project and then have jenkins and hudson as sub-projects.","feature containing"
"login issue having issue in Login Step","non-feature containing"
"mark cut off stacktraces with ""..."" at the end When cutting off a stack trace a ""..."" should be added afterwards","feature containing"
"metaFilters ""-skip"" doesn't work while ""-skip true"" works The examples on the jbehave.org site consistently use ""-skip"" as meta filter to exclude stories marked with @skip true, which doesn't work, however ""-skip true"" works as expected. 

Either the parsing of the filter condition is broken or the examples could be changed to use ""-skip true"".","non-feature containing"
"null displays for Scenario name on the LocalFrameContextView when multithreading is used To reproduce: 
- Start from the jBehave-spring-archetype 
- Configure the Embedder to use more than 1 thread. Ie 
+ configuredEmbedder().embedderControls().useThreads(2); 
- Notice that in the ContextView it shows �null� for the Scenario name. If you run the same stories without using embedderControls the name displays correctly","non-feature containing"
"odf unit test fails due to cr/lf issue on Windows in Windows the story tests for odf fail due to cr/lf differences, I have added a comparison similar to other tests","non-feature containing"
"refactor methods narrateAnInterestingStory into one method the different methods narrateAnInterestingStory* are difficult to maintain since they are almost but not quite the same plus the line numbers for the stack traces change if the test methods are changed since the respective methods are included at the end of each class. Moving the method to another class should cause fewer line number changes later.","feature containing"
"template reports do not mark step parameter if it contains special chars with HTML_TEMPLATE 
{code}Given string abc{code} 
is marked, but 
{code}Given string <<<>>>{code} 
isn't.","non-feature containing"
"text changes to jenkins/hudson plugin the jenkins/hudson plugin mentions jbehave 3.x, for the next version this should be 3.x/4.x, while I'm at it I did a few text changes for the description","feature containing"
"the jbehave site is rendered as utf-8 but declares iso-8859-1 in the html header on pages with non-ascii text, the accented chars are displayed incorrectly, the site should declare utf-8 in the html header 

e.g. on http://jbehave.org/reference/stable/outcomes-table.html then french text is wrong.","non-feature containing"
"timeout should be applied to stories only Hi, 

as I read the specification of a timeout, it is setting the controls to let a story time out, when a specified amount of time has passed. By the name this is a setting per story. So, when I have a timeout of 300s per story, I should be able to have 100 stories, which take 250 seconds each. 

The way it is implemented is different, though. The StoryManager measures the start time right after it kicked off all stories, and is waiting for all of them to be completed. 

https://github.com/jbehave/jbehave-core/blob/master/jbehave-core/src/main/java/org/jbehave/core/embedder/StoryManager.java 

{code} 
public void waitUntilAllDoneOrFailed(BatchFailures failures) { 
long start = System.currentTimeMillis(); 
boolean allDone = false; 
while (!allDone) { 
allDone = true; 
for (RunningStory runningStory : runningStories.values()) { 
Future<ThrowableStory> future = runningStory.getFuture(); 
if (!future.isDone()) { 
allDone = false; 
long durationInSecs = storyDurationInSecs(start); 
long timeoutInSecs = embedderControls.storyTimeoutInSecs(); 
if (durationInSecs > timeoutInSecs) { 
Story story = runningStory.getStory(); 
StoryDuration storyDuration = new StoryDuration(durationInSecs, timeoutInSecs); 
embedderMonitor.storyTimeout(story, storyDuration); 
storyRunner.cancelStory(story, storyDuration); 
future.cancel(true); 
} 
break; 
} 
{code}","non-feature containing"
"unpack-view-resources goal requires resources to be in compile scope Because I run JBehave in the test scope of the same project that it is testing I cannot use the compile scope for JBehave dependencies. 

However, the maven unpack-view-resources goal requires the resources to be in compile scope. This means that they get included in my final WAR. 

When I switch them to test scope the unpack-view-resources goal doesn't find them. 

I suppose the best fix would be to allow the unpack-view-resources goal to have its scope configured in the same way as the run-stories goals.","feature containing"
"use steps from multiple step definition class for a single story I like to organize my steps in multiple class files. (because we have many steps in our application) 

Question is: how can we use the steps from multiple step definition classes to execute a single story. 


I use webdriver, I tried the following: 


BaseClass.java 
Instantiates the driver and opens the browser. 


LoginSteps.java inherit from BaseClass.java 
steps to login in application 

SearchSteps.java inherit from BaseClass.java 
Verify is elements is present. 
BUT here is my driver instance suddenly null. 


I think it has something to do with the way I execute my tests: 
@Override 
public InjectableStepsFactory stepsFactory() { 
return new InstanceStepsFactory(configuration(), new LoginSteps(), new searchPageSteps()); 
} 


Please tell what other information you need or what I have to do differently. 
Thanks","non-feature containing"
"using spring's <jdbc:embedded-database> tag calls the init script twice For my tests to run, I need a database. Since I like the speed of H2 and the ability to start with a clean database of in-memory databases, I want to use Spring Frameworks jdbc:embedded-database construct. 
I have the following in my my-steps.xml 
{code} 
<jdbc:embedded-database id=""rxDataSource"" type=""H2""> 
<jdbc:script location=""classpath:rx.sql"" /> 
</jdbc:embedded-database> 
{code} 
The file rx.sql contains SQL like ""create table"" and ""insert into table"" to get the database schema and sample data correct. 
When I run mvn integration-test or the MyStory runner, then I get an error that the first table in the list is already defined. 
I've traced it down to somehow the spring container is getting refresh() called and so it goes through and re-processes all the bean definitions, including running the sql script twice. 

I can clearly see (when I turn org.springframework logging to debug) that the script is successfully run once, then later on it's called again. 

Since this same technique is used in more traditional junit/spring based integration tests, I conclude that the issue is with jbehave.","non-feature containing"
"uuidWrappedFailure is null when failure occurs Hello ! 

I'm new to JBehave, I've run my project with version 3.7.3 until now without many problems. 

I just tried to use the 4.0-beta-2 version to have steps timings, looks to work well, but I have an issue in WebDriverScreenshotOnFailure.afterScenarioFailure() : 

The UUIDExceptionWrapper uuidWrappedFailure is NULL. 

I didn't change many things in my configuration from 3.7.3 to 4.x 

I do not have all the skills needed to catch why that value is null, maybe something wrong in the framework, or a misconfiguration from my part ? 

Here is the trace : 

org.jbehave.web.selenium.WebDriverScreenshotOnFailure.afterScenarioFailure(org.jbehave.core.failures.UUIDExceptionWrapper) (ECHEC) 
(org.jbehave.core.failures.BeforeOrAfterFailed: Method afterScenarioFailure (annotated with @AfterScenario in class org.jbehave.web.selenium.WebDriverScreenshotOnFailure) failed: java.lang.NullPointerException) 

org.jbehave.core.failures.BeforeOrAfterFailed: Method afterScenarioFailure (annotated with @AfterScenario in class org.jbehave.web.selenium.WebDriverScreenshotOnFailure) failed: java.lang.NullPointerException 
at org.jbehave.core.steps.StepCreator$BeforeOrAfterStep.perform(StepCreator.java:462) 
at org.jbehave.core.steps.StepCreator$FailureStep.doNotPerform(StepCreator.java:519) 
at org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:285) 
... 

Thanks a lot !","non-feature containing"
"web archetype java-spring contains all java files twice the archetype files for java-spring all appear once as $packagename and once as $packagename/etsy. The files that are actually updated by the script are the ones in $packagename. 
I have deleted the unused files (the files are identical except for some unused imports).","feature containing"
"when i am executing mvn integration-test, my project get compiled and generates the specified directories in target folder but it does not launch my application through browser when i am executing mvn integration-test, my project get compiled and generates the specified directories successfully inside target folder but it does not launch my application through browser after coping the stories files inside respective classes folder 
even all get ran successfully through eclipse","non-feature containing"
"withRelativeDirectory appears to be broken I'm working in a non maven environment. I attempted to set the output directory for reports as follows 

public static class MyReportBuilder extends StoryReporterBuilder { 
public MyReportBuilder() { 
super(); 
this.withRelativeDirectory(""../build/publish/story-reports""); 
this.withFormats(CONSOLE, HTML, XML); 
} 
} 

Upon running the JUnits I get the following: 

org.jbehave.core.reporters.FilePrintStreamFactory$PrintStreamCreationFailed: Failed to create print stream for file /home/derek/workspace/smsManagerGit/target/../build/publish/story-reports/BeforeStories.html 
at org.jbehave.core.reporters.FilePrintStreamFactory.createPrintStream(FilePrintStreamFactory.java:39) 
at org.jbehave.core.reporters.Format$4.createStoryReporter(Format.java:43) 
at org.jbehave.core.reporters.StoryReporterBuilder.reporterFor(StoryReporterBuilder.java:310) 
at org.jbehave.core.reporters.StoryReporterBuilder.build(StoryReporterBuilder.java:285) 
at org.jbehave.core.configuration.Configuration.storyReporter(Configuration.java:200) 
at org.jbehave.core.embedder.StoryRunner.runBeforeOrAfterStories(StoryRunner.java:58) 
at org.jbehave.core.embedder.Embedder.runStoriesAsPaths(Embedder.java:209) 
at au.com.sensis.wireless.smsmanager.integration.bdd.stories.AnnotatedStoryEmbedder.run(AnnotatedStoryEmbedder.java:48) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
at java.lang.reflect.Method.invoke(Method.java:597) 
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44) 
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) 
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41) 
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) 
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28) 
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31) 
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:73) 
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:46) 
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:180) 
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41) 
at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173) 
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28) 
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31) 
at org.junit.runners.ParentRunner.run(ParentRunner.java:220) 
at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49) 
at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390) 
at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) 
Caused by: java.io.FileNotFoundException: /home/derek/workspace/smsManagerGit/target/../build/publish/story-reports/BeforeStories.html (No such file or directory) 
at java.io.FileOutputStream.open(Native Method) 
at java.io.FileOutputStream.<init>(FileOutputStream.java:179) 
at org.jbehave.core.reporters.FilePrintStreamFactory$FilePrintStream.<init>(FilePrintStreamFactory.java:137) 
at org.jbehave.core.reporters.FilePrintStreamFactory.createPrintStream(FilePrintStreamFactory.java:37) 
... 31 more 

Commenting out the withRelativeDirectory() method and everything works just fine.","non-feature containing"
